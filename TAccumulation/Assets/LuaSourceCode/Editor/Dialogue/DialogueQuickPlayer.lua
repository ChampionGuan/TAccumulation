---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by junjun003.
--- DateTime: 2023/1/5 14:31
---
local DialogueQuickPlayer = class("DialogueQuickPlayer")

---
local function Init()
    --TODO挪到通用的OfflineMode去
    Res.SetABUnloadParameter(true)
    Res.SetFileLoaderMaxReleaseCount(1000000)
    CS.UnityEngine.Application.targetFrameRate = 30
    ---设置字体的Fallback关系
    local fontUtil = require("Runtime.System.X3Game.Modules.InputFieldAndFont.FontUtil")
    fontUtil.ForceReloadFontAsset(Locale.GetLang())

    require("Runtime.System.X3Game.X3GameInit")
    WwiseMgr.SetBankWhiteList({ "UI_Common", "Music_Interface", "Function", "Music_Playlist" })
    GameSoundMgr.Init()
    SelfProxyFactory.GetMainInteractProxy():Clear()
    BllMgr.GetSystemSettingBLL():InitGraphicsSetting()
    BllMgr.GetSystemSettingBLL():ChangeGraphice(4)
    require("Runtime.System.X3Game.Modules.Common.GameInitializer").Init()
    local x3AnimatorDataProvider = require("Runtime.System.X3Game.Modules.CutSceneAndAnimation.X3AnimatorDataProvider").new()
    CS.X3Game.X3Animator.Initialize(x3AnimatorDataProvider)
    CS.PapeGames.CutScene.DefaultCutSceneContext.UIPrefab = Res.LoadWithAssetPath("Assets/Build/Res/GameObjectRes/BasicWidget/CutSceneUI.prefab", AutoReleaseMode.None)
    CS.PapeGames.CutScene.CutSceneCtrl.context:SetUICamera(UIMgr.GetUICamera())
    CS.PapeGames.CutScene.CutSceneHelper.MainCamera = CS.X3Game.CameraUtility.MainCamera
    ---设置GameObject池的释放时间
    local x3AssetInsProvider = CS.PapeGames.X3.X3AssetInsProvider.Instance
    x3AssetInsProvider.TickCondReleaseTime = 5
    x3AssetInsProvider.TickCondReleaseCount = 1000
    --提前初始化Cts相关表格，防止Lazy模式第一次初始化json解析卡顿
    local tableToMessagePacker = PoolUtil.GetTable()
    local partConfigAll = table.clone(LuaCfgMgr.GetAll("PartConfig"), true)
    if partConfigAll then
        table.dictoarray(partConfigAll, tableToMessagePacker)
        CS.X3.Testbed.TablePartConfig.Inject(tableToMessagePacker)
        table.clear(tableToMessagePacker)
    end
    local modelAssetAll = table.clone(LuaCfgMgr.GetAll("ModelAsset"), true)
    if modelAssetAll then
        table.dictoarray(modelAssetAll, tableToMessagePacker)
        CS.X3.Testbed.TableModelAsset.Inject(tableToMessagePacker)
        table.clear(tableToMessagePacker)
    end
    local cutSceneAssetAll = table.clone(LuaCfgMgr.GetAll("CutSceneAsset"), true)
    if cutSceneAssetAll then
        table.dictoarray(cutSceneAssetAll, tableToMessagePacker)
        CS.PapeGames.CutScene.CutSceneAssetCfg.Inject(tableToMessagePacker)
        table.clear(tableToMessagePacker)
    end
    PoolUtil.ReleaseTable(tableToMessagePacker)
    WwiseMgr.DisableAutoUnloadUnusedBanks()
    UIMgr.Init()
    --region 造假数据
    ---@type pbcmessage.SyncUserTotalDataReply
    ---@type pbcmessage.ClientBase
    local Base = { }
    Base.Name = "猎人"
    Base.FamilyName = "深空"
    SelfProxyFactory.GetPlayerInfoProxy():OnEnterGame(100000, { }, Base, {}, {})
    ---@type pbcmessage.RoleBase
    local role = { }
    role = { }
    role.RoleMap = { }
    role.RoleMap[1] = { Id = 1, LoveLevel = 1, LovePoint = 1, Status = 1 }
    role.RoleMap[2] = { Id = 2, LoveLevel = 1, LovePoint = 1, Status = 1 }
    role.RoleMap[5] = { Id = 5, LoveLevel = 1, LovePoint = 1, Status = 1 }
    BllMgr.GetRoleBLL():Init(role)
    --endregion

    local controller = DialogueManager.InitByName("QuickPlayer")
    controller:SetDialogueUseDefaultSetting(true)
    controller:GetSettingData():SetShowPauseButton(true)
    controller:GetSettingData():SetShowPlaySpeedButton(true)
    BllMgr.GetDialogueBLL():SetDebugCanLongPressSkip(true)

    DialogueQuickPlayer.controller = controller
end

---初始化剧情
---@param dialogueInfoId int
function DialogueQuickPlayer:InitDialogue(dialogueInfoId)
    self.virtualCamera = GlobalCameraMgr.CreateVirtualCamera(CameraModePath.AutoSyncMode)
    self.system = self.controller:InitDialogue(dialogueInfoId)
end

---清理剧情
---@param dialogueInfoId int
function DialogueQuickPlayer:ClearDialogue(dialogueInfoId)
    self.system = nil
    CutSceneMgr.StopAll()
    if self.virtualCamera then
        GlobalCameraMgr.DestroyVirtualCamera(self.virtualCamera)
        self.virtualCamera = nil
    end
    self.controller:ClearDialogue(dialogueInfoId)
    UICommonUtil.CloseScreen()
    local ppv = PostProcessVolumeMgr.GetPPV2()
    ppv:DeactivateAllFeatures()
    PostProcessVolumeMgr.DeactiveAllAnimPPV()
    SceneMgr.ClearScene2DEffect()
end

---播放剧情
---@param dialogueInfoId int
---@param uniqueId int
---@param callback fun 播放回调
function DialogueQuickPlayer:StartDialogueById(dialogueInfoId, uniqueId, callback)
    return self.controller:StartDialogueById(dialogueInfoId, math.floor(uniqueId / 10000),
            uniqueId % 10000, nil, callback)
end

---播放剧情
---@param dialogueInfoId int
---@param conversationId int
---@param callback fun 播放回调
function DialogueQuickPlayer:StartDialogueByConversationId(dialogueInfoId, conversationId, callback)
    return self.controller:StartDialogueById(dialogueInfoId, conversationId,
            nil, nil, callback)
end

---播放剧情
---@param dialogueInfoId int
---@param callback fun 播放回调
function DialogueQuickPlayer:StartDialogue(dialogueInfoId, callback)
    local dialogueInfo = LuaCfgMgr.Get("DialogueInfo", dialogueInfoId)
    return self.controller:StartDialogueById(dialogueInfoId, dialogueInfo.StartConversation, nil, nil, callback)
end

---恢复剧情
---@param dialogueInfoId int
---@param uniqueId int
---@param callback fun 播放回调
---@return bool
function DialogueQuickPlayer:RecoverDialogue(dialogueInfoId, uniqueId, callback)
    local successed, recordList = self:GetRecordList(dialogueInfoId, uniqueId)
    if successed then
        return self.controller:RecoverDialogue(dialogueInfoId, recordList, nil, callback)
    else
        pcall(callback)
    end
    return 0
end

---停止剧情
---@param dialogueInfoId int
function DialogueQuickPlayer:EndDialogue(dialogueInfoId)
    self.controller:EndDialogue(dialogueInfoId)
    CutSceneMgr.StopAll()
end

---
---@param dialogueInfoId int
---@param targetUniqueId int
---@return bool, pbcmessage.DialogueRecord[]
function DialogueQuickPlayer:GetRecordList(dialogueInfoId, targetUniqueId)
    local dialogueInfo = LuaCfgMgr.Get("DialogueInfo", dialogueInfoId)
    local database = DialogueManager.LoadDatabase(dialogueInfo.Name)
    local recordList = {}
    local startConversation = database:GetConversation(dialogueInfo.StartConversation)
    local startNode = database:GetFirstDialogueEntry(startConversation)
    local waitQueue = { startNode.uniqueID }
    ---已经检查过的分支节点列表
    local checkedNode = {}
    local successed = false
    while #waitQueue > 0 and not successed do
        local curUniqueId = table.remove(waitQueue, #waitQueue)
        checkedNode[curUniqueId] = true
        --当前排查ID和历史记录里的最后一个相等时，需要移除最后一个记录
        local curEntry = database:GetDialogueEntryByUniqueID(curUniqueId)
        if curEntry.conditionType == DialogueEnum.DialogueConditionType.Dialogue then
            if curEntry.outgoingLinks then
                local nextNodeCnt = #curEntry.outgoingLinks
                for i = 1, nextNodeCnt do
                    local link = curEntry.outgoingLinks[i]
                    if DialogueManager.IsMutedLink(dialogueInfo.Name, link) == false then
                        local nextUniqueId = link.destinationConversationID * 10000 + link.destinationDialogueID
                        if nextUniqueId == targetUniqueId then
                            table.insert(recordList, #recordList + 1, { Id = curUniqueId, NextID = nextUniqueId })
                            successed = true
                            break
                        elseif not checkedNode[nextUniqueId] then
                            if #recordList == 0 then
                                ---添加一个起始的
                                table.insert(recordList, #recordList + 1, { Id = curUniqueId, NextID = nextUniqueId })
                            end
                            table.insert(waitQueue, #waitQueue + 1, nextUniqueId)
                        end
                    end
                end
            end
        else
            local settedNextLink = DialogueManager.GetSettedLink(database, curUniqueId)
            if settedNextLink then
                local nextUniqueId = settedNextLink.destinationConversationID * 10000 + settedNextLink.destinationDialogueID
                if not checkedNode[nextUniqueId] then
                    table.insert(recordList, #recordList + 1, { Id = curUniqueId, NextID = nextUniqueId })
                    if nextUniqueId == targetUniqueId then
                        successed = true
                        break
                    else
                        table.insert(waitQueue, #waitQueue + 1, nextUniqueId)
                    end
                end
            else
                if curEntry.outgoingLinks then
                    local nextNodeCnt = #curEntry.outgoingLinks
                    local branchAdded = false
                    for i = 1, nextNodeCnt do
                        local link = curEntry.outgoingLinks[i]
                        if DialogueManager.IsMutedLink(dialogueInfo.Name, link) == false then
                            local nextUniqueId = link.destinationConversationID * 10000 + link.destinationDialogueID
                            if not checkedNode[nextUniqueId] then
                                if nextUniqueId == targetUniqueId then
                                    successed = true
                                    break
                                elseif branchAdded == false then
                                    if recordList and #recordList > 0 and recordList[#recordList].Id == curUniqueId then
                                        table.remove(recordList, #recordList)
                                    end
                                    table.insert(recordList, #recordList + 1, { Id = curUniqueId, NextID = nextUniqueId })
                                    table.insert(waitQueue, #waitQueue + 1, curUniqueId)
                                    table.insert(waitQueue, #waitQueue + 1, nextUniqueId)
                                end
                                branchAdded = true
                            end
                        end
                    end
                end
            end
        end
    end
    return successed, recordList
end

Init()

return DialogueQuickPlayer