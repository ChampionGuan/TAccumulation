---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by jiaozhu.
--- DateTime: 2022/7/4 16:01
--- 喵喵牌工具

---@type CatCardConst
local CatCardConst = require("Runtime.System.X3Game.Modules.CatCard.Data.CatCardConst")
local CatCardEditor = {}
local this = CatCardEditor
local cardId = 0
local playerType = 0

---@param pos_idx int
function CatCardEditor.ShowGetCard(pos_idx)
    pos_idx = pos_idx or 1
    local card_id = 0
    local player_type = playerType or CatCardConst.PlayerType.PLAYER
    ---@type CatCard.GetCardActionData
    local action_data = BllMgr.GetCatCardBLL():GetActionData(CatCardConst.ActionType.GetCard, player_type, function()
        EventMgr.Dispatch(CatCardConst.Event.CAT_CARD_REFRESH_MODELS, CatCardConst.CardType.CARD)
    end)
    local card_data = BllMgr.GetCatCardBLL():GetData(CatCardConst.CardType.CARD, pos_idx, player_type)
    if card_data then
        card_id = card_data:GetId()
    else
        card_id = CatCardConst.DEFAULT_CARD_ID
    end
    action_data:Set(card_id, 1)
    action_data:Begin()
end

---获得立牌面卡牌
function CatCardEditor.ShowGetDiscardCard(pos_idx)
    pos_idx = pos_idx or 1
    local player_type = playerType or CatCardConst.PlayerType.PLAYER
    local card_id = 0
    ---@type CatCard.GetCardActionData
    local action_data = BllMgr.GetCatCardBLL():GetActionData(CatCardConst.ActionType.GetCard, player_type, function()
        EventMgr.Dispatch(CatCardConst.Event.CAT_CARD_REFRESH_MODELS, CatCardConst.CardType.CARD)
    end)
    local node = action_data.bll:GetFuncNodeByIndex(11 - pos_idx)
    local card_list = action_data.bll:GetDataList(CatCardConst.CardType.CARD, playerType)
    local card_data
    for i, v in pairs(card_list) do
        if v:GetSubType() == CatCardConst.CatCardType.Func then
            card_data = v
            break
        end
    end
    if card_data then
        card_id = card_data:GetId()
    else
        card_id = CatCardConst.DEFAULT_FUNC_CARD_ID
    end
    action_data:Set(card_id, 1)
    action_data:SetStackPosNode(node.gameObject)
    action_data:Begin()
end

---@param pos_idx int
function CatCardEditor.ShowPlayCard(pos_idx)
    ---@type CatCard.PopCardActionData
    local action_data = BllMgr.GetCatCardBLL():GetActionData(CatCardConst.ActionType.PopFuncCard, playerType)
    action_data:Set(cardId or CatCardConst.DEFAULT_FUNC_CARD_ID, pos_idx)
    action_data:Begin()
end

---@param pos_idx int
function CatCardEditor:DrawFuncDiscard(pos_idx)
    ---@type CatCard.DrawFuncDiscardActionData
    local action_data = BllMgr.GetCatCardBLL():GetActionData(CatCardConst.ActionType.DrawFuncDiscard, playerType)
    action_data:SetCards({ 2202 })
    action_data:Begin()
end

---@param move_speed float
---@param move_ease_type DG.Tweening.Ease
function CatCardEditor.ChangeMove(move_speed, move_ease_type)
    if playerType == CatCardConst.PlayerType.PLAYER then
        CatCardConst.CARD_SPEED = move_speed
        CatCardConst.MOVE_EASY_TYPE = move_ease_type
    else
        local conf = CatCardConst.PlayerTypeConf[playerType]
        local data = BllMgr.GetCatCardBLL():GenData(CatCardConst.CardType.CARD, cardId, 0)
        if data:IsFuncCard() then
            if data:GetEffectId() == CatCardConst.FuncCardType.VETOCARD then
                conf.play_veto_card_speed = move_speed
                conf.play_veto_card_easy_type = move_ease_type
            else
                conf.play_func_card_speed = move_speed
                conf.play_func_card_easy_type = move_ease_type
            end
        end
        BllMgr.GetCatCardBLL():ReleaseData(data)
    end
end

---@param scale_dt float
---@param scale_ease_type DG.Tweening.Ease
function CatCardEditor.ChangeScale(scale_dt, scale_ease_type)
    CatCardConst.CARD_SCALE_DT = scale_dt
    CatCardConst.SCALE_EASY_TYPE = scale_ease_type
end

---@param rotation_dt float
---@param rotation_easy_type DG.Tweening.Ease
function CatCardEditor.ChangeRotation(rotation_dt, rotation_easy_type)
    if playerType == CatCardConst.PlayerType.PLAYER then
        CatCardConst.CARD_ROTATION_DT = rotation_dt
        CatCardConst.ROTATION_EASY_TYPE = rotation_easy_type
    else
        local conf = CatCardConst.PlayerTypeConf[playerType]
        local data = BllMgr.GetCatCardBLL():GenData(CatCardConst.CardType.CARD, cardId, 0)
        if data:IsFuncCard() then
            if data:GetEffectId() == CatCardConst.FuncCardType.VETOCARD then
                conf.play_veto_card_rotation_dt = rotation_dt
                conf.play_veto_card_rotation_easy_type = rotation_easy_type
            else
                conf.play_func_card_rotation_dt = rotation_dt
                conf.play_func_card_rotation_easy_type = rotation_easy_type
            end
        end
        BllMgr.GetCatCardBLL():ReleaseData(data)
    end
end

---@param card_id int
---@param player_type CatCardConst.PlayerType
function CatCardEditor.ChangeCard(card_id, player_type)
    cardId = card_id
    playerType = player_type
end
return CatCardEditor