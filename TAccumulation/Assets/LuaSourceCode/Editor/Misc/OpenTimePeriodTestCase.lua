---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by junjun003.
--- DateTime: 2022/12/26 17:57
---

---一个测试用例
---@class OpenTimePeriodTestCase
local OpenTimePeriodTestCase = class("OpenTimePeriodTestCase")
local OpenTimeData = require("Runtime.System.X3Game.Modules.OpenTime.OpenTimeData")
local CS_DateTimeOffset = CS.System.DateTimeOffset
local CS_TimeSpan = CS.System.TimeSpan

local TestCase = {
    --全天
    { timeType = 0, timePara = "" },
    --每年每月每天固定时间
    { timeType = 0, timePara = "14-15" },
    --固定某天全天
    { timeType = 0, timePara = "26" },
    --固定某天固定时间段
    { timeType = 0, timePara = "26=15:30-20:30" },
    --固定某月整月
    { timeType = 0, timePara = "1200" },
    --固定某月整月某段
    { timeType = 0, timePara = "1200=14-17" },
    --固定某月某天
    { timeType = 0, timePara = "1226" },
    --固定某月某天某段
    { timeType = 0, timePara = "1226=14:30-15:30" },
    --固定整年
    { timeType = 0, timePara = "20220000" },
    --固定某年某段
    { timeType = 0, timePara = "20220000=14-15" },
    --固定某年某日
    { timeType = 0, timePara = "20220026" },
    --固定某年某日某段
    { timeType = 0, timePara = "20220026=15:30-18:30" },
    --固定某年某月
    { timeType = 0, timePara = "20221200" },
    --固定某年某月某段
    { timeType = 0, timePara = "20221200=15:30-18:30" },
    --固定某年某月某日
    { timeType = 0, timePara = "20221226" },
    --固定某年某月某日某段
    { timeType = 0, timePara = "20221226=15:30-18:30" },
    --不限段
    { timeType = 1, timePara = "1" },
    --不限段
    { timeType = 1, timePara = "1|3|5" },
    --不限段
    { timeType = 1, timePara = "2|3|4" },
    --不限段
    { timeType = 1, timePara = "1|2=16-18|4|5|7=17-19" },
    --绝对时间段
    { timeType = 2, timePara = "20221224-20221231" },
}

---测试用例
---@param curTimestamp int
function OpenTimePeriodTestCase:TestCase(curTimestamp)
    local data = OpenTimeData.new()
    for _, v in pairs(TestCase) do
        data:Parse(v.timeType, v.timePara)
        local isInOpenTime = data:IsInOpenTime(curTimestamp)
        local startTime, endTime = data:GetNearestOpenTime(curTimestamp)
        if startTime > 0 and endTime > 0 then
            local startTimeOffset = CS_DateTimeOffset.FromUnixTimeSeconds(startTime)
            startTimeOffset = startTimeOffset:ToOffset(CS_TimeSpan(TimerMgr.GetTimeZone(), 0, 0))
            local endTimeOffset = CS_DateTimeOffset.FromUnixTimeSeconds(endTime)
            endTimeOffset = endTimeOffset:ToOffset(CS_TimeSpan(TimerMgr.GetTimeZone(), 0, 0))
            Debug.LogFormat("%s-%s-%s-%s-%s", v.timeType, v.timePara, isInOpenTime, startTimeOffset:ToString(), endTimeOffset:ToString())
        else
            Debug.LogFormat("%s-%s-%s-%s-%s", v.timeType, v.timePara, isInOpenTime, startTime, endTime)
        end
    end
end

return OpenTimePeriodTestCase