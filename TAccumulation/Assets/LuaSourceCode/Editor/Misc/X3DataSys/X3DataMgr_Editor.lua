---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by canghai.
--- DateTime: 2022/11/23 11:21
---

local X3DataMgr = require("Runtime.System.X3Game.Modules.X3Data.X3DataMgr")

---- Local 变量 ----
local X3DataSetHolder
--TODO 临时测试
local ShowTable = { LuaTable = { A = 1, B = false, C = "HAHAHA", D = { a = 1, b = false, c = "HAHAHA", [111] = 111, E = { a = 1, b = false, c = "HAHAHA", [111] = 111 } }, [222] = 222 } }
local ShowJsonTable = {}

---@private
function X3DataMgr._GetShowLuaTable()
    return ShowTable
end

---@private
---@param path string
---@return table
function X3DataMgr._GetShowJsonTable(path)
    local jsonStr = CS.PapeGames.X3.FileUtility.ReadText(path)
    local result = JsonUtil.Decode(jsonStr)
    result = result ~= nil and result or {}
    ShowJsonTable.JsonData = result
    return ShowJsonTable
end

---@private
---@param path string
function X3DataMgr._SaveShowJsonTable(path)
    local jsonStr = JsonUtil.Encode(ShowJsonTable.JsonData)
    CS.PapeGames.X3.FileUtility.WriteText(path, jsonStr)
end

---设置需要显示在Editor下的LuaTable
---@param value table
function X3DataMgr.SetShowLuaTable(value)
    if type(value) == "table" then
        ShowTable.LuaTable = value
    end
end

---@private
---@param tab table
---@return string
function X3DataMgr._GetTableStr(tab)
    if tostring ~= nil then
        return tostring(tab) 
    end
    
    return "table"
end

---编辑器使用获取 UnityEditor下当前的x3DataSet
---@private
---@return table
function X3DataMgr._GetX3DataSetWithHolder()
    --封一层便于编辑器
    if X3DataSetHolder == nil then
        X3DataSetHolder = PoolUtil.GetTable()
    end
    X3DataSetHolder.X3DataSet = X3DataMgr._GetX3DataSet()
    return X3DataSetHolder
end

---获取给定X3Data的类型 map array number boolean string XXX
---@private
---@param data any
---@param dataKey any 当前数据在持有者中的key
---@param dataHolder table 当前数据的持有者
---@return string
function X3DataMgr._GetDataType(data, dataKey, dataHolder)
    local dataType = type(data)
    if type(data) == "number" then
        if type(dataHolder) == "table" and dataHolder.__cname == "X3DataBase" then
            --X3Data的字段
            return dataHolder:_GetFieldType(dataKey)
        else
            -- 整数 integer 浮点数 float
            return math.type(data)
        end
    end

    --除了整数外基础类型
    if type(data) ~= "table" then
        return dataType
    end

    --X3DataSet的array
    if dataHolder ~= nil and dataHolder.__cname == "X3DataSet" then
        if data.__isMap ~= nil then
            return "map"
        end
        return "array"
    end

    -- 普通table
    if data.__X3DataBase == nil then
        -- 所有者是X3Data
        if dataHolder ~= nil and dataHolder.__X3DataBase ~= nil then
            return dataHolder:_GetFieldType(dataKey)
        end

        for k, _ in pairs(data) do
            if type(k) ~= "number" then
                return "map"
            end
        end
        return "array"
    end

    -- X3Data
    if data.__X3DataBase ~= nil then
        return data.__cname
    end
    return ""
end

---@private
---@param dataSet table
---@return boolean
function X3DataMgr._X3DataSetCheck(dataSet)
    if dataSet == nil or type(dataSet) ~= "table" then
        return false
    end

    if dataSet.__cname == "X3DataSet" then
        return true
    end
    return false
end

---清空X3DataSet
---@private
function X3DataMgr._ClearX3DataSet()
    local result = PoolUtil.GetTable()
    local x3DataSet = X3DataMgr._GetX3DataSet()
    x3DataSet:Clear(result)
    for _, x3Data in pairs(result) do
        X3DataMgr.Release(x3Data)
    end
    PoolUtil.ReleaseTable(result)
end

return X3DataMgr