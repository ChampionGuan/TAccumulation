---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by jianxin.
--- DateTime: 2022/4/25 15:15
---

local TableTypeTools = class("TableTypeTools")

function TableTypeTools:ctor()
    ---@type table 资源名为key， 对应相关数据
    --self.fileNameDic = {}
    self.tableType = {}
    self:Init()
end

function TableTypeTools:Init()
    local assetTablePath = string.concat(CS.UnityEngine.Application.dataPath, "/../../Binaries/Tables/Output/assets_sheet_info.json")
    local jsonStr = io.readfile(assetTablePath)
    self.tableType = JsonUtil.Decode(jsonStr)

    -----索引访问时的回调
    self.indexCallback = nil
    --self:FillSourceDic(self.tableType)
end

---注册索引回调
---@param callback function
function TableTypeTools:SetIndexCallback(callback)
    self.indexCallback = callback
end

---填充sourceDic
function TableTypeTools:FillSourceDic(dataDic)
    --for tableName, dataList in pairs(dataDic) do
    --    for index, data in pairs(dataList) do
    --        if(data.DataType == SubPackageConst.DataType.UIAbbr1) then
    --            ---图片不会重名
    --            self.fileNameDic[data.DataSample] = data
    --        end
    --    end
    --end
end

function TableTypeTools:GetSourceData(sourceName)
    --return self.fileNameDic[sourceName]
end

---@param tableName string
---@param key any
---@param source string
---@param examineInclude int
---@return SubPackageConst.AssetResData[]
function TableTypeTools:GetTableTypeRes(tableName, key, source, examineInclude)
    local tab = {}
    local cfgData = LuaCfgMgr.Get(tableName, key)
    if cfgData == nil then
        return tab
    end
    if (self.indexCallback and source) then
        self.indexCallback(tableName, key, source)
    end
    local tempInclude = cfgData.ExamineInclude or 1
    examineInclude = self:GetExamineInclude(examineInclude, tempInclude)
    tab = self:GetTableKeyRes(tableName, cfgData, source, nil, examineInclude)
    return tab
end

---@param tableName string
---@param cfgData table
---@param source string
---@param examineInclude int
---@return SubPackageConst.AssetResData[]
function TableTypeTools:GetTableKeyRes(tableName, cfgData, source, isForce, examineInclude)
    local tab = {}
    local typeTab = self.tableType[tableName]
    for k, v in pairs(typeTab) do
        if (not isForce) then
            isForce = v.Force == 1 and true or false
        end
        local strTab = string.split(v.DataType, ".")
        local type = strTab[1]
        local tempTableName = strTab[2]
        local value = cfgData[tostring(k)]
        if value ~= nil then
            if type == "Table" then
                if v.FiledType == "[]string" or v.FiledType == "[]int" or v.FiledType == "[]String" then
                    for i, v1 in ipairs(value) do
                        local tempData_cfg = LuaCfgMgr.Get(tempTableName, v1)
                        if tempData_cfg ~= nil then
                            local tempInclude = tempData_cfg.ExamineInclude or 1
                            examineInclude = self:GetExamineInclude(examineInclude, tempInclude)
                            table.insertto(tab, self:GetTableKeyRes(tempTableName, tempData_cfg, source, isForce, examineInclude))
                            if (source) then
                                if (self.indexCallback) then
                                    self.indexCallback(tempTableName, v1, source)
                                end
                            end
                        end
                    end
                else
                    local tempData_cfg = LuaCfgMgr.Get(tempTableName, value)
                    if tempData_cfg ~= nil then
                        local tempInclude = tempData_cfg.ExamineInclude or 1
                        examineInclude = self:GetExamineInclude(examineInclude, tempInclude)
                        table.insertto(tab, self:GetTableKeyRes(tempTableName, tempData_cfg, source, isForce, examineInclude))
                        if (source) then
                            if (self.indexCallback) then
                                self.indexCallback(tempTableName, value, source)
                            end
                        end
                    end
                end
            elseif type == "Mix" then
                --Table 也会索引到mix 处理一下
                table.insertto(tab, MixTypeTools:MixTypeDisposeWithType(strTab[2], value, examineInclude))
            else
                ---@type SubPackageConst.AssetResData
                local assetValue = {}
                assetValue.type = strTab[2]
                assetValue.value = value
                assetValue.force = isForce
                assetValue.examineInclude = examineInclude
                if source then
                    assetValue.source = source
                end
                tab[#tab + 1] = assetValue
            end
        end
    end
    return tab
end

function TableTypeTools:GetTableType()
    return self.tableType
end

---索引表提审标签对比
---@param examineInclude1 int 原数据
---@param examineInclude2 int 索引表数据
---@return int
function TableTypeTools:GetExamineInclude(examineInclude1, examineInclude2)
    if examineInclude1 == 0 then
        return 0
    end
    if examineInclude2 == 0 then
        return 0
    end
    if examineInclude1 == 1 and examineInclude2 ~= 0 then
        return examineInclude1
    end
    if examineInclude1 == 2 and examineInclude2 ~= 0 then
        return examineInclude1
    end
    return examineInclude1
end

return TableTypeTools