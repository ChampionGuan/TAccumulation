---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by pc.
--- DateTime: 2020/10/30 16:39
---
local random = math.random

-- start --

--------------------------------
-- 对数值进行四舍五入，如果不是数值则返回 0
-- @function [parent=#math] round
-- @param number value 输入值
-- @return number#number

-- end --

---@param value number
---@return int
function math.round(value)
    value = checknumber(value)
    return math.floor(value + 0.5)
end

-- start --

--------------------------------
-- 角度转弧度
-- @function [parent=#math] angle2radian

-- end --

---@param angle float
---@return float
function math.angle2radian(angle)
    return angle * math.pi / 180
end

-- start --

--------------------------------
-- 弧度转角度
-- @function [parent=#math] radian2angle

-- end --
---@param radian float
---@return float
function math.radian2angle(radian)
    return radian / math.pi * 180
end

---小数转换
---@param num number
---@param n int 几位小数
---@return int
function math.getdecimal(num, n)
    if type(num) ~= "number" then
        return num;
    end
    n = n and math.floor(n) or 0
    if n < 0 then
        n = 0
    end
    local n_decimal = 10 ^ n
    return math.floor(num * n_decimal) / n_decimal
end

---数字转换成小数
---@param num number
---@param n int 位数
---@return int
function math.numbertodecimal(num, n)
    if not num then
        return
    end
    if type(num) ~= "number" then
        return num;
    end
    n = n and math.floor(n) or 0
    if n < 0 then
        n = 0
    end
    local n_decimal = 10 ^ n
    return math.getdecimal(num / n_decimal, n)
end

---小数转换成number
---@param num number
---@param n int
---@return int
function math.decimaltonumber(num, n)
    if not num then
        return
    end
    if type(num) ~= "number" then
        return num;
    end
    n = n and math.floor(n) or 0
    if n < 0 then
        n = 0
    end
    local n_decimal = 10 ^ n
    return math.floor(math.getdecimal(num, n) * n_decimal)
end

---求阶乘
---@param n int
---@return int
function math.factorial(n)
    if not n then
        return 0
    end
    if n == 0 then
        return 1
    else
        return n * math.factorial(n - 1)
    end
end

---幂次方
---@param a number
---@param b number
---@return number
function math.pow(a, b)
    if not a or not b then
        return 0
    end
    return a ^ b
end

---@public 限制value的范围
---@param value number
---@param min number
---@param max number
---@return number
function math.clamp(value, min, max)
    if value < min then
        value = min
    end
    if value > max then
        value = max
    end
    return value
end

---随机[min,max]
---@param min number
---@param max number
---@param seed number
---@return number
function math.random(min, max, seed)
    if seed then
        math.randomseed(seed)
    end
    if not min then
        return random()
    end
    if not max then
        return random(min)
    end
    return random(min, max)
end

---百分之50的概率随机
---@return boolean
function math.randombool()
    local random = math.random(1, 100)
    if random <= 50 then
        return true
    end
end


---@param weights number[]
---@param seed int
---@return int
function math.randombyweights(weights,seed)
    if not weights then
        return -1
    end
    if seed then
        math.randomseed(seed)
    end
    local total = 0
    for k,v in ipairs(weights) do
        total = total+v
    end
    local r = math.random(0,total)
    total = 0
    for k,v in ipairs(weights) do
        total = total + v
        if r<total then
            return k
        end
    end
    return math.random(1,#weights)
end