---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by jiaozhu.
--- DateTime: 2022/8/12 14:17
---
---@class Log
local Log = class("Log")
local LUA_PRINT_PREFIX = "[LUA]"
local LUA_FRAME_PREFIX = "Frame(%s)"
local LOG_TAG_FORMAT = "[%s]"

---@class Log.LogLevel
local LogLevel = {
    Log = 1,
    Warn = 2,
    Error = 3,
    Fatal = 4,
}

---@class Log.LogLevelTag
local LogLevelTag = {
    Log = "[Log]",
    Warn = "[Warning]",
    Error = "[Error]",
    Fatal = "[Fatal]",
}
Log.LogLevel = LogLevel
Log.LogLevelTag = LogLevelTag

--region 初始化
function Log:ctor()
    ---@type Log.LogLevel
    self.logLevel = LogLevel.Log
    ---@type string
    self.logTag = ""
    ---@type fun():int
    self.getFrame = nil
    ---@type function
    self.log = print
    ---@type function
    self.logError = print
    ---@type function
    self.logWarn = print
    ---@type bool
    self.logEnable = true
end
--endregion

--region 日志输出
---@vararg any
function Log:Log(...)
    if self:IsEnabled(LogLevel.Log) then
        self.log(self:GetLogStr(LogLevelTag.Log, ...))
    end

end

---@param formatStr string
---@vararg any
function Log:LogFormat(formatStr, ...)
    if self:IsEnabled(LogLevel.Log) then
        self.log(self:GetLogStr(LogLevelTag.Log, string.format(formatStr, ...)))
    end
end

---@vararg any
function Log:LogWarning(...)
    if self:IsEnabled(LogLevel.Warn) then
        self.logWarn(self:GetLogStr(LogLevelTag.Warn, ...))
    end
end

---@param formatStr string
---@vararg any
function Log:LogWarningFormat(formatStr, ...)
    if self:IsEnabled(LogLevel.Warn) then
        self.logWarn(self:GetLogStr(LogLevelTag.Warn, string.format(formatStr, ...)))
    end
end

---@vararg any
function Log:LogError(...)
    if self:IsEnabled(LogLevel.Error) then
        self.logError(self:GetLogStr(LogLevelTag.Error, ...))
    end
end

---@param formatStr string
---@vararg any
function Log:LogErrorFormat(formatStr, ...)
    if self:IsEnabled(LogLevel.Error) then
        self.logError(self:GetLogStr(LogLevelTag.Error, string.format(formatStr, ...)))
    end
end

---新增致命bug输出接口
---vararg any
function Log:LogFatal(...)
    self.logError(self:GetLogStr(LogLevelTag.Fatal, ...))
end

---新增致命bug输出接口
---@param formatStr string
---@vararg any
function Log:LogFatalFormat(formatStr, ...)
    self.logError(self:GetLogStr(LogLevelTag.Fatal, string.format(formatStr, ...)))
end

--endregion

--region 设置相关
---设置日志输出
---@param log function
---@param logWarn function
---@param logError function
function Log:SetLogger(log, logWarn, logError)
    self.log = log
    self.logWarn = logWarn
    self.logError = logError
end

---@param logLevel Log.LogLevel
function Log:SetLevel(logLevel)
    self.logLevel = logLevel
end

---@param isEnable boolean
function Log:SetEnable(isEnable)
    self.logEnable = isEnable
end

---@param logTag string
function Log:SetTag(logTag)
    self.logTag = logTag
end

---@param getFrame function
function Log:SetFrameFunc(getFrame)
    self.getFrame = getFrame
end

--endregion

--region 内部逻辑
---检测是否开启日志
---@param logLevel Log.LogLevel
---@return boolean
function Log:IsEnabled(logLevel)
    return logLevel >= self.logLevel and self.logEnable
end

---@vararg any
---@return string
function Log:GetLogStr(level, ...)
    if self.getFrame then
        return string.concat(level, self:GetTagStr(), string.format(LUA_FRAME_PREFIX, self.getFrame()), ...)
    else
        return string.concat(level, self:GetTagStr(), ...)
    end
end

---@return string
function Log:GetTagStr()
    return not string.isnilorempty(self.logTag) and string.format(LOG_TAG_FORMAT, self.logTag) or ""
end
--endregion

return Log