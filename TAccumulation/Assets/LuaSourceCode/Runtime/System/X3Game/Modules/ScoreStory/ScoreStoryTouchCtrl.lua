---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by xiaofang.
--- DateTime: 2022/11/10 15:00
---@class ScoreStoryTouchCtrl
local ScoreStoryTouchCtrl = class("ScoreStoryTouchCtrl")
---@type ScoreStoryConst
local ScoreStoryConst = require("Runtime.System.X3Game.UI.UIView.ScoreStoryChapterWnd.Data.ScoreStoryConst")

function ScoreStoryTouchCtrl:ctor()
    self.gestureCtrl = nil
    self.bll = BllMgr.GetScoreStoryBLL()
    self.is_enable = false
    self.curGesture = nil
end

function ScoreStoryTouchCtrl:Enter()
    if not self.gestureCtrl then
        self.gestureCtrl = GameObjClickUtil.Get(self.bll:GetViewRoot())
        self.gestureCtrl:SetTouchBlockEnableByUI(GameObjClickUtil.TouchType.ON_TOUCH_CLICK | GameObjClickUtil.TouchType.ON_LONGPRESS, true)
        self.gestureCtrl:SetCtrlType(GameObjClickUtil.CtrlType.DRAG)
        self.gestureCtrl:SetClickType(GameObjClickUtil.ClickType.LONG_PRESS | GameObjClickUtil.ClickType.POS | GameObjClickUtil.ClickType.TARGET)
        self.gestureCtrl:SetDelegate(self)
        self.gestureCtrl:ClearCheckObjs()
        self.gestureCtrl:SetMoveThresholdCheckType(GameObjClickUtil.ThresholdCheckType.Horizontal)
        self.gestureCtrl:SetDragUpdateThresholdCheckType(GameObjClickUtil.ThresholdCheckType.Horizontal)
    end
    self:OnEnable()
end

function ScoreStoryTouchCtrl:OnEnable()
    self:SetTouchEnable(true)
end

function ScoreStoryTouchCtrl:SetTouchEnable(is_enable, force)
    if force or is_enable ~= self.is_enable then
        self.is_enable = is_enable
        self.gestureCtrl:SetTouchEnable(is_enable)
    end
end

function ScoreStoryTouchCtrl:OnGesture(gesture)
    self.curGesture = gesture
end

function ScoreStoryTouchCtrl:OnTouchDown(pos)
    self.startPosX = pos.x
    self.startPosY = pos.y
end

function ScoreStoryTouchCtrl:OnTouchUp(pos)
    if self.curGesture then
        if self.curGesture == GameObjClickUtil.Gesture.LEFT then
            EventMgr.Dispatch(ScoreStoryConst.Event.ON_TOUCH_GESTURE_RESULT_EVENT, ScoreStoryConst.TouchType.RIGHT)
        elseif self.curGesture == GameObjClickUtil.Gesture.RIGHT then
            EventMgr.Dispatch(ScoreStoryConst.Event.ON_TOUCH_GESTURE_RESULT_EVENT, ScoreStoryConst.TouchType.LEFT)
        elseif self.curGesture == GameObjClickUtil.Gesture.UP then
            EventMgr.Dispatch(ScoreStoryConst.Event.ON_TOUCH_GESTURE_RESULT_EVENT, ScoreStoryConst.TouchType.UP)
        else
            EventMgr.Dispatch(ScoreStoryConst.Event.ON_TOUCH_GESTURE_RESULT_EVENT, ScoreStoryConst.TouchType.NONE)
        end
        self.curGesture = nil
    else
        if self.startPosX then
            local offset = pos.x - self.startPosX
            if not Mathf.Approximately(offset, 0) then
                if offset < 0 then
                    EventMgr.Dispatch(ScoreStoryConst.Event.ON_TOUCH_GESTURE_RESULT_EVENT, ScoreStoryConst.TouchType.RIGHT)
                else
                    EventMgr.Dispatch(ScoreStoryConst.Event.ON_TOUCH_GESTURE_RESULT_EVENT, ScoreStoryConst.TouchType.LEFT)
                end
            end
        end
        if self.startPosY then
            local offset = pos.y - self.startPosY
            if not Mathf.Approximately(offset, 0) then
                if offset > 0 then
                    --上滑
                    EventMgr.Dispatch(ScoreStoryConst.Event.ON_TOUCH_GESTURE_RESULT_EVENT, ScoreStoryConst.TouchType.UP)
                end
            end
        end
    end
end

function ScoreStoryTouchCtrl:Disable()
    self:SetTouchEnable(false)
end

function ScoreStoryTouchCtrl:Exit()
    self.gestureCtrl:OnClear()
    self.gestureCtrl = nil
end

return ScoreStoryTouchCtrl
