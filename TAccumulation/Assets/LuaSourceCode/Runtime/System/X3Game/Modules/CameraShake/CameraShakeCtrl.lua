---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by junjun003.
--- DateTime: 2023/2/22 11:56
---

---@class CameraShakeCtrl
local CameraShakeCtrl = class("CameraShakeCtrl", GameObjectCtrl)

---
function CameraShakeCtrl:Init()
    ---@type CS.SimpleShake
    self.simpleShakeScript = self:GetComponent(nil, "SimpleShake")
    ---@type int 需要震动的次数
    self.needShakeTimes = 0
    ---@type int 已经震动的次数
    self.shakedTimes = 0
    ---@type fun 震动回调
    self.callback = nil
    ---@type
    self.timerId = 0
end

---获取震动时长
---@return float
function CameraShakeCtrl:GetShakeTime()
    if self.simpleShakeScript then
        return self.simpleShakeScript.shakeTime
    else
        return 0
    end
end

---绑定生效的Transform，后期可能会改成Asset
---@param transform Transform
function CameraShakeCtrl:BindTransform(transform)
    if self.simpleShakeScript then
        self.simpleShakeScript:BindTransform(transform)
    end
end

---播放
---@param times int
---@param callback fun
function CameraShakeCtrl:Play(times, callback)
    self:SetActive(nil, true)
    self.shakedTimes = 0
    self.needShakeTimes = times
    self.callback = callback
    if self.timerId == 0 then
        self.timerId = TimerMgr.AddTimerByFrame(1, self.Update, self, -1, TimerMgr.UpdateType.UPDATE)
    end
    if self.simpleShakeScript then
        self.simpleShakeScript:ExecuteShake()
    end
end

---Update
function CameraShakeCtrl:Update()
    if self.simpleShakeScript then
        if self.simpleShakeScript:GetRemainTime() <= 0 then
            self.shakedTimes = self.shakedTimes + 1
            if self.needShakeTimes ~= -1 and self.shakedTimes >= self.needShakeTimes then
                GlobalCameraMgr.ClearShaking()
                pcall(self.callback)
                self.callback = nil
            else
                self.simpleShakeScript:ExecuteShake()
            end
        end
    end
end

---停止
---@param needCallback bool 是否需要执行callback
function CameraShakeCtrl:Stop(needCallback)
    if self.simpleShakeScript then
        self.simpleShakeScript:Stop()
    end
    if self.timerId ~= 0 then
        TimerMgr.Discard(self.timerId)
        self.timerId = 0
    end
    self.shakedTimes = 0
    self.needShakeTimes = 0
    if needCallback then
        pcall(self.callback)
        self.callback = nil
    end
end

return CameraShakeCtrl