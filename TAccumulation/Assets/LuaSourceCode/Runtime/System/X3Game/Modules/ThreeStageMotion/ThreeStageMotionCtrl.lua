---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by dengzi.
--- DateTime: 2023/6/29 14:12
---

---@class ThreeStageMotionCtrl
local ThreeStageMotionCtrl = class("ThreeStageMotionCtrl")

local StageDefine = {
    None = 1,
    In = 2,
    Loop = 3,
    Out = 4,
    Complete = 5,
}

function ThreeStageMotionCtrl:ctor()
    self.OnInCompleteCb = handler(self, self._OnInComplete)
    self.OnLoopReachCb = handler(self, self._OnLoopReach)
    self.OnOutCompleteCb = handler(self, self._OnOutComplete)
end

---初始化
function ThreeStageMotionCtrl:Init(key, go, keepGo, onComplete)
    self.key = key
    self.gameObject = go
    ---销毁控制脚本时是否保留gameObject
    ---@type boolean
    self.keepGo = keepGo
    self.stage = StageDefine.None
    self.wantOut = false
    self.onComplete = onComplete
end

function ThreeStageMotionCtrl:Destroy()
    self.key = nil
    self.stage = nil
    self.wantOut = nil
    self.onComplete = nil
    if not GameObjectUtil.IsNull(self.gameObject) then
        UIUtil.StopAllMotions(self.gameObject)
        if not self.keepGo then
            GameObjectUtil.SetActive(self.gameObject, false)
            Res.DiscardGameObject(self.gameObject)
        end
    end
    self.gameObject = nil
    self.keepGo = nil
end

function ThreeStageMotionCtrl:IsValid()
    if GameObjectUtil.IsNull(self.gameObject) then
        return false
    end
    return true
end

---播放In
function ThreeStageMotionCtrl:PlayIn(onInComplete)
    self.stage = StageDefine.In
    self.onInComplete = onInComplete
    UIUtil.StopAllMotions(self.gameObject)
    if UIUtil.HasMotion(self.gameObject, "MotionIn") then
        UIUtil.PlayMotion(self.gameObject, "MotionIn", self.OnInCompleteCb)
    else
        self.OnInCompleteCb()
    end
end

---播放Out，会先等此次的loop播放完成才会播放out
---@param onOutStart function 开始播放Out动效
---@param onOutComplete function Out动效播放完成
---@param bWaitLoopEnd boolean 是否等待loop动画结束,true：不等待loop动画结束； false：等待当前的loop动画结束；
function ThreeStageMotionCtrl:PlayOut(onOutStart, onOutComplete, bWaitLoopEnd)
    if self.stage ~= StageDefine.In and self.stage ~= StageDefine.Loop then
        Debug.LogErrorFormat("ThreeStageMotionCtrl 当前状态不对，只有MoveIn状态和Loop状态才能MoveOut，当前状态：%s ", tostring(self.stage))
        return
    end
    if bWaitLoopEnd then
        self.wantOut = true
        self.onOutStart = onOutStart
        self.onOutComplete = onOutComplete
    else
        if self.stage == StageDefine.In then
            --还处于MoveIn阶段，需要等待MoveIn结束
            self.wantOut = true
            self.onOutStart = onOutStart
            self.onOutComplete = onOutComplete
        elseif self.stage == StageDefine.Loop then
            --处于Loop阶段，直接MoveOut即可
            self.wantOut = false
            self.onOutStart = onOutStart
            self.onOutComplete = onOutComplete
            self:_DoMoveOut()
        end
    end
end

---强制停止Motion
--function ThreeStageMotionCtrl:Stop()
--    UIUtil.StopAllMotions(self.gameObject)
--    self.stage = StageDefine.None
--end

function ThreeStageMotionCtrl:_DoMoveOut()
    if self.onOutStart then
        self.onOutStart()
        self.onOutStart = nil
    end
    self.stage = StageDefine.Out
    UIUtil.PlayMotion(self.gameObject, "MotionOut", self.OnOutCompleteCb)
end

function ThreeStageMotionCtrl:_DoLoop()
    self.stage = StageDefine.Loop
    UIUtil.PlayMotion(self.gameObject, "MotionLoop", nil, self.OnLoopReachCb)
end

function ThreeStageMotionCtrl:_OnInComplete()
    if self.stage == StageDefine.In then
        if UIUtil.HasMotion(self.gameObject, "MotionIn") and self.wantOut then
            self:_DoMoveOut()
        else
            self:_DoLoop()
        end
        if self.onInComplete then
            self.onInComplete()
            self.onInComplete = nil
        end
    end
end

function ThreeStageMotionCtrl:_OnLoopReach()
    if self.stage == StageDefine.Loop and self.wantOut then
        if self.onOutStart then
            self.onOutStart()
            self.onOutStart = nil
        end
        self.stage = StageDefine.Out
        UIUtil.StopMotion(self.gameObject, "MotionLoop")
        UIUtil.PlayMotion(self.gameObject, "MotionOut", self.OnOutCompleteCb)
    end
end

function ThreeStageMotionCtrl:_OnOutComplete()
    if self.stage == StageDefine.Out then
        if self.onOutComplete then
            self.onOutComplete()
            self.onOutComplete = nil
        end
        self.stage = StageDefine.Complete
        self:_NotifyComplete()
    end
end

function ThreeStageMotionCtrl:_NotifyComplete()
    if self.onComplete then
        self.onComplete(self.key)
    end
end

return ThreeStageMotionCtrl