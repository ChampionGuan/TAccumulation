---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by aoliao.
--- DateTime: 2023/1/10 15:46
---DynamicCardBgDownloadCtrl

---@type  ScatteredDownloadBase
local ScatteredDownloadBase = require("Runtime.System.X3Game.Modules.SubPackages.ScatteredDownloadBase")
---@class DynamicCardBgDownloadCtrl:ScatteredDownloadBase
local DynamicCardBgDownloadCtrl = class("DynamicCardBgDownloadCtrl", ScatteredDownloadBase)
---刷新UI状态
---@param downloadState SubPackage.PackageDownloadState
function DynamicCardBgDownloadCtrl:RefreshUI(downloadState)
    if not self.dataValid then
        return
    end
    if downloadState == PackageDownloadState.Finished then
        self:SetActive(nil, false)
    else
        self:SetActive(nil, true)
        if downloadState == PackageDownloadState.None then
            self:SetValue(nil, 0)
        elseif downloadState == PackageDownloadState.Downloading then
            self:SetValue(nil, 1)
        elseif downloadState == PackageDownloadState.Pause then
            self:SetValue(nil, 2)
        elseif downloadState == PackageDownloadState.Wait then
            self:SetValue(nil, 3)
        elseif downloadState == PackageDownloadState.Failed then
            self:SetValue(nil, 4)
        end
    end
end
---列表选中态的下载状态逻辑
function DynamicCardBgDownloadCtrl:Init()
    self.dataValid = false
    self:AddButtonListener(nil, handler(self, self.OnClickSelf))
end

function DynamicCardBgDownloadCtrl:OnClickSelf()
    if self.downloadState == PackageDownloadState.Finished then
        self:OnClickNormal()
    elseif self.downloadState == PackageDownloadState.None then
        self:OnClickDownload()
    elseif self.downloadState == PackageDownloadState.Downloading then
        self:OnClickPause()
    elseif self.downloadState == PackageDownloadState.Pause then
        self:OnClickDownload()
    elseif self.downloadState == PackageDownloadState.Wait then
        self:OnClickDownload()
    elseif self.downloadState == PackageDownloadState.Failed then
        self:OnClickDownload()
    end
end

---进度更新
function DynamicCardBgDownloadCtrl:OnDownloading(processValue)
    self.super.OnDownloading(self)
    
    self.downloadingPercentTextObj = self.downloadingPercentTextObj or self:GetComponent("OCX_txt_DownloadPercent")
    self:SetText(self.downloadingPercentTextObj, string.concat(processValue, "%"))
end

function DynamicCardBgDownloadCtrl:SetDownloadData(subPackageType, subPackageId)
    if nil == subPackageType or nil == subPackageId then
        self.dataValid = false
        self:SetActive(nil, false)
        return
    end
    self.dataValid = true
    ---@type ScatteredDownloadData
    local scatteredDownloadData = {
        type = subPackageType,
        subType = Define.SupPackageSubType.DEFAULT,
        value = subPackageId,
        finishCb = function()
            EventMgr.Dispatch("DynamicCardDownloadFinish")
        end,
    }
    self:InitData(scatteredDownloadData)
end

return DynamicCardBgDownloadCtrl