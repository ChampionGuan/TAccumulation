---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by pc.
--- DateTime: 2021/1/20 21:19
--- 控制红点显示逻辑

local RedConst = require("Runtime.System.X3Game.Modules.RedPoint.RedConst")
---@class RedView
local RedView = class("RedView",UICtrl)

function RedView:Init()
    self.red_obj = nil
    self.id = nil
    self.res_load_complete = handler(self,self.OnLoadComplete)
    self:ResetShowType()
end

---设置唯一id
---@param id any
function RedView:SetIdentifyId(id)
    self.identify_id = id
end

---获取唯一id
---@return any
function RedView:GetIdentifyId()
    return self.identify_id
end

---设置红点id
---@param id int
function RedView:SetId(id)
    self.id = id
end

---获取id
---@return int
function RedView:GetId()
    return self.id or 0
end

---@return RedData
function RedView:GetData()
    return RedPointMgr.GetData(self:GetId())
end

---获取当前显示的红点类型
---@return int
function RedView:GetShowType()
    return self.is_alive and self.red_type or -1
end

function RedView:SetOwner(obj,owner)
    owner = owner or self.owner
    obj = obj or self.gameObject
    self.super.SetOwner(self,obj,owner)
end

function RedView:Bind(obj)
    self:SetOwner(obj)
end

---检测红点
function RedView:CheckRedObj(is_create)
    if not self.red_obj and is_create then
        self.owner:LoadRedObj(self.res_load_complete)
    else
        if self.red_obj then
            self:RefreshRedObj(self.red_obj)
        end
    end

end

function RedView:ReleaseRedObj(obj)
    obj = obj or self.red_obj
    self.red_obj = nil
    self.owner:ReleaseRedObj(obj,self.gameObject)
end

function RedView:IsNumType(red_type)
    return red_type and (red_type==RedConst.RedType.NUMBER or red_type==RedConst.RedType.LARGE_NUM)
end

function RedView:GetCount()
    return RedPointMgr.GetViewCount(self:GetId(),self:GetIdentifyId())
end

function RedView:GetRedType()
    return RedPointMgr.GetRedType(self:GetId(),self:GetIdentifyId())
end

---刷新红点显示
function RedView:Refresh()
    if not self:GetId() then
        Debug.LogError("红点数据不存在id-->",self:GetId())
        return false
    end
    local is_unlock = RedPointMgr.IsRedSysUnlock(self:GetId())
    local is_alive = is_unlock
    local red_type
    local count = 0
    if is_alive then
        count = self:GetCount()
        is_alive = count>0
        red_type = self.red_type
        if is_alive then
            self.red_count = count
            red_type = self:GetRedType()
        end
        if is_alive == self.is_alive and (not self:IsNumType(red_type) and red_type == self.red_type)  then
            return self.is_alive
        end
    end
    self.red_count = count
    self.is_alive = is_alive
    self.red_type = red_type
    self:CheckRedObj(is_alive)
    return is_alive

end

---红点加载完成回调
---@param obj GameObject
function RedView:OnLoadComplete(obj)
    if obj==nil then return end
    self.red_obj = obj
    local trans = GameObjectUtil.GetComponent(self.red_obj,"","Transform")
    GameObjectUtil.SetParent(trans,self.transform,false)
    GameObjectUtil.SetLocalPosition(trans,0)
    GameObjectUtil.SetLocalScale(trans,1)
    GameObjectUtil.SetActive(obj,true)
    UIUtil.ForceLayoutRebuild(obj,true)
    self:RefreshRedObj(obj)
end

function RedView:RefreshRedObj(obj)
    local is_alive = self.is_alive
    local red_type = self.red_type
    local count = self.red_count
    if obj then
        GameObjectUtil.SetActive(obj,true)
        if is_alive then
            if red_type and red_type>0 then
                self:RefreshViewByType(obj,red_type,count)
                UIUtil.SetValue(obj,red_type-1)
            else
                Debug.LogError("红点类型解析错误",self:GetId(),self:GetIdentifyId())
                self:ReleaseRedObj(obj)
            end
        else
            self:ReleaseRedObj(obj)
        end
    end
end

---刷新红点显示
function RedView:RefreshViewByType(obj,red_type,red_count)
    red_count = tostring(red_count)
    if red_type == RedConst.RedType.NUMBER then
        UIUtil.SetText(GameObjectUtil.GetComponent(obj,RedConst.TEXT_NAME),red_count)
    elseif red_type == RedConst.RedType.LARGE_NUM then
        UIUtil.SetText(GameObjectUtil.GetComponent(obj,RedConst.TEXT_NAME_LARGE),red_count)
    end
end

function RedView:ResetShowType()
    self.view_type = -1
    self.is_alive = false
end

function RedView:Clear()
    local owner = self.owner
    self:ReleaseRedObj()
    table.clear(self)
    self:SetOwner(nil,owner)
    self:ResetShowType()
end

return RedView