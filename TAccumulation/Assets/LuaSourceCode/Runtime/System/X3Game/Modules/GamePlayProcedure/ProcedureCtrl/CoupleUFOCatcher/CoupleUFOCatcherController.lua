---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Administrator.
--- DateTime: 2021/5/27 10:38

---@class CoupleUFOCatcherController
local CoupleUFOCatcherController = class("CoupleUFOCatcherController", GameObjectCtrl)

function CoupleUFOCatcherController:Init()
    self._CSData = self.gameObject:GetComponent("CoupleUFOCatcherController")
    self._CSData.playerController.stepChangeAction = handler(self, self.StepChangedAction)
    self._CSData.playerController.catchAction = handler(self, self.CatchAction)
    self._CSData.aiController.stepChangeAction = handler(self, self.StepChangedAction)
    self._CSData.aiController.catchAction = handler(self, self.AICatchAction)
    self._effectData = self.gameObject:GetComponent("UFOCatcherEffect")
    self.aimAIGo = GameObjectUtil.GetComponent(self.gameObject, "ClawEffect_Aim_AI")
    self.aimAIActive = false
    self.aimPLGo = GameObjectUtil.GetComponent(self.gameObject, "ClawEffect_Aim_PL")
    self.aimPLActive = false
    self.playerController = self._CSData.playerController
    self.aiController = self._CSData.aiController
    self.dollInitPosition = self._CSData.dollInitPosition
    self.dollParent = self._CSData.dollParent

    self._endCount= 0
    self._updateInternal = 0.01
    self._updateTimer = TimerMgr.AddTimer(self._updateInternal, self.Update, self, true)
    self._currCoupleEffectList = {}
    self.autoDirection = Vector2.zero
    EventMgr.AddListener("EVENT_UFOCATCHER_CoupleCLAW_LOOSEN", self.OnClawLoosenEvent, self)
end

function CoupleUFOCatcherController:MoveClawByWorldDirection(direction)
    self.playerController:MoveClawByWorldDirection(direction)
end

function CoupleUFOCatcherController:Update()
    if self.autoDirection ~= Vector2.zero_readonly then
        self:MoveClawByWorldDirection(self.autoDirection)
    end
end

function CoupleUFOCatcherController:StepChangedAction(step)
    if step == UFOCatcherEnum.CatchingStep.Loose then
        self._endCount = self._endCount + 1
        if self._endCount >= 2 then
            self._delayTimer = TimerMgr.AddScaledTimer(1, self.DelayChangeState, self)
            self._endCount = 0
        end
    end
end

function CoupleUFOCatcherController:CatchAction()
    EventMgr.Dispatch("UFOCatcherCatch" , true)
end

function CoupleUFOCatcherController:AICatchAction()
    EventMgr.Dispatch("UFOCatcherCatch", false)
end

function CoupleUFOCatcherController:DelayChangeState()
    EventMgr.Dispatch("GotoNextState")
end

function CoupleUFOCatcherController:ShowEffectWithEffectStringKey(effectStringKey, isShow)
    if self._currShowEffectKey == nil then
        self._currShowEffectKey = {}
    end
    if not table.containsvalue(self._currShowEffectKey, effectStringKey) then
        table.insert(self._currShowEffectKey, #self._currShowEffectKey + 1, effectStringKey)
    end
    local hasEffect, effectObjs = self._effectData:TryGetEffectObjsWithType(effectStringKey)
    if hasEffect then
        for i = 0, effectObjs.Count - 1 do
            local obj = effectObjs[i]
            if GameObjectUtil.IsNull(obj) == false then
                if obj.activeInHierarchy and isShow then
                    local particle = obj:GetComponentInChildren(typeof(CS.UnityEngine.ParticleSystem))
                    if GameObjectUtil.IsNull(particle) == false then
                        particle:Play()
                    end
                else
                    obj:SetActive(isShow)
                end
            end
        end
    end
end

function CoupleUFOCatcherController:HideEffect()
    if self._currShowEffectKey == nil then
        return
    end
    for i = 1, #self._currShowEffectKey do
        local hasEffect, effectObjs = self._effectData:TryGetEffectObjsWithType(self._currShowEffectKey[i])
        if hasEffect then
            for j = 0, effectObjs.Count - 1 do
                local obj = effectObjs[j]
                if GameObjectUtil.IsNull(obj) == false then
                    obj:SetActive(false)
                end
            end
        end
    end
    self._currShowEffectKey = {}
end

function CoupleUFOCatcherController:ShowEffectWithEffectStringKeyAndClawController(effectStringKey, claw)
    local list = self._currCoupleEffectList[claw]
    if list then
        if not table.containsvalue(list, effectStringKey) then
            table.insert(list, #list + 1, effectStringKey)
        end
    else
        list = {}
        table.insert(list, #list + 1, effectStringKey)
        self._currCoupleEffectList[claw] = list
    end
    self:ShowEffectWithEffectStringKey(effectStringKey, true)
end

function CoupleUFOCatcherController:HideEffectByClaw(claw)
    local list = self._currCoupleEffectList[claw]
    if list then
        for i = 1, #list do
            self:ShowEffectWithEffectStringKey(list[i], false)
        end
    end
end

function CoupleUFOCatcherController:OnClawLoosenEvent(claw)
    self:HideEffectByClaw(claw)
end

---显示瞄准光柱
function CoupleUFOCatcherController:ShowPLAimEffect()
    self.aimPLActive = true
    UIUtil.StopMotion(self.aimPLGo, "fx_ui_UFOCatcher_light_out", false)
    if self.aimPLGo then
        GameObjectUtil.SetActive(self.aimPLGo, true)
    end
end

---显示瞄准光柱
function CoupleUFOCatcherController:ShowAIAimEffect()
    self.aimAIActive = true
    UIUtil.StopMotion(self.aimAIGo, "fx_ui_UFOCatcher_light_out", false)
    if self.aimAIGo then
        GameObjectUtil.SetActive(self.aimAIGo, true)
    end
end

---隐藏瞄准光柱
function CoupleUFOCatcherController:HidePLAimEffect()
    self.aimPLActive = false
    if self.aimPLGo then
        UIUtil.PlayMotion(self.aimPLGo, "fx_ui_UFOCatcher_light_out", handler(self, self.InternalHidePLAimEffect))
    end
end

---光柱隐藏回调
function CoupleUFOCatcherController:InternalHidePLAimEffect()
    if self.aimPLGo and self.aimPLActive == false then
        GameObjectUtil.SetActive(self.aimPLGo, false)
    end
end

---隐藏瞄准光柱
function CoupleUFOCatcherController:HideAIAimEffect()
    self.aimAIActive = false
    if self.aimAIGo then
        UIUtil.PlayMotion(self.aimAIGo, "fx_ui_UFOCatcher_light_out", handler(self, self.InternalHideAIAimEffect))
    end
end

---光柱隐藏回调
function CoupleUFOCatcherController:InternalHideAIAimEffect()
    if self.aimAIGo and self.aimAIActive == false then
        GameObjectUtil.SetActive(self.aimAIGo, false)
    end
end

function CoupleUFOCatcherController:OnDestroy()
    if self._updateTimer then
        TimerMgr.Discard(self._updateTimer)
        self._updateTimer = nil
    end
    if self._delayTimer then
        TimerMgr.Discard(self._delayTimer)
        self._delayTimer = nil
    end
    EventMgr.RemoveListenerByTarget(self)
    self.super.OnDestroy(self)
end

return CoupleUFOCatcherController