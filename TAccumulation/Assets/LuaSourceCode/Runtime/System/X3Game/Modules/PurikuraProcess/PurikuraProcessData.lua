---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by deling.
--- DateTime: 2022/7/9 20:40
---
local PurikuraConstNew = require "Runtime.System.X3Game.Modules.PurikuraNew.PurikuraConstNew"

local PurikuraProcessDecorate = require "Runtime.System.X3Game.Modules.PurikuraProcess.PurikuraProcessDecorate"

---@class PurikuraProcessData
local PurikuraProcessData = class("PurikuraProcessData")
local self = PurikuraProcessData

function PurikuraProcessData:ctor()
    self.stickerInfoList = {}
    self.decorateData = PurikuraProcessDecorate:new()
end

function PurikuraProcessData:Init(modeInfo)
    self.modeInfo = modeInfo
    self:FillStickerInfo()
end

function PurikuraProcessData:Clear()
    table.clear(self.stickerInfoLis)
end

-----------照片流程信息

function PurikuraProcessData:FillStickerInfo()
    local cfg = LuaCfgMgr.Get("SundryConfig", X3_CFG_CONST.PHOTOHEADSHOTDEFAULTROLENUM)
    for i = 1, 4 do
        local info = {}
        local mode = cfg[i]
        ---大头贴模式 [男单；女单；双人]
        info.stickerMode = mode.Num
        -----背景ID
        info.bgID = self.modeInfo.DefaultBackground
        self.stickerInfoList[i] = info
    end
end

---这里看看基础数据搬过来
function PurikuraProcessData:SetStickerInfo(index, mode, bgId)
    local info = self.stickerInfoList[index]
    if(info) then
        info.stickerMode = mode or info.stickerMode
        info.bgID = bgId or info.bgID
        EventMgr.Dispatch(PurikuraConstNew.Event.PhotoStickerArgChange, index, info.stickerMode, info.bgID)
    else
        Debug.LogError("SetStickerInfo index error ", index)
    end
end

function PurikuraProcessData:GetStickerInfo(index)
    return self.stickerInfoList[index]
end


--------------饰品
function PurikuraProcessData:GetDecorateList()
    return self.decorateData:GetList()
end

function PurikuraProcessData:GetDecorateListByMode(mode)
    return self.decorateData:GetListByMode(mode)
end


function PurikuraProcessData:GetDecorateInfo(index)
    return self.decorateData:GetDecorate(index)
end

function PurikuraProcessData:GetDecorateIsFull(sex)
    return self.decorateData:IsFull(sex)
end

function PurikuraProcessData:AddDecorate(data, sex)
    self.decorateData:AddDecorate(data, sex)
end

function PurikuraProcessData:RemoveDecorate(index)
    self.decorateData:RemoveDecorate(index)
end

function PurikuraProcessData:RemoveAllDecorate()
    self.decorateData:RemoveAllDecorate()
end

function PurikuraProcessData:DecorateExist(id, sex)
    return self.decorateData:DecorateExist(id, sex)
end

function PurikuraProcessData:GetStickerMode()
    local stickerModel = {}

    for i = 1, 4 do
        local stickerInfo = self:GetStickerInfo(i)
        stickerModel[stickerInfo.stickerMode] = true
    end

    if stickerModel[PurikuraConstNew.StickerMode.Double] then
        return PurikuraConstNew.StickerMode.Double
    elseif stickerModel[PurikuraConstNew.StickerMode.Male] and stickerModel[PurikuraConstNew.StickerMode.Female] then
        return PurikuraConstNew.StickerMode.Double
    elseif stickerModel[PurikuraConstNew.StickerMode.Male] and not stickerModel[PurikuraConstNew.StickerMode.Female] then
        return PurikuraConstNew.StickerMode.Male
    else
        return PurikuraConstNew.StickerMode.Female
    end
end

return PurikuraProcessData