---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by muchen.
--- DateTime: 2021/3/26 18:39
------@class ImageCropUtil
local ImageCropUtil = {}

---裁剪移動照片
---@param targetRect RectTransform  移動的照片Rect
---@param chooseRect RectTransform  中間裁剪框的Rect
---@param bottomMaskRect RectTransform  下遮罩Rect
---@param topMaskRect RectTransform  上遮罩Rect
function ImageCropUtil.OnAreaTouch(targetRect, chooseRect, bottomMaskRect, topMaskRect, state, data)
    if state == Define.Touch.Draging then
        local newPosY = data.delta.y + targetRect.anchoredPosition3D.y
        local newPosX = data.delta.x + targetRect.anchoredPosition3D.x
        local chooseSize = chooseRect.rect.size
        local bottomMaxy = bottomMaskRect.rect.size.y
        local curTextureSize = targetRect.rect.size
        local topMaxy = 0 - (curTextureSize.y - (chooseSize.y + bottomMaskRect.sizeDelta.y))
        local retY = targetRect.anchoredPosition3D.y
        local retX = targetRect.anchoredPosition3D.x
        if newPosY > 0 then
            if newPosY < bottomMaxy then
                retY = newPosY
            end
        else
            if newPosY > topMaxy then
                retY = newPosY
            end
        end
        local curRootSize = UIMgr.GetUIRoot().sizeDelta
        local xMax = curTextureSize.x - curRootSize.x
        if xMax > 0 then
            if newPosX < 0 and math.abs(newPosX) < xMax then
                retX = newPosX
            end
        end
        targetRect.anchoredPosition3D = Vector3.new(retX, retY, 0)
    end
end

---裁剪移動照片
---@param targetRect RectTransform  移動的照片Rect
---@param chooseRect RectTransform  中間裁剪框的Rect
---@param ration float  比例系数
---@param bottomMaskRect RectTransform 下遮罩Rect
function ImageCropUtil.OnCropCallBack(targetRect, chooseRect, ration, bottomMaskRect)
    local image = GameObjectUtil.GetComponent(targetRect, "", "X3Image")
    local texture = image.sprite.texture
    texture = UrlImgMgr.CompressTextureBySize(texture, targetRect.rect.size.x, targetRect.rect.size.y)
    local spriteHeight = texture.height
    local spriteWidth = texture.width
    local retX = targetRect.anchoredPosition3D.x
    local retY = targetRect.anchoredPosition3D.y
    local chooseSize = chooseRect.rect.size
    local bottomMaskSize = bottomMaskRect.rect.size
    if retY >= 0 then
        retY = math.floor(bottomMaskSize.y) - math.floor(retY)
    else
        retY = math.floor(math.abs(retY)) + math.floor(bottomMaskSize.y)
    end
    if retY + chooseSize.y > spriteHeight then
        retY = spriteHeight - chooseSize.y
    end
    if retY < 0 then
        retY = 0
    end
    local sizeX = chooseSize.x
    local sizeY = chooseSize.y
    if retX + chooseSize.x > spriteWidth then
        sizeX = spriteWidth
    end
    retX = math.abs(retX)
    --retX = retX * ration
    --retY = retY * ration
    local rectInt = CS.UnityEngine.RectInt(math.floor(retX), math.floor(retY), math.floor(sizeX), math.floor(sizeY))
    local cardTexture = ScreenCaptureUtil.CropTexture(texture, rectInt)
    return cardTexture
end

---设置照片的回调
---@param imageRect RectTransform   设置照片的Rect
---@param moveTop  boolean   是否移动到最上边
---@param forceWidth boolean 强制宽度适配
---@param isNeedFullShow boolean 是否需要完整显示
---@return float  不同分辨率适配的比例系数
function ImageCropUtil.OnSetImageSuccessCallBack(imageRect, moveTop, forceWidth, isNeedFullShow)
    local curRootSize = UIMgr.GetUIRoot().rect.size
    return ImageCropUtil.OnSetImageCallBack(curRootSize.x, curRootSize.y, imageRect, moveTop, forceWidth, isNeedFullShow)
end

function ImageCropUtil.OnSetImageCallBack(x, y, obj, moveTop, forceWidth, isNeedFullShow)
    if moveTop == nil then
        moveTop = true
    end
    local rect = GameObjectUtil.GetComponent(obj, "", "RectTransform")
    ---增加保护 6.15 By dl
    if (not rect) then
        return 0
    end
    local image = GameObjectUtil.GetComponent(obj, "", "X3Image")
    local texture = image.sprite.rect.size
    local curRootSize = Vector2.new(x, y)
    local spriteSize = Vector2.new(texture.x, texture.y)
    local retVec2, tempRatio = ImageCropUtil.GetAdapterSize(curRootSize, spriteSize, forceWidth, isNeedFullShow)
    rect.sizeDelta = retVec2
    if moveTop then
        local height = rect.rect.size.y - y
        local width = rect.rect.size.x - x
        local retX = 0
        local retY = 0
        if height > 0 then
            retY = -(height / 2)
        end
        if width > 0 then
            retX = -(width / 2)
        end
        rect.anchoredPosition3D = Vector3(retX, retY, 0)
    end
    return tempRatio
end

function ImageCropUtil.GetAdapterSize(vector1, vector2, forceWidth, isNeedFullShow)
    local tempRatio = 0
    local rateNum1 = vector1.x / vector1.y
    local rateNum2 = vector2.x / vector2.y
    local retVec2 = nil
    local curTemp = nil
    if isNeedFullShow then
        curTemp = rateNum2 < rateNum1
    else
        curTemp = rateNum2 > rateNum1
    end
    if curTemp and not forceWidth then
        local tempNum = vector2.y / vector1.y
        local retX = vector2.x / tempNum
        tempRatio = tempNum
        retVec2 = Vector2(retX, vector1.y)
    else
        local tempNum = vector2.x / vector1.x
        local retY = vector2.y / tempNum
        tempRatio = tempNum
        retVec2 = Vector2(vector1.x, retY)
    end
    return retVec2, tempRatio
end

function ImageCropUtil.SetImageMaxSize(x, y, obj)
    local rect = GameObjectUtil.GetComponent(obj, "", "RectTransform")
    local image = GameObjectUtil.GetComponent(obj, "", "X3Image")
    local texture = image.sprite.rect.size
    local curRootSize = Vector2.new(x, y)
    local spriteWidth = texture.x
    local spriteHeight = texture.y
    local tempRatio = 0
    if spriteHeight > spriteWidth then
        if spriteHeight <= y then
            return
        end
        tempRatio = spriteHeight / curRootSize.y
        local curWeight = spriteWidth / tempRatio
        rect.sizeDelta = Vector2(curWeight, curRootSize.y)
    else
        if spriteWidth <= x then
            return
        end
        tempRatio = spriteWidth / curRootSize.x
        local curHeight = spriteHeight / tempRatio
        rect.sizeDelta = Vector2(curRootSize.x, curHeight)
    end

end

return ImageCropUtil
