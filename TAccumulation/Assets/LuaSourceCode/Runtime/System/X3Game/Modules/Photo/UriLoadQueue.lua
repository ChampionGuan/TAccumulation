---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by kan.
--- DateTime: 2021/11/2 11:25


---@class UriLoadStruct 保存队列相关数据
local UriLoadStruct = class("UriLoadStruct")

function UriLoadStruct:ctor()
    ---@field public type table 加载类别
    self.param = nil
    ---@field public complete fun(cb:UriLoadStruct) 完成回调
    self.callBack = nil
end

---@class UriLoadQueue Uri加载队列
local UriLoadQueue = class("UriLoadQueue")

---持有单例对象
local _instance = nil
---@type UriLoadStruct[] 加载队列缓存
local _waitLoadList = {}
---@type table<UriLoadStruct, bool> 加载中的队列
local _loadingDic = {}
---最大同时加载数量
local _maxLoadCount = 1
---当前加载数量
local _curLoadCount = 0

---LoadSprite进入排队
---@param queueCB fun(cb:UriLoadStruct) 排队完成后的回调
function UriLoadQueue:AddToQueue(queueCB, ...)
    local loadStruct = UriLoadStruct.new()
    loadStruct.param = {...}
    loadStruct.callBack = queueCB
    self:_AddLoad(loadStruct)
end

---进入下载队列
---@param param table 缓存对应参数
function UriLoadQueue:_AddLoad(param)
    table.insert(_waitLoadList,param)
    self:_ExecuteLoad()
end

---执行下载
function UriLoadQueue:_ExecuteLoad()
    if #_waitLoadList == 0 then return end

    if _curLoadCount >= _maxLoadCount then
        return
    end

    local handler = self:_GetLoadHandler()
    if handler.callBack then
        _loadingDic[handler] = true
        _curLoadCount = _curLoadCount + 1
        handler.callBack(handler)
    end
end

---获取加载句柄
---@return UriHandle
function UriLoadQueue:_GetLoadHandler()
    if #_waitLoadList == 0 then return nil end
    local handler = _waitLoadList[1]
    table.remove(_waitLoadList,1)
    return handler
end

---完成加载
---@param identity UriLoadStruct 用于定位是哪一个handler
function UriLoadQueue:FinishLoad(identity)
    local handler = _loadingDic[identity]
    if not handler then return end

    _loadingDic[identity] = nil

    if _curLoadCount > 0 then
        _curLoadCount = _curLoadCount - 1
    end

    self:_ExecuteLoad()
end

---清除加载队列
function UriLoadQueue:Clear()
    _waitLoadList = {}
    _loadingDic = {}
    _curLoadCount = 0
end

---获取加载对象
---@return UriLoadQueue
function UriLoadQueue._GetInstance()
    if not _instance then
        _instance = UriLoadQueue.new()
    end

    return _instance
end

return UriLoadQueue._GetInstance()