---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by zhanbo.
--- DateTime: 2020/11/30 11:51
---

---@class PlayerUtil
local PlayerUtil = {}

function PlayerUtil.GetUid()
    return SelfProxyFactory.GetPlayerInfoProxy():GetUid()
end

---@public 设置玩家称号
---@param imageBackGround UnityEngine.UI.Image
---@param textName TMPro.TextMeshProUGUI
---@param userBaseData table 玩家个人信息的数据结构
function PlayerUtil.SetTitle(imageBackGround, textName, userBaseData)
    local NoBG = LuaCfgMgr.Get("SundryConfig", X3_CFG_CONST.TITLENOBG)

    local title = nil
    if userBaseData == nil or (userBaseData.DelTime ~= nil and userBaseData.DelTime > 0) then
        title = {}
        title.TitlePrefix = 0
        title.TitleSuffix = 0
        title.TitleBg = 0
        title.StandaloneTitle = 0
    elseif userBaseData.Uid == PlayerUtil.GetUid() then
        title = SelfProxyFactory.GetPlayerInfoProxy():GetTitle()
    else
        title = {}
        title.TitlePrefix = userBaseData.TitlePrefix
        title.TitleSuffix = userBaseData.TitleSuffix
        title.TitleBg = userBaseData.TitleBg
        title.StandaloneTitle = userBaseData.StandaloneTitle
    end

    local content = ""

    title = title and title or {}
    if (title.TitlePrefix == 0 and title.TitleSuffix == 0 and title.TitleBg == 0 and title.StandaloneTitle == 0) then
        content = UITextConst.UI_TEXT_12209
    end

    local cfgBG = nil

    if title.TitleBg ~= 0 or title.StandaloneTitle ~= 0 then
        cfgBG = LuaCfgMgr.Get("Title", title.TitleBg) or LuaCfgMgr.Get("Title", title.StandaloneTitle)
    end

    -- SetGradient相关方法 设置渐变色 由于当前个人信息称号字体限制 只能用RichText 然而不支持渐变色设置 和策划UE沟通确认后暂时保留RichText 去掉渐变色设置
    if (title.TitleBg == 0 and title.StandaloneTitle == 0) or cfgBG == nil then
        UIUtil.SetImage(imageBackGround, NoBG)
        local TxtColor = LuaCfgMgr.Get("SundryConfig", X3_CFG_CONST.TEXTCOLOR)
        --UIUtil.SetGradientEnable(textName, false)
        if TxtColor ~= nil then
            UIUtil.SetColor(textName, TxtColor)
        end
    else
        UIUtil.SetImage(imageBackGround, cfgBG.Resource)

        if cfgBG.Color ~= nil and #cfgBG.Color >= 2 then
            UIUtil.SetColor(textName, "#FFFFFF")
            --UIUtil.SetGradientEnable(textName, true)
            --UIUtil.SetGradientVertical(textName, table.unpack(cfgBG.Color))
        elseif cfgBG.Color ~= nil and cfgBG.Color[1] ~= nil then
            --UIUtil.SetGradientEnable(textName, false)
            UIUtil.SetColor(textName, cfgBG.Color[1])
        end
    end

    if title.TitlePrefix ~= 0 then
        local cfgPrefix = LuaCfgMgr.Get("Title", title.TitlePrefix)
        if cfgPrefix ~= nil then
            content = string.concat(content, UITextHelper.GetUIText(cfgPrefix.Name))
        end
    end

    if title.TitleSuffix ~= 0 then
        local cfgSuffix = LuaCfgMgr.Get("Title", title.TitleSuffix)
        if cfgSuffix ~= nil then
            content = string.concat(content, UITextHelper.GetUIText(cfgSuffix.Name))
        end
    end

    UIUtil.SetText(textName, content)
end

---@public 设置头像
---@param headIconImg GameObject|Image 需要设置的Image
---@param setDefaultIcon bool 是否设置为默认头像
function PlayerUtil.SetHeadIconImg(headIconImg, setDefaultIcon)
    if setDefaultIcon then
        UIUtil.SetImage(headIconImg, LuaCfgMgr.Get("SundryConfig", X3_CFG_CONST.FACEHEADICON))
        return
    end

    PlayerUtil.SetHeadIcon(headIconImg, SelfProxyFactory.GetPlayerInfoProxy():GetHead())
end

---@public 大富翁中根据玩家ID来设置Image的头像
---@param imageIcon UnityEngine.UI.Image 需要设置的Image
---@param id number 玩家ID
function PlayerUtil.SetHeadIconByID(imageIcon, id)
    if imageIcon == nil then
        return
    end

    if id == Const.SELF_PLAYER_ID then
        PlayerUtil.SetHeadIconImg(imageIcon, true)
        return
    end

    local roleInfo = LuaCfgMgr.Get("RoleInfo", id)
    if roleInfo ~= nil then
        UIUtil.SetImage(imageIcon, roleInfo.RoleIconHeadSmall)
    end
end

---@public 根据key和value设置头像
---@param uiImage GameObject|Image 需要设置的Image
---@param loadType number 头像Key：1表示对应羁绊卡的头像，2
---@param imgPath number 图片URI
---@param uid number uid
function PlayerUtil.SetImage(uiImage, loadType, imgPath, uid)
    if uiImage == nil then
        return
    end

    loadType = loadType or 1
    if loadType == 1 then
        UIUtil.SetImage(uiImage, imgPath, nil, nil)
    else
        if string.isnilorempty(imgPath) then
            PlayerUtil.SetHeadIconImg(uiImage, true)
        else
            ---注意：目前，第一个参数必须是Image
            local image = uiImage and uiImage:GetComponent("X3Image") or nil

            UrlImgMgr.SetUrlImage(image, imgPath, function(success)
                if not success then
                    PlayerUtil._SetHeadIconMissing(image, uid)
                end
            end, false, UrlImgMgr.BizType.HeadIcon)
        end
    end
end

---@private 设置默认头像（服务器图片缺少）
---@param image Image 需要设置的图片
---@param uid int 角色Id
function PlayerUtil._SetHeadIconMissing(image, uid)
    UICommonUtil.TrySetImageWithLocalFile(image, LuaCfgMgr.Get("SundryConfig", X3_CFG_CONST.PROFILEMISSINGPLAYER), uid)
end

---@public 设置头像
---@param headIconImg GameObject|Image 需要设置的Image
---@param head pbcmessage.PersonalHead 头像数据
---@param uid int 角色id
function PlayerUtil.SetHeadIcon(headIconImg, head, faceUrl, uid)
    if GameObjectUtil.IsNull(headIconImg) then return end
    
    -- 头像类型
    local loadType = head and head.Type or 1
    -- 这里区分开是读资产还是Url
    local imgPath, imgUrl

    -- 检查去掉loading菊花
    local imageOBj = headIconImg and headIconImg:GetComponent("X3Image") or nil
    if not GameObjectUtil.IsNull(imageOBj) then
        UrlImgMgr.RemoveLoadingCom(imageOBj)
    end
    
    if not table.isnilorempty(head) then
        if loadType == PlayerEnum.PlayerHeadType.Default then       -- 默认头像
            loadType = PlayerEnum.PlayerHeadType.Photo ---0：强制为2
            if faceUrl then
                local results = string.split(faceUrl,"?faceVersion=")
                imgUrl = results and results[1] or faceUrl
            elseif uid == nil or uid == PlayerUtil.GetUid() then
                imgUrl = SelfProxyFactory.GetPlayerInfoProxy():GetFaceUrl()
            else
                local factory = ProxyFactoryMgr.GetOtherPlayer(uid)
                if factory and factory:GetPlayerInfoProxy() then
                    imgUrl = factory:GetPlayerInfoProxy():GetFaceUrl()
                end
            end
        elseif loadType == PlayerEnum.PlayerHeadType.Photo then     -- 裁剪后的照片类型 (Url)
            if head.HeadPhoto then
                imgUrl = head.HeadPhoto.Url
            else
                imgUrl = head.ImgUrl
            end
        elseif loadType == PlayerEnum.PlayerHeadType.Card then      -- 思念类型
            imgPath = LuaCfgMgr.Get("Item", head.CardId).Icon
        elseif loadType == PlayerEnum.PlayerHeadType.Doll then      -- 娃娃类型
            imgPath = LuaCfgMgr.Get("Item", head.DollID).Icon       
        elseif loadType == PlayerEnum.PlayerHeadType.Miao then      -- 喵呜徽章
            imgPath = LuaCfgMgr.Get("Item", head.MiaoCardID).Icon   
        elseif loadType == PlayerEnum.PlayerHeadType.Item then      -- Item类型
            imgPath = LuaCfgMgr.Get("Item", head.HeadIconID).Icon
        end
    else
        imgPath = LuaCfgMgr.Get("SundryConfig", X3_CFG_CONST.FACEHEADICON)
    end

    -- 保底设置默认头像
    if string.isnilorempty(imgPath) and string.isnilorempty(imgUrl) then PlayerUtil.SetHeadIconImg(headIconImg, true) return end
    
    -- SetImage & SetUrlImage
    if not string.isnilorempty(imgPath) then
        UIUtil.SetImage(headIconImg, imgPath, nil, nil)
    elseif not string.isnilorempty(imgUrl) then 
        -- 注意：目前，第一个参数必须是Image
        local image = headIconImg and headIconImg:GetComponent("X3Image") or nil

        UrlImgMgr.SetUrlImage(image, imgUrl, function(success)
            if not success then
                PlayerUtil._SetHeadIconMissing(image, uid)
            end
        end, false, UrlImgMgr.BizType.HeadIcon)
    end
end

---@public 设置排行榜列表中头像
---@param headIconImg GameObject|Image 需要设置的Image
---@param headEmpty GameObject|Image 空白头像图片
---@param userBaseData pbcmessage.SnsBaseData 角色信息，nil指自己
---@param uid int 角色id
---@param onComplete function 结束回调
function PlayerUtil.GetHeadIconInList(headIconImg, headEmpty, userBaseData, uid, onComplete)
    local head, faceUrl
    if userBaseData and userBaseData.Uid ~= PlayerUtil.GetUid() then
        head = userBaseData.Head
        faceUrl = userBaseData.KneadFaceUrl
    else
        head = SelfProxyFactory.GetPlayerInfoProxy():GetHead()
        faceUrl = BllMgr.GetFaceBLL():GetFaceName()
    end

    local loadType = head and head.Type or 1
    local imgPath = nil
    if head == nil then
        imgPath = LuaCfgMgr.Get("SundryConfig", X3_CFG_CONST.FACEHEADICON)
    else
        if loadType == 1 then
            imgPath = LuaCfgMgr.Get("Item", head.CardId).Icon
        elseif loadType == 2 then
            if head.HeadPhoto then
                imgPath = head.HeadPhoto.Url
            else
                imgPath = head.ImgUrl
            end
        else
            loadType = 2 ---0：强制为2
            imgPath = faceUrl
        end
    end
    PlayerUtil._GetImageInList(headIconImg, headEmpty, imgPath, loadType, uid, onComplete)
end

---@private 设置排行榜列表中头像
---@param headIconImg GameObject|Image 需要设置的Image
---@param headEmpty GameObject|Image 空白头像图片
---@param imgPath string 图片Url
---@param loadType int 加载类型
---@param uid int 角色id
---@param onComplete function 结束回调
function PlayerUtil._GetImageInList(headIconImg, headEmpty, imgPath, loadType, uid, onComplete)
    if headIconImg == nil then
        return
    end
    GameObjectTransformUtility.SetLocalScaleXYZ(headIconImg, 0, 0, 0)
    GameObjectTransformUtility.SetLocalScaleXYZ(headEmpty, 0, 0, 0)
    loadType = loadType or 1
    if loadType == 1 then
        GameObjectTransformUtility.SetLocalScaleXYZ(headIconImg, 1, 1, 1)
        UIUtil.SetImage(headIconImg, imgPath, nil, nil, uid)
    else
        if string.isnilorempty(imgPath) then
            GameObjectTransformUtility.SetLocalScaleXYZ(headIconImg, 1, 1, 1)
            --PlayerUtil._SetHeadIconMissing(headIconImg, uid)
            PlayerUtil.SetHeadIconImg(headIconImg, true) --没有捏脸都用默认的
        else
            GameObjectTransformUtility.SetLocalScaleXYZ(headEmpty, 1, 1, 1)
            UrlImgMgr.SetUrlImage(headIconImg, imgPath, onComplete)
            --UrlImgMgr.GetUrlSprite(imgPath, uid, onComplete)
        end
    end
end

---@public 根据key和value设置头像
---@param mSelf GameObjectCtrl Lua脚本Script
---@param ocxName string 图片名字
---@param HeadKey number 头像Key：1表示对应羁绊卡的头像，2
---@param HeadVal number 头像Value
function PlayerUtil.SetHeadIconOCX(mSelf, ocxName, head, faceUrl, uid)
    assert(mSelf)
    local headIconImg = mSelf:GetComponent(ocxName, "X3Image")
    PlayerUtil.SetHeadIcon(headIconImg, head, faceUrl, uid)
end

---@public 设置头像
---@param mSelf GameObjectCtrl Lua脚本Script
---@param ocxName string 图片名字
---@param setDefaultIcon bool 是否设置为默认头像
function PlayerUtil.SetHeadIconImgOCX(mSelf, ocxName, setDefaultIcon, setFaceHead)
    if setDefaultIcon then
        PlayerUtil.SetHeadIconOCX(mSelf, ocxName)
        return
    end

    if setFaceHead then
        PlayerUtil.SetHeadIconOCX(mSelf, ocxName, SelfProxyFactory.GetPlayerInfoProxy():GetFaceHead())
        return
    end

    PlayerUtil.SetHeadIconOCX(mSelf, ocxName, SelfProxyFactory.GetPlayerInfoProxy():GetHead())
end

---@public 根据UserBaseData设置头像
---@param icon GameObject|Image
---@param userBaseData pbcmessage.SnsBaseData 玩家数据
function PlayerUtil.SetHeadIconUBD(icon, userBaseData)
    local head, faceUrl
    local uid = userBaseData.Uid
    if userBaseData.Uid == PlayerUtil.GetUid() then
        head = SelfProxyFactory.GetPlayerInfoProxy():GetHead()
        faceUrl = BllMgr.GetFaceBLL():GetFaceName()
    elseif (userBaseData.DelTime ~= nil and userBaseData.DelTime > 0) then
        head = nil
        faceUrl = nil
    else
        head = userBaseData.Head
        faceUrl = userBaseData.KneadFaceUrl
    end
    PlayerUtil.SetHeadIcon(icon, head, faceUrl, uid)
end

---@public 根据UserBaseData设置头像
---@param mSelf GameObjectCtrl Lua脚本Script
---@param ocxName string 图片名字
---@param userBaseData pbcmessage.SnsBaseData 玩家数据
function PlayerUtil.SetHeadIconUBDOCX(mSelf, ocxName, userBaseData)
    local head, faceUrl
    local Uid = userBaseData.Uid

    if userBaseData.Uid == PlayerUtil.GetUid() then
        head = SelfProxyFactory.GetPlayerInfoProxy():GetHead()
        faceUrl = SelfProxyFactory.GetPlayerInfoProxy():GetFaceUrl()
    elseif (userBaseData.DelTime ~= nil and userBaseData.DelTime > 0) then
        head = nil
        faceUrl = nil
    else
        head = userBaseData.Head
        faceUrl = userBaseData.KneadFaceUrl
    end
    PlayerUtil.SetHeadIconOCX(mSelf, ocxName, head, faceUrl, Uid)
end

---@public 依照杂项表给出的顺序拼接姓名
---@param familyName string 姓
---@param Name string 名
function PlayerUtil.GetFixName(familyName, firstName)
    local name = BllMgr.GetPlayerBLL():GetConcatName(firstName,familyName)
    return name
end

---@public 设置头像框
---@param image_Icon GameObject|Image 需要设置的图片
---@param frameID number 头像框ID
function PlayerUtil.SetFrameImg(image_Icon, frameID)
    if image_Icon == nil then
        return
    end

    local itemCfg = LuaCfgMgr.Get("Item", frameID)

    if itemCfg ~= nil then
        UIUtil.SetImage(image_Icon, itemCfg.Icon)
    end
end

---@public 设置头像框
---@param mSelf GameObjectCtrl Lua脚本Script
---@param frame string 头像框图片名字
---@param frameID number 头像框ID
function PlayerUtil.SetFrameImgOCX(mSelf, frame, frameID)
    if frame == nil or mSelf == nil then
        return
    end
    
    local itemCfg = LuaCfgMgr.Get("Item", frameID)
    if itemCfg ~= nil then
        mSelf:SetImage(frame, itemCfg.Icon)
    end
end

---@public 设置玩家自身头像框
---@param mSelf GameObjectCtrl Lua脚本Script
---@param frame string 头像框图片名字
function PlayerUtil.SetSelfFrameImgOCX(mSelf, frame)
    if frame == nil or mSelf == nil then
        return
    end

    local FrameID = SelfProxyFactory.GetPlayerInfoProxy():GetFrame()
    local ItemCfg = LuaCfgMgr.Get("Item", FrameID)

    if ItemCfg ~= nil then
        mSelf:SetImage(frame, ItemCfg.Icon)
    end
end

---@public 通过UserDataBase设置玩家头像框
---@param frame Image|GameObject Frame的图片或gameobject
---@param userBaseData table 玩家个人信息的数据结构
function PlayerUtil.SetFrame(frame, userBaseData)
    if frame == nil then
        return
    end

    local FrameID = userBaseData.FrameID

    if userBaseData.Uid == PlayerUtil.GetUid() then
        FrameID = SelfProxyFactory.GetPlayerInfoProxy():GetFrame()
    elseif (userBaseData.DelTime ~= nil and userBaseData.DelTime > 0) then
        FrameID = LuaCfgMgr.Get("SundryConfig", X3_CFG_CONST.INITIALFRAME)
    end
    local ItemCfg = LuaCfgMgr.Get("Item", FrameID)

    if ItemCfg ~= nil then
        UIUtil.SetImage(frame, ItemCfg.Icon)
    end
end

---@public 通过UserDataBase设置玩家头像框
---@param mSelf GameObjectCtrl Lua脚本Script
---@param frame string 头像框图片名字
---@param userBaseData table 玩家个人信息的数据结构
function PlayerUtil.SetFrameOCX(mSelf, frame, userBaseData)
    if frame == nil or mSelf == nil then
        return
    end

    local FrameID = userBaseData.FrameID

    if userBaseData.Uid == SelfProxyFactory.GetPlayerInfoProxy():GetFrame() then
        FrameID = PlayerUtil.GetUid()
    elseif (userBaseData.DelTime ~= nil and userBaseData.DelTime > 0) then
        FrameID = LuaCfgMgr.Get("SundryConfig", X3_CFG_CONST.INITIALFRAME)
    end
    local ItemCfg = LuaCfgMgr.Get("Item", FrameID)

    if ItemCfg ~= nil then
        mSelf:SetImage(frame, ItemCfg.Icon)
    end
end

function PlayerUtil.GetFixName_BaseData(BaseData)
    if BaseData then
        local playerId = BaseData.Uid
        local selfUid = PlayerUtil.GetUid()
        if playerId == selfUid then
            return SelfProxyFactory.GetPlayerInfoProxy():GetName()
        else
            local FamilyName = BaseData.FamilyName
            local Name = BaseData.Name
            local fixName = PlayerUtil.GetFixName(FamilyName, Name)
            return fixName
        end
    end
    return ""
end

---@public 获取Article格式化时间
---@param createTimeStamp int 获取时间戳
---@return string
function PlayerUtil.GetArticleTime(createTimeStamp)
    local curTime = GrpcMgr.GetServerTime()
    local createTime = TimerMgr.GetDateByUnixTimestamp(createTimeStamp)

    local isCurYear = false
    local strYear = ""

    local year = curTime.Year - createTime.year

    if year > 0 then
        isCurYear = false
        strYear = UITextHelper.GetUIText(UITextConst.UI_TEXT_11425, tostring(year))
    else
        isCurYear = true

    end
    local retTime = UITextHelper.GetUIText(UITextConst.UI_TEXT_11426, createTime.month, createTime.day, string.format("%02d", createTime.hour), string.format("%02d", createTime.min))

    return isCurYear, retTime, strYear

end

---@public 获取公众号格式化时间
---@param serverTime int 获取时间戳
---@return string
function PlayerUtil.GetMomentTime(serverTime)
    if not serverTime then
        Debug.LogError("GetMomentTime: serverTime is nil.")
        return
    end
    --留言时间显示：
    --a) 	<1小时：X分钟前
    --b) 	1小时≤留言时间<24小时：X小时前
    --c) 	≥1天：YYYY/MM/DD
    local LocalTime = TimerMgr.GetCurTimeSeconds()
    local passTimeS = LocalTime - serverTime
    if 0 < passTimeS and passTimeS <= 3600 then
        --a) 	<1小时：X分钟前
        local time = math.floor(passTimeS / 60)
        local desc = UITextHelper.GetUIText(UITextConst.UI_TEXT_13407, time)
        return desc
    end

    if 60 < passTimeS and passTimeS <= 86400 then
        --b) 	1小时≤留言时间<24小时：X小时前
        local time = math.floor(passTimeS / 3600)
        local desc = UITextHelper.GetUIText(UITextConst.UI_TEXT_13408, time)
        return desc
    end

    --c) 	≥1天：YYYY/MM/DD
    local time = os.date("%Y/%m/%d", serverTime)
    return time
end

---@public 获取分钟数（向下取整）
---@param totalTime int 总时长（s）
---@return int
function PlayerUtil.GetMinute(totalTime)
    if not totalTime then
        Debug.LogError("GetNormalTime: totalTime is nil.")
        return
    end
    local time = math.floor(totalTime / 60)
    return time
end

---@public 获取格式化时间
---@param totalTime int 总时长
---@return string
function PlayerUtil.GetNormalTime(totalTime)
    if not totalTime then
        Debug.LogError("GetNormalTime: totalTime is nil.")
        return
    end
    --5504	{0}天	通用-标准时间格式	＞24小时
    --5505	{0}时	通用-标准时间格式	[1,24]小时
    --5506	{0}分	通用-标准时间格式	[1,60）分钟
    --5507	{0}秒	通用-标准时间格式	<1分钟

    --5507	{0}秒	通用-标准时间格式	<1分钟
    if totalTime < 0 then
        totalTime = 0
    end
    if 0 <= totalTime and totalTime < 60 then
        local time = math.floor(totalTime)
        local desc = UITextHelper.GetUIText(UITextConst.UI_TEXT_5507, time)
        return desc
    end

    --5506	{0}分	通用-标准时间格式	[1,60）分钟
    if 60 <= totalTime and totalTime < 3600 then
        local time = math.floor(totalTime / 60)
        local desc = UITextHelper.GetUIText(UITextConst.UI_TEXT_5506, time)
        return desc
    end

    --5505	{0}时	通用-标准时间格式	[1,24]小时
    if 60 < totalTime and totalTime <= 86400 then
        local time = math.floor(totalTime / 3600)
        local desc = UITextHelper.GetUIText(UITextConst.UI_TEXT_5505, time)
        return desc
    end

    --5504	{0}天	通用-标准时间格式	＞24小时
    local time = math.floor(totalTime / 86400)
    local desc = UITextHelper.GetUIText(UITextConst.UI_TEXT_5504, time)
    return desc
end

---@public 获取历史时间 超过一年显示 ({0}年前)  不超过一年 ({0}月{1}日 {2}:{3})
---@param serverTime int 服务器时间
---@return string
function PlayerUtil.GetHistoryTime(serverTime)
    local nowTime = TimerMgr.GetDateByUnixTimestamp(TimerMgr.GetCurTimeSeconds())
    local sTime = TimerMgr.GetDateByUnixTimestamp(serverTime)
    if nowTime.year == sTime.year then
        return UITextHelper.GetUIText(UITextConst.UI_TEXT_11575, sTime.month, sTime.day, sTime.hour, sTime.min)
    else
        return UITextHelper.GetUIText(UITextConst.UI_TEXT_11574, nowTime.year - sTime.year)
    end
end

local function getMonsterData(stageID)
    local stageCfg = LuaCfgMgr.Get("CommonStageEntry", stageID)
    if stageCfg == nil or stageCfg.MonsterForShow == nil then
        Debug.LogErrorFormat("关卡未配置怪物信息，关卡ID: %d", stageID)
        return
    end
    local monsterForShow = stageCfg.MonsterForShow
    local monsterTemplateIds = {}
    local monsterPropIds = {}
    for i, v in ipairs(monsterForShow) do
        local id = v.ID
        local num = v.Num
        table.insert(monsterTemplateIds, id)
        table.insert(monsterPropIds, num)
    end
    return monsterTemplateIds, nil, nil, nil, monsterPropIds
end

---@public 显示怪物信息
---@param stageID int
function PlayerUtil.MonsterInfo(stageID)
    local monsterTemplateIds, selectIndex, useFlip, highlightText, monsterPropIds = getMonsterData(stageID)
    UIMgr.Open(UIConf.StageMonsterInfoWnd, monsterTemplateIds, nil, nil, nil, monsterPropIds)
end

return PlayerUtil
