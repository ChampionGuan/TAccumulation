---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by hongyun.
--- DateTime: 2022/6/7 15:33
---

---@type CatCardConst
local CatCardConst = require("Runtime.System.X3Game.Modules.CatCard.Data.CatCardConst")
---@type CatCard.BaseActionData
local BaseActionData = require(CatCardConst.BASE_ACTION_DATA_PATH)

---选择物体的ActionData
---@class CatCard.SelectActionData:CatCard.BaseActionData
local SelectActionData = class("SelectActionData",BaseActionData)

function SelectActionData:ctor()
    BaseActionData.ctor(self)

    ---可选择的物体列表
    ---@type GameObject[]
    self.selectableObjs = nil

    ---音效名称
    ---@type string
    self.soundName = nil

    ---特效名称
    ---@type string
    self.effectName = nil

    ---是否可多选
    ---@type bool
    self.isMulti = false
    
    ---是否检测空白处点击
    self.isCheckEmpty = false

    ---选中物体后的回调
    ---@type fun(obj:GameObject,isSelect:bool):void
    self.onSelectedCallback = nil

    ---选中物体后的移动类型
    ---@type CatCardConst.SelectMoveType
    self.moveType = CatCardConst.SelectMoveType.None

    ---选中物体后要移动的up方向偏移量
    ---@type float
    self.offset = 0

    ---选中物体后要移动到的目标位置
    ---@type Vector3
    self.targetPos = nil

    ---选中物体后的目标旋转
    ---@type Quaternion
    self.targetRot = nil

    ---选中物体后的目标缩放
    ---@type float
    self.targetScale = nil
end

---@param objs GameObject[]
function SelectActionData:SetSelectableObjs(objs)
    self.selectableObjs = objs;
end

---@return GameObject[]
function SelectActionData:GetSelectableObjs()
    return self.selectableObjs
end

---@param soundName string
function SelectActionData:SetSoundName(soundName)
    self.soundName = soundName
end

---@return string
function SelectActionData:GetSoundName()
    return self.soundName
end

---@param effectName string
function SelectActionData:SetEffectName(effectName)
    self.effectName = effectName
end

---@return string
function SelectActionData:GetEffectName()
    return self.effectName
end

---@param isMulti bool
function SelectActionData:SetIsMulti(isMulti)
    self.isMulti = isMulti
end

---@return bool
function SelectActionData:GetIsMulti()
    return self.isMulti
end

---@param isEmpty bool
function SelectActionData:SetIsCheckEmpty(isEmpty)
    self.isCheckEmpty = isEmpty
end

function SelectActionData:GetIsCheckEmpty()
    return self.isCheckEmpty
end

---@param callback fun(index:int,obj:GameObject,isSelect:bool):void
function SelectActionData:SetOnSelectedCallback(callback)
    self.onSelectedCallback = callback
end

---@return fun(index:int,obj:GameObject,isSelect:bool):void
function SelectActionData:GetOnSelectedCallback()
    return self.onSelectedCallback
end

---@param moveType CatCardConst.SelectMoveType
function SelectActionData:SetMoveType(moveType)
    self.moveType = moveType or CatCardConst.SelectMoveType.None
end

---@return CatCardConst.SelectMoveType
function SelectActionData:GetMoveType()
    return self.moveType
end

---@param offset float
function SelectActionData:SetOffset(offset)
    self.offset = offset
end

---@return float
function SelectActionData:GetOffset()
    return self.offset
end

---@param targetPos Vector3
function SelectActionData:SetTargetPos(targetPos)
    self.targetPos = targetPos
end

---@return Vector3
function SelectActionData:GetTargetPos()
    return self.targetPos
end

---@param targetRot Quaternion
function SelectActionData:SetTargetRot(targetRot)
    self.targetRot = targetRot
end

---@return Quaternion
function SelectActionData:GetTargetRot()
    return self.targetRot
end

---@param targetScale float
function SelectActionData:SetTargetScale(targetScale)
    self.targetScale = targetScale
end

---@return float
function SelectActionData:GetTargetScale()
    return self.targetScale
end

---@param objs GameObject[]
---@param soundName string
---@param effectName string
---@param isMulti bool
---@param isCheckEmpty bool
---@param callback fun(index:int,obj:GameObject,isSelect:bool):void
---@param moveType CatCardConst.SelectMoveType 默认为None
---@param offsetOrTargetPos float|Vector3 moveType为Offset时表示偏移，为Target时表示目标位置
---@param targetRot Quaternion 目标旋转 moveType为Target时使用
---@param targetScale float 目标缩放  moveType为Target时使用
function SelectActionData:Set(objs,soundName,effectName,isMulti,isCheckEmpty,callback,moveType,offsetOrTargetPos,targetRot,targetScale)
    self:SetSelectableObjs(objs)
    self:SetSoundName(soundName)
    self:SetEffectName(effectName)
    self:SetIsMulti(isMulti)
    self:SetIsCheckEmpty(isCheckEmpty == nil and true or isCheckEmpty)
    self:SetOnSelectedCallback(callback)
    self:SetMoveType(moveType)
    if moveType == CatCardConst.SelectMoveType.Offset then
         self:SetOffset(offsetOrTargetPos)
    elseif moveType == CatCardConst.SelectMoveType.Target then
        self:SetTargetPos(offsetOrTargetPos)
        self:SetTargetRot(targetRot)
        self:SetTargetRot(targetScale)
    end
end



return SelectActionData