---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by xiaofang.
--- DateTime: 2022/6/6 17:51
---@type CatCardConst
local CatCardConst = require("Runtime.System.X3Game.Modules.CatCard.Data.CatCardConst")
---@type CatCard.CatCardBaseAction
local BaseAction = require(CatCardConst.BASE_ACTION_PATH_NEW)
---@class CatCard.DiscardShowAction:CatCard.CatCardBaseAction
local DiscardShowAction = class("DiscardShowAction", BaseAction)

---@param action_data CatCard.DiscardShowActionData
function DiscardShowAction:Begin(action_data)
    self.funcType = action_data:GetFuncType()
    self.playerType = action_data:GetPlayerType()
    self.show_data = action_data:GetShowData()
    if not self.funcType then
        self:End()
        return
    end
    self.bll:SetGlobalTouchEnable(false)

    self:SetIsRunning(true)
    if self.funcType ~= CatCardConst.FuncEffectType.Nope then
        self.bll:SetDiscardActionState(true)
    end
    if self.funcType == CatCardConst.FuncEffectType.DiscardQuery then
        if self.playerType == CatCardConst.PlayerType.PLAYER then
            EventMgr.Dispatch(CatCardConst.Event.CAT_CARD_SET_MODEL_SELECT, false, CatCardConst.CardType.CARD, nil, CatCardConst.PlayerType.PLAYER)
        else
            self:End()
            return
        end
    end
    if self.funcType == CatCardConst.FuncEffectType.Check then
        if table.nums(self.show_data) == 0 then
            UICommonUtil.ShowMessage(UITextConst.UI_TEXT_35051)
            self:End()
            return
        end
    end
    self:SetModel()
end

function DiscardShowAction:SetModel()
    self:SetAniPause(true)
    self:GetChooseModels()
end

function DiscardShowAction:GetChooseModels()
    self.poolModelMap = PoolUtil.GetTable()
    local num = table.nums(self.show_data)
    self.rootPos, self.rootNode = self.logicCtrl:GetFuncRootNodePosInfo()
    if num < 3 then
        local changePos = self.rootPos - Vector3(0, 0.0658, -0.0843)
        GameObjectUtil.SetPosition(self.rootNode, changePos)
        self.rootScreenPos = self.logicCtrl:WorldPosToScreen(changePos)
        self.resetPos = self.rootPos
    elseif num < 5 then
        local changePos = self.rootPos - Vector3(0, 0.0098, -0.055)
        GameObjectUtil.SetPosition(self.rootNode, changePos)
        self.rootScreenPos = self.logicCtrl:WorldPosToScreen(changePos)
        self.resetPos = self.rootPos
    else
        local changePos = self.rootPos - Vector3(0, -0.014, -0.028)
        GameObjectUtil.SetPosition(self.rootNode, changePos)
        self.rootScreenPos = self.logicCtrl:WorldPosToScreen(changePos)
        self.resetPos = changePos
    end
    self.logicCtrl:InitFuncNodePos()
    for i, v in ipairs(self.show_data) do
        local model_name = self.funcType == CatCardConst.FuncEffectType.CheckPlayerCard and v:GetRealCardModel() or v:GetCardModel()
        local model = self:LoadModel(model_name)
        local index = 11 - i
        local parent_node = self.logicCtrl:GetFuncNode(index)
        if model and parent_node then
            local transform = GameObjectUtil.GetComponent(model, nil, "Transform")
            GameObjectUtil.SetParent(model.transform, parent_node.transform)
            GameObjectUtil.SetLocalEulerAngles(transform, CS.UnityEngine.Vector3(0, 0, 180))
            GameObjectUtil.SetLayer(model, Const.LayerMask.RT, true)
            GameObjectUtil.SetActive(model.gameObject, false)
            self.poolModelMap[i] = { model_name = model_name, model = model, card_id = v:GetId(), screen_pos = self.logicCtrl:GetFuncScreenPosByIndex(index) }
        end
    end
    local showCenter, centerScreenPos = self.logicCtrl:GetDiscardShowCenter()
    local params = {
        show_data = self.show_data,
        action_data = self.actionData,
        pool_model_map = self.poolModelMap,
        rootInfo = { rootPos = self.resetPos, rootNode = self.rootNode, rootScreenPos = self.rootScreenPos, showCenter = showCenter, centerScreenPos = centerScreenPos }
    }
    UIMgr.Open(UIConf.CatCardCommonChooseWnd, params)
end

function DiscardShowAction:End()
    if self.isRunning then
        if self.rootPos and self.rootNode then
            GameObjectUtil.SetPosition(self.rootNode, self.rootPos)
        end
        --R20 这里提前触发CatCardBLL的Resume导致起了Pipeline而CatCardCommonChooseWnd尚未Close整个流程后续就混乱了
        --self:SetAniPause(false)
        self:SetIsRunning(false)
        if self.funcType ~= CatCardConst.FuncEffectType.Nope then
            self.bll:SetDiscardActionState(false)
        end
        self.bll:SetGlobalTouchEnable(true)
        UIMgr.Close(UIConf.CatCardCommonChooseWnd)
        self:SetAniPause(false)
    end
    BaseAction.End(self)
end

function DiscardShowAction:Exit()
    if self:IsRunning() then
        self:SetIsRunning(false)
        UIMgr.Close(UIConf.CatCardCommonChooseWnd)
    end
end

--设置动画是否暂停
function DiscardShowAction:SetAniPause(is_pause)
    if is_pause then
        self.bll:Pause()
    else
        self.bll:Resume()
    end
end
return DiscardShowAction
