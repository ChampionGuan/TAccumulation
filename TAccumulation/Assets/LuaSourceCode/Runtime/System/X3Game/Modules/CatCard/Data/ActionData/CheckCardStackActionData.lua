---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by jiaozhu.
--- DateTime: 2022/6/20 22:16
--- 检测出牌历史堆栈
local CatCardConst = require("Runtime.System.X3Game.Modules.CatCard.Data.CatCardConst")
---@type CatCard.BaseActionData
local BaseActionData = require(CatCardConst.BASE_ACTION_DATA_PATH)
---@class CatCard.CheckCardStackActionData:CatCard.BaseActionData
local CheckCardStackActionData = class("CheckCardStackActionData",BaseActionData)

function CheckCardStackActionData:ctor()
    BaseActionData.ctor(self)
    ---@type CatCardData
    self.data = nil
    ---@type boolean
    self.isPassVeto = false
    ---@type boolean
    self.isCanShowCard =false
end

--region Set


---@param data CatCardData
function CheckCardStackActionData:SetData(data)
    self.data = data
end

---@param isPassVeto boolean
function CheckCardStackActionData:SetIsPassVeto(isPassVeto)
    self.isPassVeto = isPassVeto
end

---@param isCanShowCard boolean
function CheckCardStackActionData:SetIsCanShowCard(isCanShowCard)
    self.isCanShowCard = isCanShowCard
end

--endregion

--region Get

---@return CatCardData
function CheckCardStackActionData:GetData()
    return self.data    
end

---@return boolean
function CheckCardStackActionData:IsPassVeto()
    return self.isPassVeto
end

---@return boolean
function CheckCardStackActionData:IsCanShowCard()
    return self.isCanShowCard
end

--endregion

---@param isPassVeto boolean
---@param cardId int
function CheckCardStackActionData:Set(cardId,isPassVeto)
    self:SetIsPassVeto(isPassVeto)
    if cardId and cardId~=0 then
        self:SetCardId(cardId)
        self:SetData(self.bll:GenData(CatCardConst.CardType.CARD,self:GetCardId(),0))
    end
end

function CheckCardStackActionData:OnClear()
    self.bll:ReleaseData(self:GetData())
end

function CheckCardStackActionData:OnInit()
    self:SetIsCanShowCard(true)
end

return CheckCardStackActionData