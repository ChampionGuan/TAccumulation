---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by jiaozhu.
--- DateTime: 2022/6/1 23:39
--- 格子上显示猫

---@type CatCardConst
local CatCardConst = require("Runtime.System.X3Game.Modules.CatCard.Data.CatCardConst")
---@type CatCard.CatCardBaseAction
local BaseAction = require(CatCardConst.BASE_ACTION_PATH_NEW)
---@class CatCard.CatShowAction:CatCard.CatCardBaseAction
local CatShowAction = class("CatShowAction", BaseAction)
---@param action_data CatCard.CatShowActionData
function CatShowAction:Begin(action_data)
    local slot_idx = action_data:GetSlotIdx()
    local player_type = action_data:GetPlayerType()
    EventMgr.Dispatch(CatCardConst.Event.CAT_CARD_REFRESH_MODEL, CatCardConst.CardType.SLOT, slot_idx, player_type)
    self:PlayCatAppearAction(action_data)
end

---播放ui特效
---@param is_active boolean
function CatShowAction:SetEffectActive(is_active)
    ---@type CatCard.CatShowActionData
    local data = self:GetData()
    ---@type CatCard.EffectActionData
    local action_data = self.bll:GetActionData(CatCardConst.ActionType.EffectAction, data:GetPlayerType())
    local state = is_active and CatCardConst.EffectState.SHOW or CatCardConst.EffectState.HIDE
    local effect_name = CatCardConst.Effect.MODEL_APPEAR_UI
    local slot_idx = data:GetSlotIdx()
    action_data:Set(state, effect_name, slot_idx, CatCardConst.CardType.SLOT)
    action_data:Begin()
end

---@param action_data CatCard.CatShowActionData
function CatShowAction:PlayCatAppearAction(action_data)
    local slot_idx = action_data:GetSlotIdx()
    local player_type = action_data:GetPlayerType()
    local model = self:GetModel(CatCardConst.CardType.SLOT, slot_idx, player_type)
    if model then
        local cat = model:GetModelByType("CAT")
        if cat then
            self:SetEffectActive(true, model)
            TimerMgr.AddTimer(0.2, function()
                self:ShowScore(slot_idx, self.bll:GetScoreBySlotIdx(slot_idx, player_type), player_type)
            end)
            EventMgr.Dispatch(CatCardConst.Event.CAT_CARD_SET_MODEL_LAYER, Const.LayerMask.RT, CatCardConst.CardType.SLOT, slot_idx, player_type)
            local data = self.bll:GetData(CatCardConst.CardType.SLOT, slot_idx)
            local animation_list = data:GetCatAppearAnimationList()
            if animation_list and #animation_list > 0 then
                self:PlayCatSound(model, cat, data, animation_list)
                self.bll:CheckAnimation(CatCardConst.AnimationType.DEFAULT, CatCardConst.AnimationState.ANIMATION, cat, handler(self, self.PlayCatIdleAction), animation_list)
                PoolUtil.ReleaseTable(animation_list)
                return
            end
        end
    end
    self:PlayCatIdleAction()
end

---@param slot_idx int
---@param score number
---@param player_type CatCardConst.PlayerType
function CatShowAction:ShowScore(slot_idx, score, player_type)
    ---@type CatCard.ShowScoreActionData
    local action = self.bll:GetActionData(CatCardConst.ActionType.ShowScore, player_type)
    action:Set(slot_idx, score)
    action:Begin()
end

---@param model GameObject
---@param cat GameObject
---@param data SlotData
---@param animation_list string[]
function CatShowAction:PlayCatSound(model, cat, data, animation_list)
    self.bll:CheckSound(CatCardConst.SoundType.DEFAULT, CatCardConst.Sound.SYSTEM_MIAO_APPEAR)
    local ani_dt = model:GetAnimationDt(cat, animation_list[1])
    local sound = data:GetSound()
    --防止动画播放完后直接结束Action导致声音未播放的问题
    self.playSound = function()
        if self.bll then
            self.bll:CheckSound(CatCardConst.SoundType.DEFAULT, sound)
        end
    end
    TimerMgr.AddScaledTimer(ani_dt, function()
        self.playSound()
        self.playSound = nil
    end, self)
end

---播放idle
function CatShowAction:PlayCatIdleAction()
    ---@type CatCard.CatShowActionData
    local action_data = self:GetData()
    local slot_index = action_data:GetSlotIdx()
    local player_type = action_data:GetPlayerType()
    EventMgr.Dispatch(CatCardConst.Event.CAT_CARD_SET_MODEL_LAYER, Const.LayerMask.DEFAULT, CatCardConst.CardType.SLOT, slot_index, player_type)
    local model = self:GetModel(CatCardConst.CardType.SLOT, slot_index, player_type)
    if model then
        local cat = model:GetModelByType("CAT")
        if cat then
            local data = self.bll:GetData(CatCardConst.CardType.SLOT, slot_index)
            local animation_name = data:GetCatAnimation()
            if animation_name then
                self.bll:CheckAnimation(CatCardConst.AnimationType.DEFAULT, CatCardConst.AnimationState.ANIMATION, cat, nil, animation_name)
            end

            self:SetEffectActive(false, model)
        end
    end
    if self.playSound then
        self.playSound()
    end
    self:End()
end

return CatShowAction