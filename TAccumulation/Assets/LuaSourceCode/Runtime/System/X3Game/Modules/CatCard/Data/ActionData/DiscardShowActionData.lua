---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by xiaofang.
--- DateTime: 2022/6/6 18:16
---@type CatCardConst
local CatCardConst = require("Runtime.System.X3Game.Modules.CatCard.Data.CatCardConst")
---@type CatCard.BaseActionData
local BaseActionData = require(CatCardConst.BASE_ACTION_DATA_PATH)
---@class CatCard.DiscardShowActionData:CatCard.BaseActionData
local DiscardShowActionData = class("DiscardShowActionData", BaseActionData)

function DiscardShowActionData:ctor()
    self.funcType = nil
    self.playerType = CatCardConst.PlayerType.PLAYER
    self.revealCards = nil  --对方手牌列表
    self.show_data = {}
    self.isRotation = true
    self.selectCardId = 0  --npc选中的卡牌id
end

---@param funcType int  CatCardConst.FuncEffectType 功能牌类型
function DiscardShowActionData:Set(funcType)
    self:SetFuncType(funcType)
end

---@param funcType int  CatCardConst.FuncEffectType 功能牌类型
function DiscardShowActionData:Set(funcType)
    self:SetFuncType(funcType)
end

function DiscardShowActionData:SetFuncType(funcType)
    self.funcType = funcType
    self:SetShowData()
end

function DiscardShowActionData:SetParam(params)
    BaseActionData.SetParam(self, params)
    self:SetCardType(params[0])
end

---设置立牌面显示数据
function DiscardShowActionData:SetShowData()
    if not self.funcType then
        return
    end
    self.show_data = {}
    self.stateData = self.bll:GetStateData()
    if self.funcType == CatCardConst.FuncEffectType.Nope then
        --查看弃牌数据
        local discards = self.stateData:GetFuncDiscard()
        local show_info = {}
        local num = table.nums(discards)
        local endIndex = num > CatCardConst.MAX_FUNCCARD_COUNT and num - 9 or 1
        for i = num, endIndex, -1 do
            table.insert(show_info, discards[i])
        end
        for i, v in pairs(show_info) do
            table.insert(self.show_data, self.bll:GenData(CatCardConst.CardType.CARD, v, i))
        end
    elseif self.funcType == CatCardConst.FuncEffectType.DiscardQuery then
        --弃牌询问
        ---@type CatCardConst.CatCardType
        local cardType = self:GetCardType()
        local cardList = self.bll:GetDataList(CatCardConst.CardType.CARD, CatCardConst.PlayerType.PLAYER)
        if cardType == CatCardConst.CatCardType.None then
            self.show_data = cardList
        else
            for i, v in pairs(cardList) do
                if v:GetSubType() == cardType then
                    table.insert(self.show_data, v)
                end
            end
        end
    elseif self.funcType == CatCardConst.FuncEffectType.Check then
        --查看对方手牌
        self.revealCards = self:GetParam()
        if next(self.revealCards) then
            for i, v in pairs(self.revealCards) do
                table.insert(self.show_data, self.bll:GenData(CatCardConst.CardType.CARD, v, i))
            end
        end
    elseif self.funcType == CatCardConst.FuncEffectType.Recycle then
        --从弃牌堆回收
        local params = self:GetParam()
        local cardId = self:GetCardId()
        self.selectCardId = params[1]
        local func_ids = self.stateData:GetFiveFuncCard(self.selectCardId)
        for i, v in pairs(func_ids) do
            table.insert(self.show_data, self.bll:GenData(CatCardConst.CardType.CARD, v, i))
        end
    elseif self.funcType == CatCardConst.FuncEffectType.RevealNDiscard then
        local params = self:GetParam()
        self.selectCardId = params[1]   --npc选择卡牌
        self.revealCards = {}
        for i = 2, #params do
            table.insert(self.revealCards, params[i])
        end
        if next(self.revealCards) then
            for i, v in pairs(self.revealCards) do
                table.insert(self.show_data, self.bll:GenData(CatCardConst.CardType.CARD, v, i))
            end
        end
    elseif self.funcType == CatCardConst.FuncEffectType.CheckPlayerCard then
        --查看男主手牌
        self.show_data = self.bll:GetDataList(CatCardConst.CardType.CARD, CatCardConst.PlayerType.ENEMY)
    end
end

---设置查看对方手牌列表
---@param params table  卡牌列表
function DiscardShowActionData:SetRevealCardIds(params)
    self.revealCards = params
end

---获得过河拆庙男主随机卡牌数量
function DiscardShowActionData:GetRevealCardIds()
    return self.revealCards
end

---@return bool 是否旋转
function DiscardShowActionData:GetIsRotation()
    return self.isRotation
end

---获得立牌面数据
---@return CatCardData[]
function DiscardShowActionData:GetShowData()
    return self.show_data
end

---@return int npc选中的卡牌id
function DiscardShowActionData:GetSelectCardId()
    return self.selectCardId
end

---获得功能牌类型
---@return int CatCardConst.FuncEffectType
function DiscardShowActionData:GetFuncType()
    if not self.funcType then
        self.funcType = self:GetEffectType()
        self:SetShowData()
    end
    return self.funcType
end

---获得配置数据
function DiscardShowActionData:GetConstData()
    self.constData = PoolUtil.GetTable()  --可配置数据
    self.constData.animType = 0  --0 从下到上，1从上到下
    self.constData.bgType = 0
    self.constData.iconType = 0
    self.constData.titleInfo = ""
    if self.funcType == CatCardConst.FuncEffectType.Nope then
        self.constData.animType = 1
        self.constData.bgType = 0
        self.constData.iconType = CatCardConst.DiscardIconType.CheckDiscard
        self.constData.titleInfo = UITextHelper.GetUIText(CatCardConst.DiscardTitleInfo[self.constData.iconType])
    else
        self.constData.bgType = self.playerType
        if self.playerType == CatCardConst.PlayerType.PLAYER then
            if self.funcType == CatCardConst.FuncEffectType.DiscardQuery then
                self.constData.iconType = CatCardConst.DiscardIconType.DisPlayer
                self.constData.titleInfo = UITextHelper.GetUIText(CatCardConst.DiscardTitleInfo[self.constData.iconType])
                self.constData.animType = 0
            elseif self.funcType == CatCardConst.FuncEffectType.Check then
                self.constData.iconType = CatCardConst.DiscardIconType.DisPlayer
                local role_name = UITextHelper.GetUIText(self.bll:GetName(CatCardConst.PlayerType.ENEMY))
                self.constData.titleInfo = UITextHelper.GetUIText(CatCardConst.DiscardTitleInfo[CatCardConst.DiscardIconType.Check], role_name)
                self.constData.animType = 1
            elseif self.funcType == CatCardConst.FuncEffectType.Recycle then
                self.constData.iconType = CatCardConst.DiscardIconType.StealPlayer
                self.constData.titleInfo = UITextHelper.GetUIText(CatCardConst.DiscardTitleInfo[self.constData.iconType], UITextHelper.GetUIText(UITextConst.UI_TEXT_35061))
                self.constData.animType = 1
            end
        else
            local role_name = UITextHelper.GetUIText(self.bll:GetName(CatCardConst.PlayerType.ENEMY))
            if self.funcType == CatCardConst.FuncEffectType.Recycle then
                self.constData.iconType = CatCardConst.DiscardIconType.StealEnemy
                self.constData.animType = 1
            elseif self.funcType == CatCardConst.FuncEffectType.RevealNDiscard then
                self.constData.iconType = CatCardConst.DiscardIconType.DisEnemy
                self.constData.animType = 0
            end
            self.constData.titleInfo = UITextHelper.GetUIText(CatCardConst.DiscardTitleInfo[self.constData.iconType], role_name)
        end
    end
    return self.constData
end

--获得mask显示条件
function DiscardShowActionData:GetMaskData(num)
    if self.funcType == CatCardConst.FuncEffectType.Nope or self.funcType == CatCardConst.FuncEffectType.CheckPlayerCard then
        return num > 6
    elseif self.funcType == CatCardConst.FuncEffectType.Recycle then
        --顺手牵喵
        return false
    elseif self.funcType == CatCardConst.FuncEffectType.Check then
        return false
    elseif self.funcType == CatCardConst.FuncEffectType.RevealNDiscard then
        return false
    elseif self.funcType == CatCardConst.FuncEffectType.DiscardQuery then
        return num > 4
    end
    return false
end

function DiscardShowActionData:End()
    BaseActionData.End(self)
    PoolUtil.ReleaseTable(self.constData)
end

return DiscardShowActionData
