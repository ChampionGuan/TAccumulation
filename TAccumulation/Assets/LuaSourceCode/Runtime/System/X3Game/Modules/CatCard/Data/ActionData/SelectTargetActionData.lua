---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by jiaozhu.
--- DateTime: 2022/6/9 10:33
--- 目标选中数据
local CatCardConst = require("Runtime.System.X3Game.Modules.CatCard.Data.CatCardConst")
---@type CatCard.TargetFilterActionData
local BaseActionData = require(CatCardConst.ActionDataConf[CatCardConst.ActionType.TargetFilter])
---@class CatCard.SelectTargetActionData:CatCard.TargetFilterActionData
local SelectTargetActionData = class("SelectTargetActionData", BaseActionData)

--region 初始化
function SelectTargetActionData:ctor()
    BaseActionData.ctor(self)

    ---多选最大数量
    ---@type int
    self.maxSelectCount = 0

    ---多选超出最大数量 或者点击了不可选择对象的回调
    ---@type fun(type:CatCardConst.CardType,type:int,type:CatCardConst.PlayerType):void
    self.inValidSelectCall = nil

    ---选中之后的回调
    ---@type fun(type:CatCardConst.CardType,type:int,type:CatCardConst.PlayerType):void
    self.selectCall = nil

    ---点击时的自定义检查回调
    ---@type fun(type:CatCardConst.CardType,type:int,type:CatCardConst.PlayerType):bool
    self.customCheckCall = nil

    ---选中模式
    ---@type CatCardConst.SelectTargetMode
    self.selectMode = CatCardConst.SelectTargetMode.None

    ---是否显示可选列表
    ---@type boolean
    self.isShowCanSelect = false

    ---是否可以显示preview
    ---@type boolean
    self.isCanShowPreview = false

end

--region Set

---@param selectMode CatCardConst.SelectTargetMode
function SelectTargetActionData:SetSelectMode(selectMode)
    self.selectMode = selectMode
end

---@param isShowCanSelect boolean
function SelectTargetActionData:SetIsShowCanSelect(isShowCanSelect)
    self.isShowCanSelect = isShowCanSelect
end

---@param isCanShowPreview boolean
function SelectTargetActionData:SetIsCanShowPreview(isCanShowPreview)
    self.isCanShowPreview = isCanShowPreview
end

---@param maxSelectCount int
function SelectTargetActionData:SetMaxSelectCount(maxSelectCount)
    self.maxSelectCount = maxSelectCount
end

---@param inValidSelectCall fun(type:CatCardConst.CardType,type:int,type:CatCardConst.PlayerType):void
function SelectTargetActionData:SetInvalidSelectCall(inValidSelectCall)
    self.inValidSelectCall = inValidSelectCall
end

---@param selectCall fun(type:CatCardConst.CardType,type:int,type:CatCardConst.PlayerType)
function SelectTargetActionData:SetSelectCall(selectCall)
    self.selectCall = selectCall
end

---@param customCheckCall fun(type:CatCardConst.CardType,type:int,type:CatCardConst.PlayerType)
function SelectTargetActionData:SetCustomCheckCall(customCheckCall)
    self.customCheckCall = customCheckCall
end

---@param cardType CatCardConst.CardType
---@param posIndex int
---@param playerType CatCardConst.PlayerType
function SelectTargetActionData:SetSelectCount(cardType, posIndex, playerType)
    self.bll:SetCurSelectIndex(cardType, posIndex, playerType)
end
--endregion

--region Get

---模式是否激活
---@param mode CatCardConst.SelectTargetMode
function SelectTargetActionData:IsModeEnable(mode)
    return self.selectMode & mode == mode
end

---@param cardType CatCardConst.CardType
---@param count int
function SelectTargetActionData:IsCountValid(cardType, count)
    count = count or self:GetSelectedCount(cardType)
    if count > self.maxSelectCount then
        return false
    end
    return true
end

function SelectTargetActionData:IsSelect(cardType, posIndex)
    local map = self.bll:GetSelectIndexs(cardType)
    local isExist = table.containsvalue(map, posIndex)
    return isExist
end

---获取当前选中的数量
---@param cardType CatCardConst.CardType
function SelectTargetActionData:GetSelectedCount(cardType)
    return self.bll:GetCurSelectCount(cardType)
end

---@return boolean
function SelectTargetActionData:IsShowCanSelect()
    return self.isShowCanSelect
end

---@return boolean
function SelectTargetActionData:IsCanShowPreview()
    return self.isCanShowPreview
end

--endregion


---@param targetType CatCardConst.SelectTargetType
---@param targetFilterType CatCardConst.SelectTargetFilterType
---@param targetOwner CatCardConst.SelectTargetOwner
---@param selectMode CatCardConst.SelectTargetMode
function SelectTargetActionData:Set(targetType, targetFilterType, targetOwner, selectMode)
    BaseActionData.Set(self, targetType, targetFilterType, targetOwner)
    self:SetSelectMode(selectMode or CatCardConst.SelectTargetMode.Single)
end

--region 内部逻辑

function SelectTargetActionData:OnInit()
    BaseActionData.OnInit(self)
    self:SetMaxSelectCount(1)
    self:SetSelectMode(CatCardConst.SelectTargetMode.Single)
end

---无效点击
function SelectTargetActionData:OnInvalidSelect(cardType, posIndex, playerType)
    if self.inValidSelectCall then
        self.inValidSelectCall(cardType, posIndex, playerType, self.action)
    end
end

---@param cardType CatCardConst.CardType
---@param posIndex int
---@param playerType CatCardConst.PlayerType
function SelectTargetActionData:OnSelect(cardType, posIndex, playerType)
    self:SetSelectCount(cardType, posIndex, playerType)
    if self.selectCall then
        self.selectCall(cardType, posIndex, playerType)
    end
end

---点击时的自定义检查
function SelectTargetActionData:OnCustomCheck(cardType, posIndex, playerType)
    if self.customCheckCall then
        return self.customCheckCall(cardType, posIndex, playerType)
    end
    return true
end

--endregion

return SelectTargetActionData