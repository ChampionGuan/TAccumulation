---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by pc.
--- DateTime: 2020/8/28 20:06
---

local CatCardConst = require("Runtime.System.X3Game.Modules.CatCard.Data.CatCardConst")
local BaseState = require(CatCardConst.BASE_STATE_PATH)
---@class CatCard.State.P2PreState:CatCardBaseState
local P2PreState = class("P2PreState", BaseState)

function P2PreState:Execute(is_special, ...)
    if self.bll:IsPrepare() then
        self:ShowRealCards()
        return
    end
    self:SetIsRunning(true)
    self:ShowRealCards()
    if not is_special then
        --暂时没弄清这个是啥
        --self.bll:PlayDialog(self.bll:GetStateData():GetEventConversationId(), handler(self, self.CheckAction))
        self:CheckAction()
    else
        self:ChangeToSelect(...)
    end
end

function P2PreState:ChangeToSelect(is_no_delay)
    local popState = self.bll:GetStateData():GetPopState()
    local state = ""
    if popState == CatCardConst.PopCardState.PopFuc then
        state = CatCardConst.DialogueState.ManSelectFuncCard
    else
        state = CatCardConst.DialogueState.ManSelect
    end
    local playerType = self.bll:GetPlayerType(self.bll.stateData:GetSeat())
    ---@type CatCard.ChangeDialogueStateActionData
    local actionData = self.bll:GetActionData(CatCardConst.ActionType.ChangeDialogueState, playerType)
    actionData:SetState(state)
    actionData:SetDialogueCtrlState(CatCardConst.DialogueCtrlState.Start)
    actionData:Begin()

    if not is_no_delay then
        TimerMgr.AddTimer(self.bll:GetWaitingTime(CatCardConst.PlayerType.ENEMY), self.PlayMiaoCard, self)
    else
        self:PlayMiaoCard()
    end
end

function P2PreState:PlayMiaoCard()
    if self.bll:GetMode() == CatCardConst.ModeType.Func then
        self.bll:CheckAction(CatCardConst.SpecialType.NET_WORK, CatCardConst.NetworkType.PLAYFUNCCARD, nil, CatCardConst.MiaoActionType.Nope)
    else
        self.bll:CheckAction(CatCardConst.SpecialType.NET_WORK, CatCardConst.NetworkType.PLAYMIAOCARD, nil, CatCardConst.AnimationType.NPCPLAY)
    end

    self:SetIsRunning(false)
end

function P2PreState:CheckAction()
    BaseState.CheckAction(self, CatCardConst.PlayerType.ENEMY)
    self:SetIsRunning(false)
end

function P2PreState:GetCardsType()

end

function P2PreState:Leave()
    BaseState.Leave(self)
    TimerMgr.DiscardTimerByTarget(self)
end

return P2PreState