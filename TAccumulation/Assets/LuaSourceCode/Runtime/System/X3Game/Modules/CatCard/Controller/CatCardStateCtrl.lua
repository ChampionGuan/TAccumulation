---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by pc.
--- DateTime: 2020/8/28 17:35
---
local CatCardConst = require("Runtime.System.X3Game.Modules.CatCard.Data.CatCardConst")
local CatCardBaseCtrl = require(CatCardConst.BASE_CTRL_PATH)
---@class CatCardStateCtrl:BaseCatCardCtrl
local CatCardStateCtrl = class("CatCardStateCtrl",CatCardBaseCtrl)


function CatCardStateCtrl:RegisterEvent()
    EventMgr.AddListener(CatCardConst.Event.CAT_CARD_CHECK_SPECIAL_STATE,self.CheckSpecialState,self)
end

function CatCardStateCtrl:GetTypeMap()
    return CatCardConst.State
end


---获取状态处理
function CatCardStateCtrl:GetHandler(state)
    local handler = self.node_map[state]
    if not handler then
        local path = CatCardConst.StateConf[state].handler
        if self.bll:IsInGuide() and CatCardConst.GuideStateConf[state] then
            path = CatCardConst.GuideStateConf[state].handler
        end
        handler =  require(path).new()
        handler:SetState(state)
        handler:Enter()
        self.node_map[state] = handler
    end
    return handler
end

---检测状态
---is_jump_pre,is_special
function CatCardStateCtrl:Check(state,...)
    local handler = self:GetHandler(state)
    if handler then
        if self.last_handler then
            self.last_handler:Leave()
        end
        self.last_handler = handler
        handler:Execute(...)
    end
end


--显示神游相关的状态
--刚开始的时候，除了可开始阶段，其他状态全部不考虑，直接进行其他流程
function CatCardStateCtrl:CheckSpecialState(...)
    self.bll:CheckState(true,...)
end

function CatCardStateCtrl:ExitState()
    for k,state in pairs(self.node_map) do
        state:Exit()
    end
end

function CatCardStateCtrl:Enter()
    self.super.Enter(self)
    self:RegisterEvent()
end


function CatCardStateCtrl:Exit()
    self.super.Exit(self)
end

return CatCardStateCtrl