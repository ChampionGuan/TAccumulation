---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by jiaozhu.
--- DateTime: 2022/6/8 23:34
---出功能牌
---@type CatCardConst
local CatCardConst = require("Runtime.System.X3Game.Modules.CatCard.Data.CatCardConst")
---@type CatCard.CatCardBaseAction
local BaseAction = require(CatCardConst.BASE_ACTION_PATH_NEW)
---@class CatCard.PopFuncCardAction:CatCard.CatCardBaseAction
local PopFuncCardAction = class("PopFuncCardAction", BaseAction)

---@param action_data CatCard.PopCardActionData
function PopFuncCardAction:Begin(action_data)
    local curIndex = self.bll:GetCurSelectIndex(CatCardConst.CardType.CARD)
    --这里拿到的还是新的数据
    --local data = self.bll:GetData(CatCardConst.CardType.CARD, curIndex, action_data.playerType)
    local data = self.bll:GenData(CatCardConst.CardType.CARD, action_data.cardId, curIndex)
    if data:GetEffectId() == CatCardConst.FuncCardType.RICHCARD or data:GetEffectId() == CatCardConst.FuncCardType.BANKRUPTCYCARD then
        self.bll:SetCardMode(CatCardConst.CardMode.Old)
        self.bll:RemoveOldCardByIndex(curIndex, action_data.playerType)
        self.bll:ReGenOldDataMap(action_data.playerType)
    end
    self.bll:ReleaseData(data)
    
    BaseAction.Begin(self, action_data)
    self.player_type = action_data:GetPlayerType()
    ---@type CatCard.ChangeDialogueStateActionData
    local playDialog = self.bll:GetActionData(CatCardConst.ActionType.ChangeDialogueState, self.player_type)
    playDialog:SetState(CatCardConst.PlayerTypeConf[self.player_type].put_func_card)
    playDialog:SetDialogueCtrlState(CatCardConst.DialogueCtrlState.Start)
    playDialog:Begin()
    self:ShowCard()
end

---剧情检测
---@param state string 剧情state
---@param call_back fun()
function PopFuncCardAction:CheckDialogue(state, call_back)
    ---@type CatCard.ChangeDialogueStateActionData
    local playDialog = self.bll:GetActionData(CatCardConst.ActionType.ChangeDialogueState, self.playType, function()
        call_back()
    end)
    playDialog:SetState(state)
    playDialog:SetDialogueCtrlState(CatCardConst.DialogueCtrlState.Start)
    playDialog:Begin()
end

function PopFuncCardAction:RemoveCard(ignoreMoveCardPos)

    ---@type CatCard.PopCardActionData
    local action_data = self:GetData()
    self:RemoveModel(CatCardConst.CardType.CARD, action_data:GetPosIdx(), action_data:GetPlayerType())
    if action_data:GetSlotIdx() and action_data:GetSlotIdx() > 0 then
        ---@type CatCard.TargetStateActionData
        local action = self.bll:GetActionData(CatCardConst.ActionType.TargetState, action_data:GetPlayerType())
        local select_state = CatCardConst.TargetShowState.Unselect | CatCardConst.TargetShowState.DisableCanSelect
        action:Set(CatCardConst.CardType.SLOT, action_data:GetSlotIdx(), select_state)
        action:Begin()
    end

    if not ignoreMoveCardPos then
        ---不忽略删除卡牌后的卡牌位置移动
        --if action_data:GetPosIdx() and action_data:GetPosIdx()>0 then
        --    ---@type CatCard.MoveCardPosActionData
        --    local actionDataMoveCard = self.bll:GetActionData(CatCardConst.ActionType.MoveCardPosAction,action_data:GetPlayerType())
        --    actionDataMoveCard:Set(action_data:GetPosIdx(),true)
        --    actionDataMoveCard:Begin()
        --end
        self:MoveCardPos()
    end

end

function PopFuncCardAction:MoveCardPos()
    local action_data = self:GetData()
    if action_data:GetPosIdx() and action_data:GetPosIdx() > 0 then
        ---@type CatCard.MoveCardPosActionData
        local actionDataMoveCard = self.bll:GetActionData(CatCardConst.ActionType.MoveCardPosAction, action_data:GetPlayerType())
        actionDataMoveCard:Set(action_data:GetPosIdx(), true)
        actionDataMoveCard:Begin()
    end
end

function PopFuncCardAction:ShowCard()
    ---@type CatCard.PopCardActionData
    local data = self:GetData()
    local card_data = data:GetData()
    local player_type = data:GetPlayerType()

    if player_type == CatCardConst.PlayerType.ENEMY then

        self:RemoveCard()
        local player_conf = CatCardConst.PlayerTypeConf[player_type]
        local move_speed = player_conf.play_func_card_speed
        local move_easy_type = player_conf.play_func_card_easy_type
        local rotation_dt = player_conf.play_func_card_rotation_dt
        local rotation_easy = player_conf.play_func_card_rotation_easy_type

        ---否决牌的挂点
        local slot_stack
        if card_data:GetEffectId() == CatCardConst.FuncCardType.VETOCARD then
            slot_stack = self.logicCtrl:GetChildNode(CatCardConst.VOTE_CARD_NODE_MAN)
            move_speed = player_conf.play_veto_card_speed
            move_easy_type = player_conf.play_veto_card_easy_type
            rotation_dt = player_conf.play_veto_card_rotation_dt
            rotation_easy = player_conf.play_veto_card_rotation_easy_type
        end

        ---@type CatCard.ShowCardActionData
        local action_data = self.bll:GetActionData(CatCardConst.ActionType.ShowCardAction, player_type, function()
            TimerMgr.AddScaledTimer(LuaCfgMgr.Get("SundryConfig", X3_CFG_CONST.MIAOCARDFUNCTIONCARDSHOWTIME), self.ShowCardEnd, self)
        end)
        action_data:Set(data:GetCardId(), true, true, data:GetPosIdx())
        action_data:SetSlotStack(slot_stack)
        action_data:SetMove(move_speed, move_easy_type, rotation_dt, rotation_easy)

        action_data:Begin()
        --EventMgr.Dispatch(CatCardConst.Event.CAT_CARD_SET_SELECT_ENABLE,false)
    else

        if card_data:GetEffectId() == CatCardConst.FuncCardType.VETOCARD then
            ---女主否决牌有动效
            ---修正posIndex 否则可能有位置不正确的Bug
            local posIndex = self.bll:GetOldCardIndex(card_data:GetId(), player_type)
            data:SetPosIdx(posIndex)

            ---删除手牌 但不立刻移动右侧手牌
            self:RemoveCard(true)

            ---否决牌的挂点
            local slot_stack = self.logicCtrl:GetChildNode(CatCardConst.VOTE_CARD_NODE_PLAYER)
            local action_data = self.bll:GetActionData(CatCardConst.ActionType.ShowCardAction, player_type, function()
                self.bll:SetCardMode(CatCardConst.CardMode.Old)
                self.bll:RemoveOldCardByIndex(posIndex, player_type)
                self.bll:ReGenOldDataMap(player_type)
                self:MoveCardPos()
                ---否决牌飞到挂点后再去移动剩余手牌
                TimerMgr.AddScaledTimer(LuaCfgMgr.Get("SundryConfig", X3_CFG_CONST.MIAOCARDFUNCTIONCARDSHOWTIME), self.ShowCardEnd, self)
            end)
            action_data:Set(data:GetCardId(), true, true, data:GetPosIdx())
            action_data:SetSlotStack(slot_stack)

            action_data:Begin()
            EventMgr.Dispatch(CatCardConst.Event.CAT_CARD_SET_SELECT_ENABLE, false)
        else
            ---删除手牌
            self:RemoveCard()

            ---女主普通功能牌 没有动效 直接结束
            self:End()
        end
    end
end

function PopFuncCardAction:CheckCardStack()
    ---@type CatCard.PopCardActionData
    local self_data = self:GetData()
    ---@type CatCard.CheckCardStackActionData
    local action_data = self.bll:GetActionData(CatCardConst.ActionType.CheckCardStackAction, self_data:GetPlayerType())
    action_data:Set(self_data:GetCardId())
    action_data:SetIsCanShowCard(false)
    action_data:Begin()
end

---ShowCardAction的出牌动效悬停结束后调用
function PopFuncCardAction:ShowCardEnd()

    local data = self:GetData()
    local player_type = data:GetPlayerType()
    if player_type == CatCardConst.PlayerType.PLAYER and self.bll:GetStateData():GetSeat() == CatCardConst.SeatType.PLAYER then
        ---女主回合出牌动效结束后才需要开启手牌的选择控制
        EventMgr.Dispatch(CatCardConst.Event.CAT_CARD_SET_SELECT_ENABLE, true)
    end

    self:End()
end

---结束
function PopFuncCardAction:End()
    self.bll:SetCardMode(CatCardConst.CardMode.Current)
    local action_data = self:GetData()
    local data = action_data:GetData()
    if data:IsFuncCard() then
        self:CheckCardStack()
    end
    BaseAction.End(self)
end

return PopFuncCardAction