---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by canghai.
--- DateTime: 2023/2/1 14:46
---

---@class CatCardConditionCheckCtrl
local CatCardConditionCheckCtrl = {}

---@type CatCardConst
local CatCardConst = require("Runtime.System.X3Game.Modules.CatCard.Data.CatCardConst")
---@type table<number, function> ConditionType 与执行方法的 Dic
local ConditionTypeFuncDic
---@type CatCardBLL
local CatCardBLL

---任务调用检测
---@param bll CatCardBLL
---@param conditionType number
function CatCardConditionCheckCtrl.CheckCondition(bll, conditionType, datas, iDataProvider)
    CatCardBLL = bll
    local ret = false
    if ConditionTypeFuncDic[conditionType] == nil then
        Debug.LogErrorFormat("【CatCardDialogueCtrl】 Id 为 %s 的Condition 尚未实现!!!", conditionType)
    else
        ret = ConditionTypeFuncDic[conditionType](datas)
    end
    return ret
end

---@private
function CatCardConditionCheckCtrl.IsCurTurnRoundInRange(datas)
    return ConditionCheckUtil.IsInRange(CatCardBLL.stateData:GetTurnCount(), tonumber(datas[1]), tonumber(datas[2]))
end

---@private
function CatCardConditionCheckCtrl.IsDesignatedResult(datas)
    if CatCardBLL.stateData:GetClientRoll() == tonumber(datas[2]) then
        return true
    end
    return false
end

---@private
function CatCardConditionCheckCtrl.SuccessInRange(datas)
    local p = tonumber(datas[1]) - 1
    local min = tonumber(datas[2])
    local max = tonumber(datas[3])
    local win, loss, draw = CatCardBLL:GetWinningInfo()
    if p == CatCardConst.PlayerType.ENEMY then
        win = loss
    end
    return ConditionCheckUtil.IsInRange(win, min, max)
end

---@private
function CatCardConditionCheckCtrl.FailInRange(datas)
    local p = tonumber(datas[1]) - 1
    local min = tonumber(datas[2])
    local max = tonumber(datas[3])
    local win, loss, draw = CatCardBLL:GetWinningInfo()
    if p == CatCardConst.PlayerType.ENEMY then
        loss = win
    end

    return ConditionCheckUtil.IsInRange(loss, min, max)
end

---@private
function CatCardConditionCheckCtrl.DrawInRange(datas)
    local min = tonumber(datas[2])
    local max = tonumber(datas[3])
    local win, loss, draw = CatCardBLL:GetWinningInfo()
    return ConditionCheckUtil.IsInRange(draw, min, max)
end

---@private
---1504 本局内，指定角色Para1连续成功次数=[Para2,Para3]次 连续成功在一定区间内
function CatCardConditionCheckCtrl.SuccessiveSuccessInRange(datas)
    local p = tonumber(datas[1]) - 1
    local min = tonumber(datas[2])
    local max = tonumber(datas[3])
    local win, loss, draw = CatCardBLL:GetSuccessiveWinningInfo()
    if p == CatCardConst.PlayerType.ENEMY then
        win = loss
    end
    return ConditionCheckUtil.IsInRange(win, min, max)
end

---@private
---连续失败在一定区间内 1505
function CatCardConditionCheckCtrl.SuccessiveFailInRange(datas)
    local p = tonumber(datas[1]) - 1
    local min = tonumber(datas[2])
    local max = tonumber(datas[3])
    local win, loss, draw = CatCardBLL:GetSuccessiveWinningInfo()
    if p == CatCardConst.PlayerType.ENEMY then
        loss = win
    end
    return ConditionCheckUtil.IsInRange(loss, min, max)
end

---@private
---连续平局在一定区间内
function CatCardConditionCheckCtrl.SuccessiveDrawInRange(datas)
    local p = tonumber(datas[1]) - 1
    local min = tonumber(datas[2])
    local max = tonumber(datas[3])
    local win, loss, draw = CatCardBLL:GetSuccessiveWinningInfo()
    return ConditionCheckUtil.IsInRange(draw, min, max)
end

---@private
---1513 高出男主的分数在一定区间内
function CatCardConditionCheckCtrl.HighThanEnemyInRange(datas)
    local p1 = tonumber(datas[1]) - 1
    local p2 = p1 == CatCardConst.PlayerType.PLAYER and CatCardConst.PlayerType.ENEMY or CatCardConst.PlayerType.PLAYER
    local min = tonumber(datas[2])
    local max = tonumber(datas[3])
    local current = CatCardBLL:GetScore(p1) - CatCardBLL:GetScore(p2)
    return ConditionCheckUtil.IsInRange(current, min, max)
end

---@private
---1514 当前指定角色Para1的指定类型Para2的手牌数=[Para3,Para4]张
function CatCardConditionCheckCtrl.GetCardCountByDialogue(datas)
    local role = tonumber(datas[1]) -- 1 女主 2 男主
    local card_type = tonumber(datas[2]) --0 数字牌 + 功能牌 1 数字牌 2 功能牌
    local min = tonumber(datas[3])
    local max = tonumber(datas[4])

    local count = 0
    if card_type == 0 then
        count = CatCardBLL:GetCardCount(CatCardBLL:GetPlayerType(role))
    else
        local cards = CatCardBLL:GetDataList(CatCardConst.CardType.CARD, CatCardBLL:GetPlayerType(role))
        for _, v in pairs(cards) do
            if v:GetSubType() == card_type then
                count = count + 1
            end
        end
        PoolUtil.ReleaseTable(cards)
    end
    return ConditionCheckUtil.IsInRange(count, min, max)
end

---@private
---1518 换牌之后分差是否在某个范围里面
function CatCardConditionCheckCtrl.GetScoreDiffInRange(datas)
    local p1 = tonumber(datas[1]) - 1
    local min = tonumber(datas[2])
    local max = tonumber(datas[3])
    local diff = CatCardBLL:GetScore(p1) - CatCardBLL:GetScore(p1, true)
    return ConditionCheckUtil.IsInRange(diff, min, max)
end

---@private
--- 1519 --神游换牌前后双方分差变化量
function CatCardConditionCheckCtrl.GetWanderScoreDiffInRange(datas)
    local p1 = tonumber(datas[1]) - 1
    local p2 = p1 == CatCardConst.PlayerType.PLAYER and CatCardConst.PlayerType.ENEMY or CatCardConst.PlayerType.PLAYER
    local min = tonumber(datas[2])
    local max = tonumber(datas[3])
    local diff1 = CatCardBLL:GetScore(p1, true) - CatCardBLL:GetScore(p2, true)
    local diff2 = CatCardBLL:GetScore(p1) - CatCardBLL:GetScore(p2)
    local diff = diff2 - diff1
    return ConditionCheckUtil.IsInRange(diff, min, max)
end

---@private
---1511 当前回合，当前角色获得[Para1,Para2]分的Para3型的牌
---@return boolean
function CatCardConditionCheckCtrl.TurnGetCardInRange(datas)
    local min = tonumber(datas[1])
    local max = tonumber(datas[2])
    local cardType = tonumber(datas[3]) --0 表示不限花色 1 表示可翻倍(有花色相符的空格子)

    ---@type pbcmessage.GamePlayRecord
    local gamePlayRecord = CatCardBLL.stateData:GetGamePlayRecord()
    local turnSub = CatCardConditionCheckCtrl.GetGamePlayRecordSubs(gamePlayRecord,
            Miao.MiaoGamePlayRecordType.GameGetNumCard, CatCardBLL.stateData.roundCount, CatCardBLL.stateData.turnCount)
    if table.isnilorempty(turnSub) then
        return false
    end

    ---@type SlotData[]
    local slotList = CatCardBLL:GetDataList(CatCardConst.CardType.SLOT, CatCardBLL:GetPlayerType(CatCardBLL.stateData:GetSeat()))
    for index = 1, turnSub.Value do
        local cardIdList = CatCardConditionCheckCtrl.GetGamePlayRecordValue(turnSub, true, index,
                Miao.MiaoGamePlayRecordSubType.GetCardIDs)
        if cardType == 0 then
            for i = 1, #cardIdList do
                ---@type cfg.MiaoCardInfo
                local info = LuaCfgMgr.Get("MiaoCardInfo", cardIdList[i])
                if ConditionCheckUtil.IsInRange(info.Num, min, max) then
                    return true
                end
            end
        elseif cardType == 1 then
            for i = 1, #cardIdList do
                ---@type cfg.MiaoCardInfo
                local info = LuaCfgMgr.Get("MiaoCardInfo", cardIdList[i])
                for _, slotData in ipairs(slotList) do
                    if not slotData:IsOccupied() and slotData:IsDoubleSlot() then
                        if slotData:IsMatched(cardIdList[i]) then
                            if ConditionCheckUtil.IsInRange(info.Num, min, max) then
                                return true
                            end
                        end
                    end
                end
            end
        end
    end

    return false
end

---@private
---1512 当前回合，当前角色打出了指定花色Para1的[Para2,Para3]分的牌到指定类型格Para4
---@return boolean
function CatCardConditionCheckCtrl.TurnPlayCardInSlotInRange(datas)
    local cardType = tonumber(datas[1]) --0 不限
    local min = tonumber(datas[2])
    local max = tonumber(datas[3])
    local slotType = tonumber(datas[4]) --1：普通底盘格 2：翻倍底盘格且花色相符 3：翻倍底盘格且花色不符

    ---@type pbcmessage.GamePlayRecord
    local gamePlayRecord = CatCardBLL.stateData:GetGamePlayRecord()
    local seat = CatCardBLL.stateData:GetSeat()
    local turnSub = CatCardConditionCheckCtrl.GetGamePlayRecordSubs(gamePlayRecord,
            Miao.MiaoGamePlayRecordType.GameUseNumCard, CatCardBLL.stateData.roundCount, CatCardBLL.stateData.turnCount)
    if table.isnilorempty(turnSub) then
        return false
    end

    for index = 1, turnSub.Value do
        local playerPos = CatCardConditionCheckCtrl.GetGamePlayRecordValue(turnSub, false, index,
                Miao.MiaoGamePlayRecordSubType.PlayerPos)
        if playerPos == seat then
            local useCardId = CatCardConditionCheckCtrl.GetGamePlayRecordValue(turnSub, false, index,
                    Miao.MiaoGamePlayRecordSubType.UseCardID)
            local targets = CatCardConditionCheckCtrl.GetGamePlayRecordValue(turnSub, true, index,
                    Miao.MiaoGamePlayRecordSubType.Targets)
            if not targets then
                return false
            end

            local cardInfo = LuaCfgMgr.Get("MiaoCardInfo", useCardId)
            if slotType == CatCardConst.SubType.NORMALBACK then
                for i = 1, #targets do
                    local slotInfo = LuaCfgMgr.Get("MiaoCardInfo", targets[i])
                    --格子类型需要首先匹配
                    if slotInfo.SubClass == CatCardConst.SubType.NORMALBACK then
                        if cardType == 0 then
                            if ConditionCheckUtil.IsInRange(cardInfo.Num, min, max) then
                                return true
                            end
                        else
                            if cardInfo.Type == cardType and
                                    ConditionCheckUtil.IsInRange(cardInfo.Num, min, max) then
                                return true
                            end
                        end
                    end
                end
            elseif slotType == CatCardConst.SubType.DOUBLEBACK then
                for i = 1, #targets do
                    local slotInfo = LuaCfgMgr.Get("MiaoCardInfo", targets[i])
                    --格子类型需要首先匹配
                    if slotInfo.SubClass == CatCardConst.SubType.DOUBLEBACK then
                        if cardType == 0 then
                            --检查是否匹配
                            if slotInfo.Type == cardInfo.Type and
                                    ConditionCheckUtil.IsInRange(cardInfo.Num, min, max) then
                                return true
                            end
                        else
                            --检查是否匹配
                            if slotInfo.Type == cardInfo.Type and
                                    cardInfo.Type == cardType and
                                    ConditionCheckUtil.IsInRange(cardInfo.Num, min, max) then
                                return true
                            end
                        end
                    end
                end
            else
                --翻倍底盘格且花色不符
                for i = 1, #targets do
                    local slotInfo = LuaCfgMgr.Get("MiaoCardInfo", targets[i])
                    --格子类型需要首先匹配
                    if slotInfo.SubClass == CatCardConst.SubType.DOUBLEBACK then
                        if cardType == 0 then
                            --检查是否匹配
                            if slotInfo.Type ~= cardInfo.Type and
                                    ConditionCheckUtil.IsInRange(cardInfo.Num, min, max) then
                                return true
                            end

                        else
                            --检查是否匹配
                            if slotInfo.Type ~= cardInfo.Type and
                                    cardInfo.Type == cardType and
                                    ConditionCheckUtil.IsInRange(cardInfo.Num, min, max) then
                                return true
                            end
                        end
                    end
                end
            end
        end
    end

    return false
end

---@private
---1515 当前指定角色Para1手牌中拥有[Para2,Para3]分的牌数=[Para4,Para5]张
---@return boolean
function CatCardConditionCheckCtrl.GetPlayerCardCountInRange(datas)
    local roleType = tonumber(datas[1]) -- 1 女主 2 男主
    local min = tonumber(datas[2])
    local max = tonumber(datas[3])
    local minCount = tonumber(datas[4])
    local maxCount = tonumber(datas[5])

    local count = 0
    ---@type CatCardData[] 数字牌列表
    local cardList = PoolUtil.GetTable()
    CatCardBLL:GetCardDataListBySubType(CatCardBLL:GetPlayerType(roleType), CatCardConst.SubType.NORMALCARD, cardList)
    for _, catCardData in ipairs(cardList) do
        local id = catCardData:GetRealId()
        ---@type cfg.MiaoCardInfo
        local info = LuaCfgMgr.Get("MiaoCardInfo", id)
        if ConditionCheckUtil.IsInRange(info.Num, min, max) then
            count = count + 1
        end
    end

    PoolUtil.ReleaseTable(cardList)
    return ConditionCheckUtil.IsInRange(count, minCount, maxCount)
end

---@private
---1517 本轮中，男主累计进行的放水行为次数=[Para1,Para2]次
---@return boolean
function CatCardConditionCheckCtrl.GetIsCurRoundYieldCountInRange(datas)
    local min = tonumber(datas[1])
    local max = tonumber(datas[2])

    ---@type pbcmessage.GamePlayRecord
    local gamePlayRecord = CatCardBLL.stateData:GetGamePlayRecord()
    local args = CatCardConditionCheckCtrl.GetGamePlayRecordValue(gamePlayRecord, true,
            Miao.MiaoGamePlayRecordType.GameSPResultArg, Miao.MiaoSPActionType.MiaoSPActionTypeYield, CatCardBLL.stateData.roundCount)
    if table.isnilorempty(args) then
        return false
    end

    return ConditionCheckUtil.IsInRange(args[0], min, max)
end

---@private
---1516 获取本回合是否放水过
---@return boolean
function CatCardConditionCheckCtrl.GetIsCurTurnYield(datas)
    ---@type pbcmessage.GamePlayRecord
    local gamePlayRecord = CatCardBLL.stateData:GetGamePlayRecord()
    local turnSub = CatCardConditionCheckCtrl.GetGamePlayRecordSubs(gamePlayRecord,
            Miao.MiaoGamePlayRecordType.GameSPAction, CatCardBLL.stateData.roundCount, CatCardBLL.stateData.turnCount)
    if not turnSub then
        return false
    end

    for i = 1, turnSub.Value do
        local spTypeSub = CatCardConditionCheckCtrl.GetGamePlayRecordSubs(turnSub, i, Miao.MiaoGamePlayRecordSubType.SPType)
        if spTypeSub and spTypeSub.Value == Miao.MiaoSPActionType.MiaoSPActionTypeYield then
            return true
        end
    end

    return false
end

---@private
---103001 当前回合，指定角色Para1获得指定功能牌Para2
---@return boolean
function CatCardConditionCheckCtrl.TurnGetPlayerCardWithType(datas)
    local roleType = tonumber(datas[1]) -- 1 女主 2 男主
    local cardId = tonumber(datas[2])

    ---@type pbcmessage.GamePlayRecord
    local gamePlayRecord = CatCardBLL.stateData:GetGamePlayRecord()
    local turnSub = CatCardConditionCheckCtrl.GetGamePlayRecordSubs(gamePlayRecord,
            Miao.MiaoGamePlayRecordType.GameGetFuncCard, CatCardBLL.stateData.roundCount, CatCardBLL.stateData.turnCount)
    if table.isnilorempty(turnSub) then
        return false
    end

    for index = 1, turnSub.Value do
        local playerPos = CatCardConditionCheckCtrl.GetGamePlayRecordValue(turnSub, false, index,
                Miao.MiaoGamePlayRecordSubType.PlayerPos)
        local getCardIDs = CatCardConditionCheckCtrl.GetGamePlayRecordValue(turnSub, true, index,
                Miao.MiaoGamePlayRecordSubType.GetCardIDs)
        if playerPos == roleType then
            for i = 1, #getCardIDs do
                if getCardIDs[i] == cardId then
                    return true
                end
            end
        end
    end
    return false
end

---@private
---103003 指定角色Para1手牌中拥有指定功能牌类型（Para2）数=[Para3,Para4]张
---@return boolean
function CatCardConditionCheckCtrl.GetPlayerCardWithTypeInRange(datas)
    local roleType = tonumber(datas[1]) -- 1 女主 2 男主
    local cardId = tonumber(datas[2])
    local min = tonumber(datas[3])
    local max = tonumber(datas[4])
    local count = 0
    ---@type CatCardData[]
    local cardList = CatCardBLL:GetDataList(CatCardConst.CardType.CARD, CatCardBLL:GetPlayerType(roleType))
    for _, catCardData in ipairs(cardList) do
        if catCardData:GetRealId() == cardId then
            count = count + 1
        end
    end
    return ConditionCheckUtil.IsInRange(count, min, max)
end

---@private
---103004 当前回合，指定角色Para1打出了指定类型的功能牌（Para2）（Para3）的张数导致对方分数下降=[Para4,Para5]分
---@return boolean
function CatCardConditionCheckCtrl.TurnPlayCardWithScoreInRange(datas)
    local roleType = tonumber(datas[1]) -- 1 女主 2 男主
    local enemyType = roleType == Miao.MiaoPlayerPos.MiaoPlayerPosP1 and Miao.MiaoPlayerPos.MiaoPlayerPosP2 or Miao.MiaoPlayerPos.MiaoPlayerPosP1
    local cardId = tonumber(datas[2])
    local cardCount = tonumber(datas[3])
    local reduceMin = tonumber(datas[4]) -- 对方分数下降最小值
    local reduceMax = tonumber(datas[5]) -- 对方分数下降最大值

    ---@type pbcmessage.GamePlayRecord
    local gamePlayRecord = CatCardBLL.stateData:GetGamePlayRecord()
    local turnSub = CatCardConditionCheckCtrl.GetGamePlayRecordSubs(gamePlayRecord,
            Miao.MiaoGamePlayRecordType.GameUseFuncCard, CatCardBLL.stateData.roundCount, CatCardBLL.stateData.turnCount)
    if table.isnilorempty(turnSub) then
        return false
    end

    local count = 0
    local reduceScore = 0
    for index = 1, turnSub.Value do
        local playerPos = CatCardConditionCheckCtrl.GetGamePlayRecordValue(turnSub, false, index,
                Miao.MiaoGamePlayRecordSubType.PlayerPos)
        local useCardID = CatCardConditionCheckCtrl.GetGamePlayRecordValue(turnSub, false, index,
                Miao.MiaoGamePlayRecordSubType.UseCardID)
        local isEffect = CatCardConditionCheckCtrl.GetGamePlayRecordValue(turnSub, false, index,
                Miao.MiaoGamePlayRecordSubType.IsEffect) --1生效 2不生效
        if playerPos == roleType and useCardID == cardId and isEffect == 1 then
            count = count + 1
            local effectsSub = CatCardConditionCheckCtrl.GetGamePlayRecordSubs(turnSub, index,
                    Miao.MiaoGamePlayRecordSubType.Effects)
            if effectsSub then
                local effectType = CatCardConditionCheckCtrl.GetGamePlayRecordValue(effectsSub, false, 1,
                        Miao.MiaoGamePlayRecordEffectsSubType.EffectType)
                local args = CatCardConditionCheckCtrl.GetGamePlayRecordValue(effectsSub, true, 1,
                        Miao.MiaoGamePlayRecordEffectsSubType.Args)
                if effectType == Miao.MiaoEffectType.MiaoEffectTypeDemolish then
                    --拆迁
                    reduceScore = enemyType == Miao.MiaoPlayerPos.MiaoPlayerPosP1 and args[2] or args[3]
                elseif effectType == Miao.MiaoEffectType.MiaoEffectTypeChangeSlotColor then
                    --变色
                    reduceScore = enemyType == Miao.MiaoPlayerPos.MiaoPlayerPosP1 and args[4] or args[5]
                end
            end
        end
    end

    if count ~= cardCount then
        return false
    end

    reduceScore = math.abs(reduceScore)
    return ConditionCheckUtil.IsInRange(reduceScore, reduceMin, reduceMax)
end

---@private
---103005 当前回合，指定角色para1使用了指定类型（para2）的功能牌并生效的指定次数=[Para3,Para4]
---@return boolean
function CatCardConditionCheckCtrl.TurnPlayCardWithEffect(datas)
    local roleType = tonumber(datas[1]) -- 1 女主 2 男主
    local cardId = tonumber(datas[2])
    local min = tonumber(datas[3])
    local max = tonumber(datas[4])

    ---@type pbcmessage.GamePlayRecord
    local gamePlayRecord = CatCardBLL.stateData:GetGamePlayRecord()
    local turnSub = CatCardConditionCheckCtrl.GetGamePlayRecordSubs(gamePlayRecord,
            Miao.MiaoGamePlayRecordType.GameUseFuncCard, CatCardBLL.stateData.roundCount, CatCardBLL.stateData.turnCount)
    if table.isnilorempty(turnSub) then
        return false
    end

    local count = 0
    for index = 1, turnSub.Value do
        local playerPos = CatCardConditionCheckCtrl.GetGamePlayRecordValue(turnSub, false, index,
                Miao.MiaoGamePlayRecordSubType.PlayerPos)
        local isEffect = CatCardConditionCheckCtrl.GetGamePlayRecordValue(turnSub, false, index,
                Miao.MiaoGamePlayRecordSubType.IsEffect) --1生效 2不生效
        local useCardID = CatCardConditionCheckCtrl.GetGamePlayRecordValue(turnSub, false, index,
                Miao.MiaoGamePlayRecordSubType.UseCardID)
        if playerPos == roleType and useCardID == cardId and isEffect == 1 then
            count = count + 1
        end
    end

    return ConditionCheckUtil.IsInRange(count, min, max)
end

---@private
---103006 当前回合，指定角色（Para1）最近使用了指定类型的功能牌（Para2）对指定目标对象（Para3）生效
---@return boolean
function CatCardConditionCheckCtrl.TurnPlayCardWithTarget(datas)
    local roleType = tonumber(datas[1]) -- 1 女主 2 男主
    local cardId = tonumber(datas[2])
    local targetType = tonumber(datas[3]) -- -1不限制 具体ID需要对应格子/Card

    ---@type pbcmessage.GamePlayRecord
    local gamePlayRecord = CatCardBLL.stateData:GetGamePlayRecord()
    local turnSub = CatCardConditionCheckCtrl.GetGamePlayRecordSubs(gamePlayRecord,
            Miao.MiaoGamePlayRecordType.GameUseFuncCard, CatCardBLL.stateData.roundCount, CatCardBLL.stateData.turnCount)
    if table.isnilorempty(turnSub) then
        return false
    end

    for index = 1, turnSub.Value do
        local playerPos = CatCardConditionCheckCtrl.GetGamePlayRecordValue(turnSub, false, index,
                Miao.MiaoGamePlayRecordSubType.PlayerPos)
        local isEffect = CatCardConditionCheckCtrl.GetGamePlayRecordValue(turnSub, false, index,
                Miao.MiaoGamePlayRecordSubType.IsEffect) --1生效 2不生效
        local useCardID = CatCardConditionCheckCtrl.GetGamePlayRecordValue(turnSub, false, index,
                Miao.MiaoGamePlayRecordSubType.UseCardID)
        if playerPos == roleType and useCardID == cardId and isEffect == 1 then
            if targetType == -1 then
                return true
            end

            local targets = CatCardConditionCheckCtrl.GetGamePlayRecordValue(turnSub, true, index,
                    Miao.MiaoGamePlayRecordSubType.Targets)
            if targets then
                for i = 1, #targets do
                    if targets[i] == targetType then
                        return true
                    end
                end
            end
        end
    end

    return false
end

---@private
---103007 最近一张功能牌的效果堆栈中存在指定张数=[Para1,Para2]的指定类型功能牌（Para3）
---@return boolean
function CatCardConditionCheckCtrl.LastPlayCardStackTypeCountInRange(datas)
    local min = tonumber(datas[1])
    local max = tonumber(datas[2])
    local cardId = tonumber(datas[3])

    ---@type pbcmessage.GamePlayRecord
    local gamePlayRecord = CatCardBLL.stateData:GetGamePlayRecord()
    local turnSub = CatCardConditionCheckCtrl.GetGamePlayRecordSubs(gamePlayRecord,
            Miao.MiaoGamePlayRecordType.GameUseFuncCard, CatCardBLL.stateData.roundCount, CatCardBLL.stateData.turnCount)
    if table.isnilorempty(turnSub) then
        return false
    end

    local lastNotVetoFuncCardIndex = 0
    local count = 0;
    for index = turnSub.Value, 1, -1 do
        local useCardID = CatCardConditionCheckCtrl.GetGamePlayRecordValue(turnSub, false, index,
                Miao.MiaoGamePlayRecordSubType.UseCardID)
        if useCardID == cardId then
            count = count + 1
        end
        local info = LuaCfgMgr.Get("MiaoCardInfo", useCardID)
        --找到最后一张非否决的功能牌
        if info.SubClass == CatCardConst.SubType.FUNCCARD and info.Num ~= CatCardConst.FuncCardType.VETOCARD then
            lastNotVetoFuncCardIndex = index
            break
        end
    end

    if lastNotVetoFuncCardIndex < 1 then
        return false
    end

    return ConditionCheckUtil.IsInRange(count, min, max)
end

---@private
---103008 当前回合，指定角色Para1宣称使用指定功能牌Para2
---@return boolean
function CatCardConditionCheckCtrl.TurnPlayCardType(datas)
    local roleType = tonumber(datas[1]) -- 1 女主 2 男主
    local cardId = tonumber(datas[2])

    ---@type pbcmessage.GamePlayRecord
    local gamePlayRecord = CatCardBLL.stateData:GetGamePlayRecord()
    local turnSub = CatCardConditionCheckCtrl.GetGamePlayRecordSubs(gamePlayRecord,
            Miao.MiaoGamePlayRecordType.GameUseFuncCard, CatCardBLL.stateData.roundCount, CatCardBLL.stateData.turnCount)
    if table.isnilorempty(turnSub) then
        return false
    end

    for index = 1, turnSub.Value do
        local playerPos = CatCardConditionCheckCtrl.GetGamePlayRecordValue(turnSub, false, index,
                Miao.MiaoGamePlayRecordSubType.PlayerPos)
        local useCardID = CatCardConditionCheckCtrl.GetGamePlayRecordValue(turnSub, false, index,
                Miao.MiaoGamePlayRecordSubType.UseCardID)
        if playerPos == roleType and useCardID == cardId then
            return true
        end
    end
    return false
end

---@private
---103011 当前回合，最近一张功能牌的效果堆栈中指定角色（Para1）是否放弃（Para2）使用否决牌
---@return boolean
function CatCardConditionCheckCtrl.TurnPlayCardGiveUpVeto(datas)
    local roleType = tonumber(datas[1]) -- 1 女主 2 男主
    local enemyType = roleType == Miao.MiaoPlayerPos.MiaoPlayerPosP1 and Miao.MiaoPlayerPos.MiaoPlayerPosP2 or Miao.MiaoPlayerPos.MiaoPlayerPosP1
    local giveUpState = tonumber(datas[2]) -- 0 不放弃 1 放弃

    ---@type pbcmessage.GamePlayRecord
    local gamePlayRecord = CatCardBLL.stateData:GetGamePlayRecord()
    local turnSub = CatCardConditionCheckCtrl.GetGamePlayRecordSubs(gamePlayRecord,
            Miao.MiaoGamePlayRecordType.GameUseFuncCard, CatCardBLL.stateData.roundCount, CatCardBLL.stateData.turnCount)
    if table.isnilorempty(turnSub) then
        return false
    end

    --对方如果使用了功能牌 我方手中有否决就生效
    local isUseFunc = false
    for index = turnSub.Value, 1, -1 do
        local playerPos = CatCardConditionCheckCtrl.GetGamePlayRecordValue(turnSub, false, index,
                Miao.MiaoGamePlayRecordSubType.PlayerPos)
        if playerPos == enemyType then
            isUseFunc = true
            break
        end
    end

    if isUseFunc then
        --roleType手中是否有否决牌
        ---@type CatCardData[]
        local cardList = CatCardBLL:GetDataList(CatCardConst.CardType.CARD, CatCardBLL:GetPlayerType(roleType))
        for _, data in ipairs(cardList) do
            if data:IsFuncCard() and data:GetNum() == CatCardConst.FuncCardType.VETOCARD then
                --放弃使用
                return giveUpState == 1
            end
        end
    end

    --未放弃使用
    return giveUpState == 0
end

---@private
---103012
---@return boolean
function CatCardConditionCheckCtrl.TurnContinuePlayCardTypeWithEffect(datas)
    local roleType = tonumber(datas[1]) -- 1 女主 2 男主
    local card1Id = tonumber(datas[2])
    local card2Id = tonumber(datas[3])

    ---@type pbcmessage.GamePlayRecord
    local gamePlayRecord = CatCardBLL.stateData:GetGamePlayRecord()
    local turnSub = CatCardConditionCheckCtrl.GetGamePlayRecordSubs(gamePlayRecord,
            Miao.MiaoGamePlayRecordType.GameUseFuncCard, CatCardBLL.stateData.roundCount, CatCardBLL.stateData.turnCount)
    if table.isnilorempty(turnSub) then
        return false
    end

    local round1 = false
    for index = 1, turnSub.Value do
        local playerPos = CatCardConditionCheckCtrl.GetGamePlayRecordValue(turnSub, false, index,
                Miao.MiaoGamePlayRecordSubType.PlayerPos)
        local useCardID = CatCardConditionCheckCtrl.GetGamePlayRecordValue(turnSub, false, index,
                Miao.MiaoGamePlayRecordSubType.UseCardID)
        local isEffect = CatCardConditionCheckCtrl.GetGamePlayRecordValue(turnSub, false, index,
                Miao.MiaoGamePlayRecordSubType.IsEffect) --1生效 2不生效

        if playerPos == roleType then
            if not round1 then
                if useCardID == card1Id and isEffect == 1 then
                    round1 = true
                end
            else
                if useCardID == card2Id and isEffect == 1 then
                    return true
                else
                    round1 = false
                end
            end
        end
    end

    return false
end

---@private
---103013 功能牌效果堆栈中，指定角色（Para1）最近打出指定功能牌（Para2）对指定对象（Para3）是否生效（Para4）
---@return boolean
function CatCardConditionCheckCtrl.LastPlayCardStackWithTargetAndEffect(datas)
    local roleType = tonumber(datas[1]) -- 1 女主 2 男主
    local cardId = tonumber(datas[2])
    local targetType = tonumber(datas[3]) -- -1不限制 具体ID需要对应格子/Card
    local effectType = tonumber(datas[4]) -- 0 不生效 1 生效
    local effectJudge = effectType == 1

    ---@type pbcmessage.GamePlayRecord
    local gamePlayRecord = CatCardBLL.stateData:GetGamePlayRecord()
    local turnSub = CatCardConditionCheckCtrl.GetGamePlayRecordSubs(gamePlayRecord,
            Miao.MiaoGamePlayRecordType.GameUseFuncCard, CatCardBLL.stateData.roundCount, CatCardBLL.stateData.turnCount)
    if table.isnilorempty(turnSub) then
        return false
    end

    local lastNotVetoFuncCardIndex = 0
    local result = false
    for index = turnSub.Value, 1, -1 do
        local playerPos = CatCardConditionCheckCtrl.GetGamePlayRecordValue(turnSub, false, index,
                Miao.MiaoGamePlayRecordSubType.PlayerPos)
        local useCardID = CatCardConditionCheckCtrl.GetGamePlayRecordValue(turnSub, false, index,
                Miao.MiaoGamePlayRecordSubType.UseCardID)
        local targets = CatCardConditionCheckCtrl.GetGamePlayRecordValue(turnSub, true, index,
                Miao.MiaoGamePlayRecordSubType.Targets)
        local isEffect = CatCardConditionCheckCtrl.GetGamePlayRecordValue(turnSub, false, index,
                Miao.MiaoGamePlayRecordSubType.IsEffect) --1生效 2不生效
        if useCardID == cardId and playerPos == roleType then
            if targetType == -1 then
                if effectJudge and isEffect == 1 or (not effectJudge and isEffect == 2) then
                    result = true
                end
            else
                if targets then
                    for i = 1, #targets do
                        if targets[i] == targetType then
                            if effectJudge and isEffect == 1 or (not effectJudge and isEffect == 2) then
                                result = true
                            end
                        end
                    end
                end
            end
        end
        local info = LuaCfgMgr.Get("MiaoCardInfo", useCardID)
        --找到最后一张非否决的功能牌
        if info.SubClass == CatCardConst.SubType.FUNCCARD and info.Num ~= CatCardConst.FuncCardType.VETOCARD then
            lastNotVetoFuncCardIndex = index
            break
        end
    end

    if lastNotVetoFuncCardIndex < 1 then
        result = false
    end

    return result
end

---@private
---103014 当前功能牌效果堆栈内指定类型的指定功能牌ID（Para1）是否生效（Para2）
---@return boolean
function CatCardConditionCheckCtrl.LastPlayCardStackWithEffect(datas)
    local cardId = tonumber(datas[1])
    local effectType = tonumber(datas[2]) -- 0 不生效 1 生效
    local effectJudge = effectType == 1

    ---@type pbcmessage.GamePlayRecord
    local gamePlayRecord = CatCardBLL.stateData:GetGamePlayRecord()
    local turnSub = CatCardConditionCheckCtrl.GetGamePlayRecordSubs(gamePlayRecord,
            Miao.MiaoGamePlayRecordType.GameUseFuncCard, CatCardBLL.stateData.roundCount, CatCardBLL.stateData.turnCount)
    if table.isnilorempty(turnSub) then
        return false
    end

    local lastNotVetoFuncCardIndex = 0
    local isReturn = false
    for index = turnSub.Value, 1, -1 do
        local useCardID = CatCardConditionCheckCtrl.GetGamePlayRecordValue(turnSub, false, index,
                Miao.MiaoGamePlayRecordSubType.UseCardID)
        local info = LuaCfgMgr.Get("MiaoCardInfo", useCardID)
        --找到最后一张非否决的功能牌
        if info.SubClass == CatCardConst.SubType.FUNCCARD and info.Num ~= CatCardConst.FuncCardType.VETOCARD then
            lastNotVetoFuncCardIndex = index
            break
        end
    end

    if lastNotVetoFuncCardIndex < 1 then
        return false
    end

    if not isReturn then
        local useCardID = CatCardConditionCheckCtrl.GetGamePlayRecordValue(turnSub, false, lastNotVetoFuncCardIndex,
                Miao.MiaoGamePlayRecordSubType.UseCardID)
        local isEffect = CatCardConditionCheckCtrl.GetGamePlayRecordValue(turnSub, false, lastNotVetoFuncCardIndex,
                Miao.MiaoGamePlayRecordSubType.IsEffect) --1生效 2不生效
        if useCardID == cardId then
            if effectJudge and isEffect == 1 or (not effectJudge and isEffect == 2) then
                return true
            end
        end
    end

    return false
end

---@private
---103015 指定角色（Para1）在上一个回合中获得指定类型的牌（Para2）
---@return boolean
function CatCardConditionCheckCtrl.LastTurnGetCard(datas)
    local roleType = tonumber(datas[1]) -- 1 女主 2 男主
    local cardType = tonumber(datas[2]) -- 0 功能/数字 1 数字 2 功能

    --第一回合没有上一回合
    if CatCardBLL.stateData.turnCount < 2 then
        return false
    end

    ---@type pbcmessage.GamePlayRecord
    local gamePlayRecord = CatCardBLL.stateData:GetGamePlayRecord()
    local lastTurn = CatCardBLL.stateData.turnCount - 1
    local isCheckNum = cardType == 0 or cardType == 1
    local isCheckFunc = cardType == 0 or cardType == 2
    if isCheckNum then
        local turnSub = CatCardConditionCheckCtrl.GetGamePlayRecordSubs(gamePlayRecord,
                Miao.MiaoGamePlayRecordType.GameGetNumCard, CatCardBLL.stateData.roundCount, lastTurn)
        if table.isnilorempty(turnSub) then
            return false
        end
        
        for index = 1, turnSub.Value do
            local cardIdList = CatCardConditionCheckCtrl.GetGamePlayRecordValue(turnSub, true, index,
                    Miao.MiaoGamePlayRecordSubType.GetCardIDs)
            local playerPos = CatCardConditionCheckCtrl.GetGamePlayRecordValue(turnSub, false, index,
                    Miao.MiaoGamePlayRecordSubType.PlayerPos)
            if playerPos == roleType and cardIdList and #cardIdList > 0 then
                return true
            end
        end
    end

    if isCheckFunc then
        local turnSub = CatCardConditionCheckCtrl.GetGamePlayRecordSubs(gamePlayRecord,
                Miao.MiaoGamePlayRecordType.GameGetFuncCard, CatCardBLL.stateData.roundCount, lastTurn)
        if table.isnilorempty(turnSub) then
            return false
        end
        
        for index = 1, turnSub.Value do
            local cardIdList = CatCardConditionCheckCtrl.GetGamePlayRecordValue(turnSub, true, index,
                    Miao.MiaoGamePlayRecordSubType.GetCardIDs)
            local playerPos = CatCardConditionCheckCtrl.GetGamePlayRecordValue(turnSub, false, index,
                    Miao.MiaoGamePlayRecordSubType.PlayerPos)
            if playerPos == roleType and cardIdList and #cardIdList > 0 then
                return true
            end
        end
    end

    return false
end

---@private
---103016 当日与指定男主（Para1）打某一类型喵喵牌（Para2），最近一次对局为胜/败/平/放弃（para3）
---@return boolean
function CatCardConditionCheckCtrl.CheckMiaoWinTodayRoundNum(datas)
    local enemyType = tonumber(datas[1]) -- 男主id这里必须是确定的，不能是 -1
    if enemyType <= 0 then
        return false
    end

    local miaoCardType = tonumber(datas[2]) -- 1 基础 2 明牌 3 功能 4 积分 5 宾果 -1表示不限制
    local result = tonumber(datas[3]) -- Miao.MiaoResultType 1胜/2败/3平/4放弃 -1不论对局情况 (5玩家投降/6对手投降 需要转换)
    --这里使用UserRecord中的数据
    local data = SelfProxyFactory.GetUserRecordProxy():GetUserRecord(X3_CFG_CONST.SAVEDATA_TYPE_MIAOCARD_WINDISPARITYX, enemyType)
    if data == nil or data:GetArgs() == nil then
        return false
    end

    local recordDifficultyId = data:GetArgs()[1]
    local recordResult = data:GetArgs()[2]
    if recordDifficultyId == nil or recordResult == nil then
        return false
    end

    if recordResult == 5 then --玩家投降
        recordResult = 2 --玩家失败
    elseif recordResult == 6 then --对手投降
        recordResult = 1 --玩家胜利
    end
    
    local recordEnemyType = data:GetSubIDs()[1]
    local recordCardType = LuaCfgMgr.Get("MiaoCardDifficulty", recordDifficultyId).MiaoCardType
    if enemyType ~= -1 and enemyType ~= recordEnemyType then
        return false
    end

    if miaoCardType ~= -1 and miaoCardType ~= recordCardType then
        return false
    end
    
    if result ~= -1  and result ~= recordResult then
        return false
    end
    
    return true
end

---@private
---103017 当日与指定男主(Para1)玩喵喵牌，最近一次触发并完成了指定的（Para2）特殊行为
---@return boolean
function CatCardConditionCheckCtrl.CheckMiaoSpTrigger(datas)
    local enemyType = tonumber(datas[1]) -- 男主id这里必须是确定的，不能是 -1
    if enemyType <= 0 then
        return false
    end

    local spType = tonumber(datas[2])
    --这里使用UserRecord中的数据
    local record = SelfProxyFactory.GetUserRecordProxy():GetUserRecord(X3_CFG_CONST.SAVEDATA_TYPE_MIAOCARD_SPACTION_TRIGGER, enemyType)
    if record == nil or record:GetSubIDs() == nil then
        return false
    end

    local recordEnemyType = record:GetSubIDs()[1]
    if recordEnemyType ~= enemyType then
        return false
    end

    return spType == record.value
end


--region Util
---@private
---获取GamePlayRecord中子级的Value
---@param record pbcmessage.GamePlayRecord
---@param isGetValues boolean 是否是获取Values
---@vararg
function CatCardConditionCheckCtrl.GetGamePlayRecordValue(record, isGetValues, ...)
    record = CatCardConditionCheckCtrl.GetGamePlayRecordSubs(record,...)
    if not record then
        return nil
    end

    if isGetValues then
        return record.Values
    end

    return record.Value
end

---@private
---获取GamePlayRecord中子级 的Subs
---@param record pbcmessage.GamePlayRecord
---@vararg
---@return pbcmessage.GamePlayRecord
function CatCardConditionCheckCtrl.GetGamePlayRecordSubs(record, ...)
    local count = select("#",...)
    for idx = 1,count do
        local k = select(idx,...)
        if not record or not record.Subs then
            return nil
        end
        record = record.Subs[k]
    end
    return record
end
--endregion

ConditionTypeFuncDic = {
    [X3_CFG_CONST.CONDITION_MIAOCARD_TIMES_TURN] = function(datas)
        return CatCardConditionCheckCtrl.IsCurTurnRoundInRange(datas)
    end,

    [X3_CFG_CONST.CONDITION_MIAO_FINGERGUESS_R] = function(datas)
        return CatCardConditionCheckCtrl.IsDesignatedResult(datas)
    end,

    [X3_CFG_CONST.CONDITION_MIAO_SUCCESS_TIMES_G] = function(datas)
        return CatCardConditionCheckCtrl.SuccessInRange(datas)
    end,

    [X3_CFG_CONST.CONDITION_MIAO_LOSS_TIMES_G] = function(datas)
        return CatCardConditionCheckCtrl.FailInRange(datas)
    end,

    [X3_CFG_CONST.CONDITION_MIAO_DRAW_TIMES_G] = function(datas)
        return CatCardConditionCheckCtrl.DrawInRange(datas)
    end,

    [X3_CFG_CONST.CONDITION_MIAO_CONTISUCCESS_TIMES_G] = function(datas)
        return CatCardConditionCheckCtrl.SuccessiveSuccessInRange(datas)
    end,

    [X3_CFG_CONST.CONDITION_MIAO_CONTILOSS_TIMES_G] = function(datas)
        return CatCardConditionCheckCtrl.SuccessiveFailInRange(datas)
    end,

    [X3_CFG_CONST.CONDITION_MIAO_CONTIDRAW_TIMES_G] = function(datas)
        return CatCardConditionCheckCtrl.SuccessiveDrawInRange(datas)
    end,

    [X3_CFG_CONST.CONDITION_MIAO_MORE_SCORE] = function(datas)
        return CatCardConditionCheckCtrl.HighThanEnemyInRange(datas)
    end,

    [X3_CFG_CONST.CONDITION_MIAO_HANDCARD_COUNT] = function(datas)
        return CatCardConditionCheckCtrl.GetCardCountByDialogue(datas)
    end,

    [X3_CFG_CONST.CONDITION_MIAO_SPACTION_CHANGECARD_SCOREADD] = function(datas)
        return CatCardConditionCheckCtrl.GetScoreDiffInRange(datas)
    end,

    [X3_CFG_CONST.CONDITION_MIAO_SPACTION_CHANGECARD_DIFFADD] = function(datas)
        return CatCardConditionCheckCtrl.GetWanderScoreDiffInRange(datas)
    end,

    ---- 曾经服务器单独用到的Condition ----

    [X3_CFG_CONST.CONDITION_MIAO_GETNUMCARD_T] = function(datas)
        return CatCardConditionCheckCtrl.TurnGetCardInRange(datas)
    end,

    [X3_CFG_CONST.CONDITION_MIAO_PLAYCARD_T] = function(datas)
        return CatCardConditionCheckCtrl.TurnPlayCardInSlotInRange(datas)
    end,

    [X3_CFG_CONST.CONDITION_MIAO_NUMHANDCARD_COUNT] = function(datas)
        return CatCardConditionCheckCtrl.GetPlayerCardCountInRange(datas)
    end,

    [X3_CFG_CONST.CONDITION_MIAO_ISYIELD_T] = function(datas)
        return CatCardConditionCheckCtrl.GetIsCurTurnYield(datas)
    end,

    [X3_CFG_CONST.CONDITION_MIAO_YIELD_TIMES_R] = function(datas)
        return CatCardConditionCheckCtrl.GetIsCurRoundYieldCountInRange(datas)
    end,

    [X3_CFG_CONST.CONDITION_MIAO_GETSPFUNCCARD_T] = function(datas)
        return CatCardConditionCheckCtrl.TurnGetPlayerCardWithType(datas)
    end,

    [X3_CFG_CONST.CONDITION_MIAO_FUNCHANDCARD_COUNT] = function(datas)
        return CatCardConditionCheckCtrl.GetPlayerCardWithTypeInRange(datas)
    end,

    [X3_CFG_CONST.CONDITION_MIAO_PLAYFUNCCARD_T] = function(datas)
        return CatCardConditionCheckCtrl.TurnPlayCardWithScoreInRange(datas)
    end,

    [X3_CFG_CONST.CONDITION_MIAO_PLAYFUNCCARD_TYPE_T] = function(datas)
        return CatCardConditionCheckCtrl.TurnPlayCardWithEffect(datas)
    end,

    [X3_CFG_CONST.CONDITION_MIAO_PLAYFUNCCARD_TYPE] = function(datas)
        return CatCardConditionCheckCtrl.TurnPlayCardWithTarget(datas)
    end,

    [X3_CFG_CONST.CONDITION_MIAO_PLAYFUNCCARD_VETONUM] = function(datas)
        return CatCardConditionCheckCtrl.LastPlayCardStackTypeCountInRange(datas)
    end,

    [X3_CFG_CONST.CONDITION_MIAO_PLAYFUNCCARD_PUT] = function(datas)
        return CatCardConditionCheckCtrl.TurnPlayCardType(datas)
    end,

    [X3_CFG_CONST.CONDITION_MIAO_GIVEUP_VOTECARD] = function(datas)
        return CatCardConditionCheckCtrl.TurnPlayCardGiveUpVeto(datas)
    end,

    [X3_CFG_CONST.CONDITION_MIAO_SERIES_PLAYFUNCCARD] = function(datas)
        return CatCardConditionCheckCtrl.TurnContinuePlayCardTypeWithEffect(datas)
    end,

    [X3_CFG_CONST.CONDITION_MIAO_PLAYFUNCCARD_STACK] = function(datas)
        return CatCardConditionCheckCtrl.LastPlayCardStackWithTargetAndEffect(datas)
    end,

    [X3_CFG_CONST.CONDITION_MIAO_PLAYFUNCCARD_STACK_LASTONE] = function(datas)
        return CatCardConditionCheckCtrl.LastPlayCardStackWithEffect(datas)
    end,

    [X3_CFG_CONST.CONDITION_MIAO_GETCARD_T] = function(datas)
        return CatCardConditionCheckCtrl.LastTurnGetCard(datas)
    end,
    
    [X3_CFG_CONST.CONDITION_MIAO_WINDISPARITYX_TODAY_ROUNDNUM] = function(datas)
        return CatCardConditionCheckCtrl.CheckMiaoWinTodayRoundNum(datas)
    end,

    [X3_CFG_CONST.CONDITION_MIAO_SPACTION_TRIGGER] = function(datas)
        return CatCardConditionCheckCtrl.CheckMiaoSpTrigger(datas)
    end
    
}

return CatCardConditionCheckCtrl