---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by pc.
--- DateTime: 2020/10/26 16:44
---
---单论结算
---@type CatCardConst
local CatCardConst = require("Runtime.System.X3Game.Modules.CatCard.Data.CatCardConst")
---@type CatCardBaseAction
local BaseAction = require(CatCardConst.BASE_ACTION_PATH)
---@class CatCard.Action.RoundEndAction:CatCardBaseAction
local RoundEndAction = class("RoundEndAction", BaseAction)
function RoundEndAction:Execute()
    ----@type CatCardStateData
    self.stateData = self.bll:GetStateData()
    self:Start()
end

function RoundEndAction:LocalStateChange(st, ...)
    if st == CatCardConst.LocalState.ROUNDENDING then
        local roundType = self.stateData:GetRoundState()
        self:OnTimeEnd(roundType ~= CatCardConst.RoundCheckType.None)
        if roundType == CatCardConst.RoundCheckType.Normal then
            self.bll:SetLocalState(CatCardConst.LocalState.ROUNDENDING_PLAY_DIALOG)
        elseif roundType == CatCardConst.RoundCheckType.ShowView then
            self.bll:SetLocalState(CatCardConst.LocalState.ROUNDENDING_WAIT_HANDLE_CLICK)
        else
            self.bll:SetLocalState(CatCardConst.LocalState.ROUNDENDING_CHECK_TO_NEXT_ROUND)
        end
    elseif st == CatCardConst.LocalState.ROUNDENDING_WAIT_HANDLE_CLICK then
        --TODO 播放假剧情，以丢弃PlayerSelect和ManSelect剧情
        ---@type CatCard.ChangeDialogueStateActionData
        local actionData = self.bll:GetActionData(CatCardConst.ActionType.ChangeDialogueState, CatCardConst.PlayerTypeSwitch[self.stateData:GetSeat()])
        actionData:SetState(CatCardConst.DialogueState.Draw)
        actionData:SetDialogueCtrlState(CatCardConst.DialogueCtrlState.Stop)
        actionData:Begin()
    elseif st == CatCardConst.LocalState.ROUNDENDING_PLAY_DIALOG then
        local result = self.bll:GetRoundRes(CatCardConst.PlayerType.PLAYER)
        local state = ""
        if result == CatCardConst.RoundRes.DRAW then
            state = CatCardConst.DialogueState.Draw
        elseif result == CatCardConst.RoundRes.WIN then
            state = CatCardConst.DialogueState.Successed
        elseif result == CatCardConst.RoundRes.LOSS then
            state = CatCardConst.DialogueState.Failed
        end

        if not string.isnilorempty(state) then
            ---@type CatCard.ChangeDialogueStateActionData
            local actionData = self.bll:GetActionData(CatCardConst.ActionType.ChangeDialogueState, CatCardConst.PlayerTypeSwitch[self.stateData:GetSeat()], function()
                self.bll:SetLocalState(CatCardConst.LocalState.ROUNDENDING_DIALOG_END)
            end)
            actionData:SetState(state)
            actionData:SetDialogueCtrlState(CatCardConst.DialogueCtrlState.Start)
            actionData:Begin()
        end
    elseif st == CatCardConst.LocalState.ROUNDENDING_DIALOG_END then
        self.bll:SetLocalState(CatCardConst.LocalState.ROUNDENDING_WAIT_TOUCH)
    elseif st == CatCardConst.LocalState.ROUNDENDING_ON_VIEW_TOUCH then
        EventMgr.Dispatch("DialoguePanelHide")
        self.bll:SetLocalState(CatCardConst.LocalState.ROUNDENDING_CHECK_TO_NEXT_ROUND)
    elseif st == CatCardConst.LocalState.ROUNDENDING_CHECK_TO_NEXT_ROUND then
        --检测是否需要进入下一轮
        self:CheckToNextRound()
    elseif st == CatCardConst.LocalState.ROUNDENDING_SENDING_GET_REWARD then
        --发送结算协议
        ErrandMgr.SetDelay(true)
        self.bll:CheckAction(CatCardConst.SpecialType.NET_WORK, CatCardConst.NetworkType.GETMIAOREWARD)
    elseif st == CatCardConst.LocalState.ROUNDENDING_RECEIVE_REWARD then
        --收到结算协议
        self:SetRoundResultViewActive(false)
    elseif st == CatCardConst.LocalState.ROUNDENDING_CHECK_END_DIALOG then
        self.bll:SetLocalState(CatCardConst.LocalState.ROUNDENDING_SENDING_GET_REWARD)
    elseif st == CatCardConst.LocalState.ROUNDENDING_PLAY_END_DIALOG then
        ---@type CatCard.ChangeDialogueStateActionData
        local actionData = self.bll:GetActionData(CatCardConst.ActionType.ChangeDialogueState, CatCardConst.PlayerType.PLAYER, function()
            self.bll:SetLocalState(CatCardConst.LocalState.ROUNDENDING_END_STROY)
        end)
        actionData:SetState(CatCardConst.DialogueState.Ending)
        actionData:SetDialogueCtrlState(CatCardConst.DialogueCtrlState.Start)
        actionData:Begin()
    elseif st == CatCardConst.LocalState.ROUNDENDING_END_STROY then
        --ending剧情播放完成
        self.bll:SetLocalState(CatCardConst.LocalState.ROUNDENDING_WAIT_RESULT_VIEW_CLOSE)
    elseif st == CatCardConst.LocalState.ROUNDENDING_END_ON_VIEW_CLOSE then
        self.bll:SetLocalState(CatCardConst.LocalState.ROUNDENDING_END)
        self.bll:Exit()
    elseif st == CatCardConst.LocalState.ROUNDENDING_END then
        self:End()
    end
end

---检测是否进入下一轮
function RoundEndAction:CheckToNextRound(call_back)
    if self.stateData:GetRoundCount() >= self.stateData:GetMaxRoundCount() then
        self.bll:SetLocalState(CatCardConst.LocalState.ROUNDENDING_CHECK_END_DIALOG)
    else
        self.bll:SetLocalState(CatCardConst.LocalState.ROUNDENDING_END)
        self.bll:CheckAction(CatCardConst.SpecialType.NET_WORK, CatCardConst.NetworkType.REDUCEMIAOCOUNT)
    end
end

function RoundEndAction:OnTimeEnd(isShow)
    self:SetRoundResultViewActive(isShow)
end

function RoundEndAction:SetCatActive(is_active)
    if is_active then
        local player_res, enemy_res = self.bll:GetRoundRes()
        local cat = self.logic_ctrl:GetReslutCatModel(player_res)
        local rounc_conf = CatCardConst.RoundConf[player_res]
        self.logic_ctrl:SetResultCatActive(player_res, true)
        self.bll:CheckAnimation(CatCardConst.AnimationType.DEFAULT, CatCardConst.AnimationState.ANIMATION, cat, function()

        end, rounc_conf.cat_ani_name)
    else
        self.logic_ctrl:SetResultCatModelsActive(false)
    end
end

function RoundEndAction:SetRoundResultViewActive(is_active)
    if is_active then
        self:SetCatActive(true)
    else
        self:SetCatActive(false)
    end
    EventMgr.Dispatch(CatCardConst.Event.CAT_CARD_SET_WND_ACTIVE, not is_active)
    EventMgr.Dispatch(CatCardConst.Event.CAT_CARD_SET_VIEW_ACTIVE, CatCardConst.ViewType.ROUND_RESULT, is_active)

end

function RoundEndAction:SetWndRtActive(is_active)
    EventMgr.Dispatch(CatCardConst.Event.CAT_CARD_SET_WND_RT_ACTIVE, is_active)
end

function RoundEndAction:Start()
    self:SetWndRtActive(false)
    self:SetIsRunning(true)
    self:RegisterEvent()
    self.bll:SetLocalState(CatCardConst.LocalState.ROUNDENDING)
end

function RoundEndAction:End()
    self:SetRoundResultViewActive(false)
    self:SetWndRtActive(true)
    self:UnRegisterEvent()
    self.bll:SetLocalState(CatCardConst.LocalState.NONE)
    self:SetIsRunning(false)
end

return RoundEndAction