---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by jiaozhu.
--- DateTime: 2022/6/20 16:50
--- 展示出的牌
---@type CatCardConst
local CatCardConst = require("Runtime.System.X3Game.Modules.CatCard.Data.CatCardConst")
---@type CatCard.CatCardBaseAction
local BaseAction = require(CatCardConst.BASE_ACTION_PATH_NEW)
---@class CatCard.ShowCardAction:CatCard.CatCardBaseAction
local ShowCardAction = class("ShowCardAction", BaseAction)
local cur_model, cur_model_name

function ShowCardAction:ctor()
    BaseAction.ctor(self)
end

---@param action_data CatCard.ShowCardActionData
function ShowCardAction:Begin(action_data)
    BaseAction.Begin(self, action_data)

    local model
    if action_data:IsShow() then
        if cur_model_name and not GameObjectUtil.IsNull(cur_model) then
            self:ReleaseModel(cur_model_name, cur_model)
        end
        local data = action_data:GetData()
        local model_name = data:GetCardModel()
        model = self:LoadModel(model_name)
        cur_model = model
        cur_model_name = model_name
        self:AddModelToShow(cur_model_name, cur_model)
        if action_data:IsFly() then
            GameObjectUtil.SetLayer(model, Const.LayerMask.RT, true)
            local model_parent = self:GetModelParent(CatCardConst.CardType.CARD, action_data:GetPosIdx(), action_data:GetPlayerType())
            GameObjectUtil.SetParent(GameObjectUtil.GetComponent(model), GameObjectUtil.GetComponent(model_parent))
            local slot_stack = action_data:GetSlotStack() or self:GetSlotStackNodeByType(CatCardConst.SubType.FUNCCARD, CatCardConst.CardType.CARD, action_data:GetPosIdx(), action_data:GetPlayerType())
            local ani_state = CatCardConst.AnimationState.MOVE | CatCardConst.AnimationState.SCALE | CatCardConst.AnimationState.ROTATION_X | CatCardConst.AnimationState.ROTATION_Y
            self.bll:CheckSound(CatCardConst.SoundType.DEFAULT, CatCardConst.Sound.SYSTEM_MIAO_FUNCTIONCARDFLY)
            self.bll:CheckAnimation(CatCardConst.AnimationType.MOVE_MODEL, ani_state, model, slot_stack, action_data:GetSpeed(), handler(self, self.MoveEnd), action_data:GetMoveEasyType(), action_data:GetRotationDt(), action_data:GetRotationEasyType(), action_data:GetScaleDt(), action_data:GetScaleEasyType())
        else
            local slot_stack = action_data:GetSlotStack() or self:GetSlotStackNodeByType(CatCardConst.SubType.FUNCCARD, CatCardConst.CardType.CARD, action_data:GetPosIdx(), action_data:GetPlayerType())
            GameObjectUtil.SetParent(GameObjectUtil.GetComponent(model, "", "Transform"), GameObjectUtil.GetComponent(slot_stack, "", "Transform"))
            self:End()
        end

    else
        model = cur_model
        self:ReleaseModel(cur_model_name, model)
        cur_model = nil
        cur_model_name = nil
        self:End()
    end

end

---卡牌移动结束
function ShowCardAction:MoveEnd()

    ---@type CatCard.ShowCardActionData
    local action_data = self:GetData()

    if action_data:GetPlayerType() == CatCardConst.PlayerType.ENEMY then
        ---男主卡牌移动结束 需要翻转牌为正面
        self.bll:CheckSound(CatCardConst.SoundType.DEFAULT, CatCardConst.Sound.SYSTEM_MIAO_CARDTURN_FLOAT)
        local slot_stack_node = action_data:GetSlotStack() or self:GetSlotStackNodeByType(action_data:GetData():GetSubType(), CatCardConst.CardType.CARD, action_data:GetPosIdx(), action_data:GetPlayerType())
        local animation_st = CatCardConst.AnimationState.ROTATION_Z
        self.bll:CheckAnimation(CatCardConst.AnimationType.MOVE_MODEL, animation_st, cur_model, slot_stack_node, action_data:GetSpeed(), function()
            self:End()
        end, action_data:GetMoveEasyType(), action_data:GetRotationDt(), action_data:GetRotationEasyType())
    else
        ---女主卡牌移动结束就直接结束了
        self:End()
    end
end

function ShowCardAction:End()
    table.clear(self.modelMap)
    BaseAction.End(self)
end

function ShowCardAction:Exit()
    cur_model = nil
    cur_model_name = nil
    BaseAction.Exit(self)
end

return ShowCardAction