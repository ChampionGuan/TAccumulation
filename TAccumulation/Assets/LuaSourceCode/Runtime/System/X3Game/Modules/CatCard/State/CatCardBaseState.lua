---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by pc.
--- DateTime: 2020/8/28 19:23
---
local CatCardConst = require("Runtime.System.X3Game.Modules.CatCard.Data.CatCardConst")
---@class CatCardBaseState
local BaseState = class("BaseState")

function BaseState:SetState(st)
    self.state = st
end

function BaseState:GetState()
    return self.state
end

function BaseState:IsRunning()
    return self.is_running
end

function BaseState:SetIsRunning(is_running)
    self.is_running = is_running
    self.bll:CheckRunning()
end

function BaseState:SetBll(bll)
    ---@type CatCardBLL
    self.bll = bll
end

function BaseState:Execute()

end

function BaseState:CheckAction(player_type)
    player_type = player_type and player_type or CatCardConst.PlayerType.ENEMY
    local action_type, action_param
    local sp_action = self.bll:GetSPAction(player_type)
    if sp_action and sp_action.id then
        action_type = sp_action.id
        action_param = sp_action
        self.bll:CheckPipeline(CatCardConst.ActionPipelineType.Default, { PlayerType = player_type, SPAction = sp_action })
    else
        self.bll:CheckAction(action_type, action_param)
    end
end

function BaseState:ChangeToSelect(player_type)
    self.bll:ChangeToSelect(player_type)
end

function BaseState:GetCardsType()
    return CatCardConst.CardType.CARD, CatCardConst.CardType.SLOT
end

function BaseState:GetPlayerType()

end

function BaseState:ShowRealCards(...)
    if self.bll:IsCanRefreshAllModels() then
        self.bll:SetIsCanRefreshAllModels(false)
        self:RefreshCards(...)
    else
        local playerType = self:GetPlayerType()
        local cardType1, cardType2 = self:GetCardsType()
        if cardType1 then
            self:RefreshCards(cardType1, false, playerType)
        end
        if cardType2 then
            self:RefreshCards(cardType2, false, playerType)
        end

    end
end

function BaseState:AddMiaoTurn()
    self.bll:CheckAction(CatCardConst.SpecialType.NET_WORK, CatCardConst.NetworkType.ADDMIAOTURN)
end

function BaseState:RefreshCards(...)
    EventMgr.Dispatch(CatCardConst.Event.CAT_CARD_REFRESH_MODELS, ...)
end

function BaseState:Leave()
    self:SetIsRunning(false)
end

function BaseState:Exit()
    GameUtil.ClearTarget(self)
end

function BaseState:Enter()
    self:SetBll(BllMgr.Get("CatCardBLL"))
end

return BaseState