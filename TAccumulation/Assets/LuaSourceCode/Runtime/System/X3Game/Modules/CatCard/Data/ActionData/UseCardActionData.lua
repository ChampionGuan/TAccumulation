---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by jiaozhu.
--- DateTime: 2022/6/7 22:06
---使用卡数据
local CatCardConst = require("Runtime.System.X3Game.Modules.CatCard.Data.CatCardConst")
---@type CatCard.BaseActionData
local BaseActionData = require(CatCardConst.BASE_ACTION_DATA_PATH)
---@class CatCard.UseCardActionData:CatCard.BaseActionData
local UseCardActionData = class("UseCardActionData",BaseActionData)

function UseCardActionData:ctor()
    BaseActionData.ctor(self)
    
    ---选中的目标
    ---@type int
    self.selectedTarget = 0
    
    ---使用目标类型
    ---@type CatCardConst.CardTargetType
    self.targetType = CatCardConst.CardTargetType.None
    
    ---卡数据
    ---@type CatCardData
    self.data = nil
    
    ---卡的位置
    ---@type int
    self.posIndex = 0
    
    ---使用卡的类型
    ---@type CatCardConst.UseCardType
    self.useCardType = nil
    
    ---使用失败弹出tips
    ---@type boolean
    self.isCanShowTips = false

    ---是否使用成功
    ---@type boolean
    self.isUseSuccess = false
    
    ---@type fun(type:boolean)
    self.useCardCall = nil
end

--region Set

---@param useCardCall fun(type:boolean)
function UseCardActionData:SetUseCardCall(useCardCall)
    self.useCardCall = useCardCall
end

---@param isCanShowTips boolean
function UseCardActionData:SetIsCanShowTips(isCanShowTips)
    self.isCanShowTips = isCanShowTips
end

---@param useCardType CatCardConst.UseCardType
function UseCardActionData:SetUseCardType(useCardType)
    self.useCardType = useCardType
end

---@param posIdx int
function UseCardActionData:SetPosIdx(posIdx)
    self.posIndex = posIdx
end

---@param target int
function UseCardActionData:SetSelectedTarget(target)
    self.selectedTarget = target
end

---@param targetType CatCardConst.CardTargetType
function UseCardActionData:SetTargetType(targetType)
    self.targetType = targetType
end


---@param isSuccess boolean
function UseCardActionData:SetIsUseSuccess(isSuccess)
    self.isUseSuccess = isSuccess
end

--endregion
--region Get
---@return CatCardData
function UseCardActionData:GetData()
    if not self.data then
        self.data = self.bll:GenData(CatCardConst.CardType.CARD,self:GetCardId(),self:GetPosIndex())
    end
    return self.data
end


---@return int
function UseCardActionData:GetSelectedTarget()
    return self.selectedTarget
end

---@return CatCardConst.CardTargetType
function UseCardActionData:GetTargetType()
    return self.targetType
end

---@return CatCardConst.UseCardType
function UseCardActionData:GetUseCardType()
    return self.useCardType
end

---是否需要target
---@return boolean
function UseCardActionData:IsNeedTarget()
    return self.targetType~= CatCardConst.CardTargetType.None
end

---@return int
function UseCardActionData:GetPosIndex()
    return self.posIndex
end

---@return boolean
function UseCardActionData:IsCanShowTips()
    return self.isCanShowTips
end

---@return boolean
function UseCardActionData:IsUseSuccess()
    return self.isUseSuccess
end

--endregion

---@param cardId int
---@param selectedTarget int
---@param posIndex int
function UseCardActionData:Set(cardId,posIndex,selectedTarget)
    self:SetPosIdx(posIndex)
    self:SetCardId(cardId)
    self:SetSelectedTarget(selectedTarget)
    self:ParseTarget()
end

---解析类型
function UseCardActionData:ParseTarget()
    local data = self:GetData()
    if data:IsFuncCard() then
        local effect = CatCardConst.FuncCardTypeConf[data:GetEffectId()]
        if effect then
            self:SetTargetType(effect.target_type or CatCardConst.CardTargetType.None)
        end
    else
        self:SetTargetType(CatCardConst.CardTargetType.Slot)
    end
end

---检测使用条件回调
function UseCardActionData:OnUseCardCheckFinish()
    if self.useCardCall then
        self.useCardCall(self:IsUseSuccess())
    end
end


function UseCardActionData:OnClear()
    self.bll:ReleaseData(self.data)
end

function UseCardActionData:OnInit()
    self:SetPosIdx(0)
    self:SetTargetType(CatCardConst.CardTargetType.None)
    self:SetUseCardType(CatCardConst.UseCardType.Select)
    self:SetIsCanShowTips(true)
end

return UseCardActionData