---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by jiaozhu.
--- DateTime: 2022/5/31 17:44
---
local CatCardConst = require("Runtime.System.X3Game.Modules.CatCard.Data.CatCardConst")
---@class CatCard.BaseActionData
local BaseActionData = class("BaseActionData")

function BaseActionData:ctor()
    ---@type CatCard.ActionType
    self.actionType = 0
    ---@type CatCardConst.PlayerType
    self.playerType = CatCardConst.PlayerType.ENEMY
    ---@type int
    self.cardId = 0
    ---@type CatCardBLL
    self.bll = BllMgr.GetCatCardBLL()
    ---结束回调
    ---@type fun():void
    self.finishCall = nil
    ---action之后是否自动清理
    ---@type boolean
    self.isAutoRelease = true
    ---action执行顺序
    ---@type int
    self.order = 0
    ---是否可以并行
    ---@type boolean
    self.isParallel = false
    ---是否打断后续流程
    ---@type boolean
    self.isBreak = false
    ---参数
    ---@type any
    self.params = nil
    ---是否正在running
    ---@type boolean
    self.isRunning = false
    ---绑定的action
    ---@type CatCard.CatCardBaseAction
    self.action = nil
    ---效果类型
    ---@type CatCardConst.FuncEffectType
    self.effectType = nil
    ---卡牌类型
    ---@type CatCardConst.CatCardType
    self.cardType = 0
    ---是否可以被打断
    ---@type boolean
    self.isCanBreak = true
    ---是否已经被释放
    ---@type boolean
    self.isReleased = false
    ---是否暂停
    ---@type boolean
    self.isPause = false
    ---@type CatCardConst.SpecialType
    self.spType = nil
end

--region Get
---@return CatCard.ActionType
function BaseActionData:GetActionType()
    return self.actionType
end

---@return boolean
function BaseActionData:IsBreak()
    return self.isBreak
end

---@type CatCardConst.PlayerType
function BaseActionData:GetPlayerType()
    return self.playerType
end

---@return CatCardConst.FuncEffectType
function BaseActionData:GetEffectType()
    return self.effectType
end

---@return int
function BaseActionData:GetCardId()
    return self.cardId
end

---是否自动释放
---@return boolean
function BaseActionData:IsAutoRelease()
    return self.isAutoRelease
end

---@return int
function BaseActionData:GetOrder()
    return self.order
end

---@return boolean
function BaseActionData:IsRunning()
    return self.isRunning
end

---是否可以并行
---@return boolean
function BaseActionData:IsParallel()
    return self.isParallel
end

---@return any
function BaseActionData:GetParam()
    return self.params
end

---@return CatCardConst.SpecialType
function BaseActionData:GetSpType()
    return self.spType
end

---@return boolean
function BaseActionData:IsCanBreak()
    return self.isCanBreak
end

---@return boolean
function BaseActionData:IsReleased()
    return self.isReleased
end

---@return boolean
function BaseActionData:IsPause()
    return self.isPause
end

--endregion

--region Set

---@param isCanBreak boolean
function BaseActionData:SetIsCanBreak(isCanBreak)
    self.isCanBreak = isCanBreak
end

---@param actionType CatCard.ActionType
function BaseActionData:SetActionType(actionType)
    self.actionType = actionType
end

---@param isBreak boolean
function BaseActionData:SetIsBreak(isBreak)
    self.isBreak = isBreak
end

---@param effectType CatCardConst.FuncEffectType
function BaseActionData:SetEffectType(effectType)
    self.effectType = effectType
end

---@param isRunning boolean
function BaseActionData:SetIsRunning(isRunning)
    self.isRunning = isRunning
end

---@param playerType CatCardConst.PlayerType
function BaseActionData:SetPlayerType(playerType)
    self.playerType = playerType
end

---@param cardId int
function BaseActionData:SetCardId(cardId)
    self.cardId = cardId
end

---@param cardType CatCardConst.CatCardType
function BaseActionData:SetCardType(cardType)
    self.cardType = cardType
end

---@return int CatCardConst.CatCardType
function BaseActionData:GetCardType()
    return self.cardType or 0
end


---@param finishCall fun():void
function BaseActionData:SetFinishCall(finishCall)
    self.finishCall = finishCall
end

---@param isAutoRelease boolean
function BaseActionData:SetIsAutoRelease(isAutoRelease)
    self.isAutoRelease = isAutoRelease
end

---@param isParallel boolean
function BaseActionData:SetIsParallel(isParallel)
    self.isParallel = isParallel
end

---@param order int
function BaseActionData:SetOrder(order)
    self.order = order
end

---@param isPause boolean
function BaseActionData:SetPause(isPause)
    self.isPause = isPause
end

---@param params any
function BaseActionData:SetParam(params)
    self.params = params
end

---@param spType CatCardConst.SpecialType
function BaseActionData:SetSpType(spType)
    self.spType = spType
end

---@param actionType CatCard.ActionType
---@param playerType CatCardConst.PlayerType
---@param finishCall fun():void
function BaseActionData:SetAction(actionType,playerType,finishCall)
    self:SetActionType(actionType)
    self:SetPlayerType(playerType)
    self:SetFinishCall(finishCall)
end

---@param action CatCard.CatCardBaseAction
function BaseActionData:SetOwner(action)
    self.action = action
end


--endregion

function BaseActionData:Pause()
    if not self:IsRunning() then
        return
    end
    if not self:IsPause() then
        if self.action then
            self.action:Pause()
        end
        self:SetPause(true)
    end
end

function BaseActionData:Resume()
    if not self:IsRunning() then
        return
    end
    if  self:IsPause() then
        if self.action then
            self.action:Resume()
        end
        self:SetPause(false)
    end
    
end

---完成
function BaseActionData:Finish()
    local call = self.finishCall
    if call then
        call(self)
    end
    self:Release()
end

---开始action
function BaseActionData:Begin()
    if self:IsReleased() then
        Debug.LogErrorFormat("[喵喵牌] 该action[%s]已经被释放，但是还在执行action Begin!!!!",self.__cname)
        return
    end
    if not self.action then
        self.bll:ExecuteAction(self)
    else
        self.action:Begin(self)
    end
end

---结束action
function BaseActionData:End()
    if self:IsReleased() then
        Debug.LogErrorFormat("[喵喵牌] 该action[%s]已经被释放，但是还在执行End !!!!",self.__cname)
        return
    end
    if self.action then
        self.action:End()
    end
end

---@param actionType CatCard.ActionType
---@param playerType CatCardConst.PlayerType
---@param finishCall fun():void
function BaseActionData:SetAction(actionType,playerType,finishCall)
    self:SetActionType(actionType)
    self:SetPlayerType(playerType)
    self:SetFinishCall(finishCall)
end

function BaseActionData:Set(...)
    
end

---清理数据
function BaseActionData:Release()
    if self:IsReleased() then
        Debug.LogError("【喵喵牌】bll is release")
        return
    end
    self.bll:ReleaseActionData(self)
end

function BaseActionData:OnClear()
    
end

function BaseActionData:OnInit()
    
end

function BaseActionData:Init()
    self.bll = BllMgr.GetCatCardBLL()
    self.isReleased  = false
    self:SetOrder(0)
    self:SetIsAutoRelease(true)
    self:SetIsCanBreak(true)
    self:OnInit()
end

---清理数据
function BaseActionData:Clear()
    self:OnClear()
    GameUtil.ClearTarget(self)
    self.isReleased = true
end

return BaseActionData