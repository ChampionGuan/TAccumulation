---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by kan.
--- DateTime: 2021/12/29 14:45
---
---定时更新卡池组与卡池的状态
---@class GachaTimer
local GachaTimer = {}

local GachaHelper = require("Runtime.System.X3Game.Modules.Gacha.GachaHelper")

local GachaGroupState =
{
    NONE = 0,
    SHOW = 1 << 1,
    OPEN = 1 << 2,
    CLOSE = 1 << 3,
    HIDE = 1 << 4,
}

function GachaTimer:new()
    o = {}
    setmetatable(o, self)
    self.__index = self


    return o
end

---卡池开启时显示，关闭时隐藏。
---卡池满足隐藏条件时不立即隐藏，在下次进抽卡界面时才隐藏

---启用GachaTimer
function GachaTimer:SetGroup(groupCfg)
    self.groupCfg = groupCfg -- 卡池组信息
    self.gachasCfg = LuaCfgMgr.GetListByCondition("GachaAll", {GachaGroup = self.groupCfg.ID})
    self.openGachas = {}
    self.closeGachas = {}
    self.showTime = GachaHelper.GetTimeStampByStr(self.groupCfg.ShowTime)
    self.openTime = GachaHelper.GetTimeStampByStr(self.groupCfg.OpenTime)
    self.closeTime = GachaHelper.GetTimeStampByStr(self.groupCfg.CloseTime)
    self.hideTime = GachaHelper.GetTimeStampByStr(self.groupCfg.HideTime)
    return self:CheckGachaGroupState()
end

function GachaTimer:CheckGachaGroupState()
    table.clear(self.openGachas)
    table.clear(self.closeGachas)

    self.gachaGroupState = GachaGroupState.NONE

    --- 红点状态
    --- 0 卡池关闭或无记录
    --- 1 卡池开启未查看
    --- 2 卡池开启已查看
    local newPointState = RedPointMgr.GetValue(X3_CFG_CONST.RED_GACHA_NEW, self.groupCfg.ID) or 0

    if self:_CheckGroupIsShow() then
        self.gachaGroupState = self.gachaGroupState | GachaGroupState.SHOW

        if newPointState == 0 then
            newPointState = 1
        end
    end

    if self:_CheckGroupIsOpen() then
        self.gachaGroupState = self.gachaGroupState | GachaGroupState.OPEN
    end

    if self:_CheckGroupIsClose() then
        self.gachaGroupState = self.gachaGroupState | GachaGroupState.CLOSE
    end

    if self:_CheckGroupIsHide() then
        self.gachaGroupState = self.gachaGroupState | GachaGroupState.HIDE

        if newPointState ~= 0 then
            newPointState = 0
        end
    end

    local curRedpointState = RedPointMgr.GetValue(X3_CFG_CONST.RED_GACHA_NEW, self.groupCfg.ID) or 0
    if newPointState ~= curRedpointState and self.groupCfg.NoRedPoint ~= 1 then
        RedPointMgr.Save(newPointState, X3_CFG_CONST.RED_GACHA_NEW, self.groupCfg.ID)
        RedPointMgr.UpdateCount(X3_CFG_CONST.RED_GACHA_NEW, 1, self.groupCfg.ID)
    end

    self:CheckRedPoint()

    return self.openGachas, self.closeGachas
end

---检查卡池组是否满足显示条件
---卡池组配置显示时间，到点显示；卡池组没配显示时间，有一个卡池开启，就显示。
function GachaTimer:_CheckGroupIsShow()
    if self.showTime > 0 then
        local currentTime = TimerMgr.GetCurTimeSeconds()
        return currentTime >= self.showTime
    end

    if self.openTime > 0 then
        local currentTime = TimerMgr.GetCurTimeSeconds()
        return currentTime >= self.openTime
    end

    for _, v in pairs(self.gachasCfg) do
        if self.CheckGachaIsOpen(v) then
            return true
        end
    end
    return false
end

---检查卡池组是否满足开启条件
function GachaTimer:_CheckGroupIsOpen()
    if SelfProxyFactory.GetGachaProxy():GetGroupCloseFlag(self.groupCfg.ID) then
        return false
    end

    if self.openTime > 0 then
        local isOpen = TimerMgr.GetCurTimeSeconds() >= self.openTime
        if isOpen then
            for _, v in pairs(self.gachasCfg) do
                local closeFlag = SelfProxyFactory.GetGachaProxy():GetGachaCloseFlag(v.ID)
                if closeFlag == nil and self.CheckGachaIsOpen(v) then
                    table.insert(self.openGachas, v.ID)
                end
            end
        end
        return isOpen
    end

    --如果没配开启时间，但是配置了卡池组持续时间或手动开启，从服务器数据中获取开始时间
    if self.groupCfg.LastTime > 0 then
        self.openTime = SelfProxyFactory.GetGachaProxy():GetGachaGroupStartTime(self.groupCfg.ID) or -1
        if  self.openTime > 0 then
            -- 获取到开启时间，卡池组已经开启过了
            return TimerMgr.GetCurTimeSeconds() >= self.openTime
        else
            -- 没获取到开启时间，卡池组还未开启，但满足了开启条件，将其中所有的卡池开启
            local isOpen = false
            for _, v in pairs(self.gachasCfg) do
                local closeFlag = SelfProxyFactory.GetGachaProxy():GetGachaCloseFlag(v.ID)
                if closeFlag == nil and self.CheckGachaIsOpen(v) then
                    table.insert(self.openGachas, v.ID)
                    isOpen = true
                end
            end
            return isOpen
        end
    end

    -- 只要其中有任何一个卡池开启，卡池组就算开启
    for _, v in pairs(self.gachasCfg) do
        if self.CheckGachaIsOpen(v) then
            return true
        end
    end

    -- 手动开启，暂时屏蔽改功能
    if self.groupCfg.ManualOpen > 0 then

    end

    return false
end

---检查卡池组是否满足关闭条件
function GachaTimer:_CheckGroupIsClose()
    if SelfProxyFactory.GetGachaProxy():GetGroupCloseFlag(self.groupCfg.ID) then
        return true
    end

    if self.closeTime > 0 then
        local isClose = TimerMgr.GetCurTimeSeconds() >= self.closeTime
        if isClose then
            for _, v in pairs(self.gachasCfg) do
                local closeFlag = SelfProxyFactory.GetGachaProxy():GetGachaCloseFlag(v.ID)
                if closeFlag == true and self.CheckGachaIsClose(v) then
                    table.insert(self.closeGachas, v.ID)
                end
            end
        end
        return isClose
    end

    --如果没配关闭时间，但是配置了卡池组持续时间，从服务器数据中获取开始时间，计算关闭时间
    if self.groupCfg.LastTime > 0 then
        local openTime = SelfProxyFactory.GetGachaProxy():GetGachaGroupStartTime(self.groupCfg.ID) or -1
        if openTime > 0 then
            self.closeTime = self.groupCfg.LastTime * 86400 + openTime
            return TimerMgr.GetCurTimeSeconds() >= self.closeTime
        else
            -- 没获取到开启时间，卡池组还未开启
            return false
        end
    end

    if self.groupCfg.GachaLimitTotal > 0 then
        local totalGacha = SelfProxyFactory.GetGachaProxy():GetGachaGroupAccNum(self.groupCfg.ID)
        if totalGacha >= self.groupCfg.GachaLimitTotal then
            return true
        end
    end

    for _, v in pairs(self.gachasCfg) do
        if not self.CheckGachaIsClose(v) then
            return false
        end
    end
    return true
end

---检查卡池组是否满足隐藏条件
---卡池组配了隐藏时间，到点隐藏；卡池组没配隐藏时间，所有卡池都关闭，才隐藏。
function GachaTimer:_CheckGroupIsHide()
    if self.hideTime > 0 then
        local currentTime = TimerMgr.GetCurTimeSeconds()
        return currentTime >= self.hideTime
    end

    return self:IsClose()
end

function GachaTimer:CheckRedPoint()

end

---没配置开启条件，卡池默认开启
function GachaTimer.CheckGachaIsOpen(gachaInfo)
    if gachaInfo.OpenOrClose == 0 then
        return false
    end

    if SelfProxyFactory.GetGachaProxy():GetGachaCloseFlag(gachaInfo.ID) then
        return false
    end

    if gachaInfo.OpenCondition == 0 then
        return true
    end

    return ConditionCheckUtil.CheckConditionByCommonConditionGroupId(gachaInfo.OpenCondition)
end

---没配置关闭条件，卡池默认不关闭
function GachaTimer.CheckGachaIsClose(gachaInfo)
    if gachaInfo.OpenOrClose == 0 then
        return true
    end

    if SelfProxyFactory.GetGachaProxy():GetGachaCloseFlag(gachaInfo.ID) then
        return true
    end

    if gachaInfo.CloseCondition == 0 then
        return false
    end

    return ConditionCheckUtil.CheckConditionByCommonConditionGroupId(gachaInfo.CloseCondition)
end

function GachaTimer:GetOpenGachas()
    return self.openGachas
end

function GachaTimer:GetCloseGachas()
    return self.closeGachas
end

function GachaTimer:IsShow()
    return (self.gachaGroupState & GachaGroupState.SHOW) > 0 and (self.gachaGroupState & GachaGroupState.HIDE) == 0
end

function GachaTimer:IsOpen()
    return (self.gachaGroupState & GachaGroupState.OPEN) > 0
end

function GachaTimer:IsClose()
    return (self.gachaGroupState & GachaGroupState.CLOSE) > 0
end

function GachaTimer:IsHide()
    return (self.gachaGroupState & GachaGroupState.HIDE) > 0
end

function GachaTimer:LogGachaGroupCurrentInfo()
    local curState = "0"
    for i=1,4 do
        local state = 1 << i
        if self.gachaGroupState & state > 0 then
            curState = string.concat("1", curState)
        else
            curState = string.concat("0", curState)
        end
    end

    local log = string.concat("", string.format("current state:%s\n", curState))
    local time = GameHelper.GetDateByTimestamp(self.showTime)
    log = string.concat(log, string.format("group show time:y:%d;m:%d;d:%d;h:%d;m:%d;s:%d\n",  time.year, time.month,time.day, time.hour, time.min, time.sec))
    time = GameHelper.GetDateByTimestamp(self.openTime)
    log = string.concat(log, string.format("group open time:y:%d;m:%d;d:%d;h:%d;m:%d;s:%d\n",  time.year, time.month,time.day, time.hour, time.min, time.sec))
    time = GameHelper.GetDateByTimestamp(self.closeTime)
    log = string.concat(log, string.format("group close time:y:%d;m:%d;d:%d;h:%d;m:%d;s:%d\n",  time.year, time.month,time.day, time.hour, time.min, time.sec))
    time = GameHelper.GetDateByTimestamp(self.hideTime)
    log = string.concat(log, string.format("group hide time:y:%d;m:%d;d:%d;h:%d;m:%d;s:%d\n",  time.year, time.month,time.day, time.hour, time.min, time.sec))

    log = string.concat(log, string.format("group last time:%d\n", self.groupCfg.LastTime))

    for k, v in pairs(self.gachasCfg) do
        log = string.concat(log, string.format("gachaId %s: ", tostring(v.ID)))
        local closeFlag = SelfProxyFactory.GetGachaProxy():GetGachaCloseFlag(v.ID)
        if closeFlag == nil then
            log = string.concat(log, string.format("CloseFlag:%s; ", "nil"))
        else
            log = string.concat(log, string.format("CloseFlag:%s; ", tostring(closeFlag)))
        end
        log = string.concat(log, string.format("IsOpen:%s\n", tostring(GachaTimer.CheckGachaIsOpen(v) and not GachaTimer.CheckGachaIsClose(v))))
    end

    return log
end

function GachaTimer:LogGachaGroupRecordInfo()
    local log = ""
    local gachaRecord = SelfProxyFactory.GetGachaProxy():GetGachaGroupRecord(self.groupCfg.ID)
    for cardId, num in pairs(gachaRecord) do
        local cardCfg = LuaCfgMgr.Get("CardBaseInfo", cardId)
        if cardCfg then
            local record = string.format("cardId:%s;cardNum:%s;cardRare:%s;cardName:%s\n", cardId, num, cardCfg.Quality, UITextHelper.GetUIText(cardCfg.Name))
            log = string.concat(log, record)
        end
    end
    return log
end

return GachaTimer