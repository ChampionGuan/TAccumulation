---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by deling.
--- DateTime: 2022/7/9 16:38
---
local PurikuraConstNew = require "Runtime.System.X3Game.Modules.PurikuraNew.PurikuraConstNew"
local PurikuraAvatarItem = require "Runtime.System.X3Game.Modules.PurikuraNew.PurikuraAvatarItem"

---@class PurikuraAvatarNew
local PurikuraAvatarNew = class("PurikuraAvatarNew")

function PurikuraAvatarNew:ctor()
    self.modeInfo = nil
    self.avatarList = {}
    self.stateList = {}
    self:InitPos()
end

function PurikuraAvatarNew:InitPos()
    self.PosKeyDefine = {}
    self.CutScenePosKey = "cutsceneGroupPos"
    self.PosKeyDefine[PurikuraConstNew.StickerMode.Female] = "playerSinglePos"
    self.PosKeyDefine[PurikuraConstNew.StickerMode.Male] = "maleSinglePos"
    self.PosKeyDefine[PurikuraConstNew.StickerMode.Double] = {}
    self.PosKeyDefine[PurikuraConstNew.StickerMode.Double][0] = "playerGroupPos"
    self.PosKeyDefine[PurikuraConstNew.StickerMode.Double][1] = "maleGroupPos"
end

function PurikuraAvatarNew:InitCharacterPos(mode)
    self:SetRoleActive(PurikuraProcessMgr.GetRoleId(), false)
    self:SetRoleActive(PurikuraConstNew.DefaultFemaleId, false)

    self:StopRoleAction(PurikuraProcessMgr.GetRoleId())
    self:StopRoleAction(PurikuraConstNew.DefaultFemaleId)

    local posKey = self.PosKeyDefine[mode]
    if mode == PurikuraConstNew.StickerMode.Double then
        self:SetRolePosAndRot(PurikuraConstNew.DefaultFemaleId, posKey[0], true)  --设置女主位置
        self:SetRolePosAndRot(PurikuraProcessMgr.GetRoleId(), posKey[1], true)    --设置男主位置
    elseif mode == PurikuraConstNew.StickerMode.Female then
        self:SetRolePosAndRot(PurikuraConstNew.DefaultFemaleId, posKey, false)  --设置女主位置
    else
        self:SetRolePosAndRot(PurikuraProcessMgr.GetRoleId(), posKey, false)    --设置男主位置
    end
    GlobalCameraMgr.SetDefaultBlend(CameraDefaultBlendStyle.Cut, 0)
end
---设置角色的位置，根据界面角色数目播放不同动作
function PurikuraAvatarNew:SetRolePosAndRot(roleId, str, isDouble)
    local pointTrans = PurikuraMgrNew.GetPoint(str)
    self:PlayDefaultAction(roleId, isDouble)
    self:SetObjectPosAndRotByTrans(roleId, pointTrans)
end

function PurikuraAvatarNew:SetCharacterActive(type, state)
    if type == PurikuraConstNew.StickerMode.Male then
        --PhotoMgr.controller.maleCharacter:SetRoleActive(state)
        self:SetRoleActive(PurikuraProcessMgr.GetRoleId(), state)
        self:SetRoleActive(PurikuraConstNew.DefaultFemaleId, not state)

    elseif type == PurikuraConstNew.StickerMode.Female then
        --PhotoMgr.controller.femaleCharacter:SetRoleActive(state)
        self:SetRoleActive(PurikuraConstNew.DefaultFemaleId, state)
        self:SetRoleActive(PurikuraProcessMgr.GetRoleId(), not state)

    else
        self:SetRoleActive(PurikuraConstNew.DefaultFemaleId, state)
        self:SetRoleActive(PurikuraProcessMgr.GetRoleId(), state)

    end
end

function PurikuraAvatarNew:PlayActionNew(roleId, id, mode)
    self:PlayAction(roleId, id, self:GetPosKey(mode))
end

function PurikuraAvatarNew:GetPosKey(mode)
    --single 单人拍照时初始站位、单人拍照时cutscene播放位置
    --group 双人拍照时两个人的初始站位
    --cutscene_group 双人拍照时cutscene播放位置
    if mode == PurikuraConstNew.StickerMode.Double then
        --双人拍照用
        return self.CutScenePosKey
    else
        return self.PosKeyDefine[mode]
    end
end

---加载角色控制脚本
function PurikuraAvatarNew:Load(mode, roleId, modeInfo, completeCb)
    --这里做下判空或者清理或者
    self.modeInfo = modeInfo;

    local idList = mode == PurikuraConstNew.PhotoMode.Sticker and { roleId, PurikuraConstNew.DefaultFemaleId } or { roleId }

    local totalLoaded = 0
    local totalNeed = 0;
    local itemCompleteCb = function()
        totalLoaded = totalLoaded + 1
        if (totalLoaded == totalNeed) then
            if (completeCb) then
                completeCb()
            end
        end
    end

    for index, roleId in pairs(idList) do
        totalNeed = totalNeed + 1;
        self.avatarList[roleId] = PurikuraAvatarItem:new()
        local defaultActionName = roleId == PurikuraConstNew.DefaultFemaleId and modeInfo.DefaultPlayerAction or modeInfo.DefaultMaleAction
        local defaultDoubleActionName = roleId == PurikuraConstNew.DefaultFemaleId and modeInfo.DefaultPlayerGroupAction or modeInfo.DefaultMaleGroupAction
        self.avatarList[roleId]:Load(roleId, defaultActionName, defaultDoubleActionName, itemCompleteCb)
    end

    ---临时比较挫的处理，原逻辑大部分传递-1代替男主，先苟下
    self.avatarList[-1] = self.avatarList[roleId]

end

---变更男主
function PurikuraAvatarNew:LoadRole(roleId, mode)
    if(self.avatarList[roleId] or roleId == PurikuraConstNew.DefaultFemaleId) then
        return
    end
    ---加载模型
    EventMgr.Dispatch(PurikuraConstNew.Event.OnPhotoMaleRoleLoad, true)
    local cb = mode and function()
        PurikuraMgrNew.InitCharacterPos(mode)
        EventMgr.Dispatch(PurikuraConstNew.Event.OnPhotoMaleRoleLoad, false)
        ---重置角色位置时白雾过渡
        UICommonUtil.SceneWhiteScreenOut(1)
    end or nil
    self.avatarList[roleId] = PurikuraAvatarItem:new()
    self.avatarList[roleId]:Load(roleId, self.modeInfo.DefaultMaleAction, self.modeInfo.DefaultMaleGroupAction, cb)

    PurikuraProcessMgr.SetRoleId(roleId)
    ---临时比较挫的处理，原逻辑大部分传递-1代替男主，先苟下
    self.avatarList[-1] = self.avatarList[roleId]
end

---移除男主 ---- 这里先直接移除吧，看有没有缓存的必要，吃内存之类的
function PurikuraAvatarNew:RemoveRole(roleId)
    if(self.avatarList[roleId]) then
        self.avatarList[roleId]:Depose()
        self.avatarList[roleId] = nil
    end
end

function PurikuraAvatarNew:PlayDefaultAction(roleId, isDouble)
    if (self.avatarList[roleId]) then
        self.avatarList[roleId]:PlayDefaultAction(isDouble)
    else
        Debug.LogError("PlayDefaultAction roleId error ", roleId)
    end
end

function PurikuraAvatarNew:PlayAction(roleId, id, posKey, notInject)
    if (self.avatarList[roleId]) then
        local character = self.avatarList[roleId]
        local cfgInfo = LuaCfgMgr.Get("PhotoAction", id)
        --Prefab对应CutScene，.Asset-ProceduralAnimationClip , fbx-AnimationClip

        local url = self:GetURL(cfgInfo.Resource)
        local type = self:GetType(url)

        if type ~= nil then
            -- = nil说明是CutScene
            Res.LoadWithAssetPath(url, AutoReleaseMode.EndOfFrame, type, character, function(asset)
                character:PlayAction(id, asset)
                self:SetCutScenePosAndRot(roleId, posKey)
            end)
        else
            self.avatarList[PurikuraConstNew.DefaultFemaleId]:StopAction()
            --注入女主,AR模式不需要
            if not notInject then
                CutSceneMgr.InjectAssetIns(1, self.avatarList[PurikuraConstNew.DefaultFemaleId]:GetRoleIns())
            end
            self.avatarList[roleId]:PlayAction(id, cfgInfo.Resource)
            ---是双人动作
            if cfgInfo.Type == 2 then
                self.avatarList[PurikuraConstNew.DefaultFemaleId]:SetFashionAndPartWithAction(id)
            end
            self:SetCutScenePosAndRot(roleId, posKey)
        end

    else
        Debug.LogError("PlayAction roleId error ", roleId)
    end
end


function PurikuraAvatarNew:GetType(url)
    local extension = url:match(".+%.(%w+)$")
    if extension == nil then
        return nil
    end

    local extName = string.lower(extension)
    if extName == "fbx" then
        return typeof(CS.UnityEngine.AnimationClip)
    elseif extName == "asset" then
        return typeof(CS.ProceduralAnimation.ProceduralAnimationClip)
    elseif extName == "prefab" then
        return nil
    end
    return nil
end

function PurikuraAvatarNew:GetURL(resURL)
    local newstr = string.gsub(resURL, '\\', '/')
    return "Assets/Build/Art/Drama/" .. newstr
end

function PurikuraAvatarNew:SetRoleActive(roleId, active)
    if (self.avatarList[roleId]) then
        self.avatarList[roleId]:SetRoleActive(active)
    end
end

function PurikuraAvatarNew:StopRoleAction(roleId)
    if (self.avatarList[roleId]) then
        self.avatarList[roleId]:StopAction()
    else
        Debug.LogError("StopRoleAction roleId error ", roleId)
    end
end

function PurikuraAvatarNew:RemoveAllDress(roleId)
    if (not roleId) then
        for index, item in pairs(self.avatarList) do
            item:RemoveAllDress()
        end
    else
        if (self.avatarList[roleId]) then
            self.avatarList[roleId]:RemoveAllDress()
        end
    end

end

---选饰品时的位置
function PurikuraAvatarNew:SetRoleDressDefaultState(mode)
    local maleItem = nil
    local femaleItem = nil
    for index, item in pairs(self.avatarList) do
        if (item.sex == Define.Sex.Female) then
            femaleItem = item
        else
            maleItem = item
        end
    end

    local posConfig = self:GetDefaultPosConfig(mode)
    --local cfgID = posConfig[sex]
    --
    local maleConfig = LuaCfgMgr.Get("SundryConfig", posConfig[Define.Sex.Male])
    local femaleConfig = LuaCfgMgr.Get("SundryConfig", posConfig[Define.Sex.Female])

    ---这里可以再整理下
    if mode == PurikuraConstNew.StickerMode.Male then
        femaleItem:SetRoleActive(false)
        maleItem:SetPos(maleConfig[1])
        maleItem:SetRotation(maleConfig[2])
    elseif mode == PurikuraConstNew.StickerMode.Female then
        maleItem:SetRoleActive(false)
        femaleItem:SetPos(femaleConfig[1])
        femaleItem:SetRotation(femaleConfig[2])
    else
        maleItem:SetPos(maleConfig[1])
        maleItem:SetRotation(maleConfig[2])
        femaleItem:SetPos(femaleConfig[1])
        femaleItem:SetRotation(femaleConfig[2])
    end

end

---这里频率高的话存下
function PurikuraAvatarNew:GetDefaultPosConfig(mode, sex)
    local config = {}
    if mode == PurikuraConstNew.StickerMode.Double then
        config[Define.Sex.Male] = 1728
        config[Define.Sex.Female] = 1729
    else
        config[Define.Sex.Male] = 1726
        config[Define.Sex.Female] = 1727
    end

    return config
end

---获取角色dummyPos
function PurikuraAvatarNew:GetDummyPos(roleId)
    if (self.avatarList[roleId]) then
        return self.avatarList[roleId]:GetDummyPos()
    else
        Debug.LogError(" GetDummyPos role error ", roleId)
        return false
    end
end


function PurikuraAvatarNew:OnActionIsMutexWithCharacter(roleId, itemData)
    if (self.avatarList[roleId]) then
        return self.avatarList[roleId]:OnActionIsMutexWithCharacter(itemData)
    else
        Debug.LogError(" OnActionIsMutexWithCharacter role error ", roleId)
        return false
    end
end
---判断动作是否与角色已装备的衣服冲突
function PurikuraAvatarNew:ActionIsMutexWithCloth(roleId, itemData)
    if (self.avatarList[roleId]) then
        return self.avatarList[roleId]:ActionIsMutexWithCloth(itemData)
    else
        Debug.LogError(" ActionIsMutexWithCloth role error ", roleId)
        return false
    end
end

function PurikuraAvatarNew:FashionIsMutexWithAction(roleId, actionData, fashionID)
    if (self.avatarList[roleId]) then
        return self.avatarList[roleId]:FashionIsMutexWithAction(actionData, fashionID)
    else
        Debug.LogError(" FashionIsMutexWithAction role error ", roleId)
        return false
    end
end

function PurikuraAvatarNew:EquipJewelry(roleId, id)
    if (self.avatarList[roleId]) then
        self.avatarList[roleId]:EquipJewelry(id)
        if roleId == PurikuraConstNew.DefaultFemaleId and self.avatarList[roleId].isDoubleAction then
            local manAvatar = self.avatarList[PurikuraProcessMgr.GetRoleId()]
            if manAvatar ~= nil then
                manAvatar:PlayActionState(manAvatar.curActionName)
            end
        end
    else
        Debug.LogError(" EquipJewelry role error ", roleId)
    end
end
---饰品是否与当前服装冲突
function PurikuraAvatarNew:JewelryIsMutexWithFashion(roleId, jewelryID)
    if (self.avatarList[roleId]) then
        return self.avatarList[roleId]:JewelryIsMutexWithFashion(jewelryID)
    else
        Debug.LogError(" JewelryIsMutexWithFashion role error ", roleId)
        return false
    end
end

---服装是否与饰品冲突
function PurikuraAvatarNew:FashionIsMutexWithJewelry(roleId, clothingID)
    if (self.avatarList[roleId]) then
        return self.avatarList[roleId]:FashionIsMutexWithJewelry(clothingID)
    else
        Debug.LogError(" JewelryIsMutexWithFashion role error ", roleId)
        return false
    end
end

---饰品是否与当前饰品（非衣服）冲突
function PurikuraAvatarNew:JewelryIsMutexWithCurFashion(roleId, jewelryID)
    if (self.avatarList[roleId]) then
        return self.avatarList[roleId]:FashionIsMutexWithJewelry(jewelryID)
    else
        Debug.LogError(" JewelryIsMutexWithFashion role error ", roleId)
        return false
    end
end

---动作与配饰
function PurikuraAvatarNew:JewelryIsMutex(roleId, actionID, jewelryInfo)
    if (self.avatarList[roleId]) then
        return self.avatarList[roleId]:JewelryIsMutex(actionID, jewelryInfo)
    else
        Debug.LogError(" JewelryIsMutex role error ", roleId)
        return false
    end
end

----配饰是否装备
function PurikuraAvatarNew:JewelryIsEquip(roleId, jewelryID)
    if (self.avatarList[roleId]) then
        return self.avatarList[roleId]:JewelryIsEquip(jewelryID)
    else
        Debug.LogError(" JewelryIsEquip role error ", roleId)
        return false
    end
end

---操作记录所需饰品信息
function PurikuraAvatarNew:GetCopyEquipData(idList, isDefault)
    local mementoData = {}
    for index, id in pairs(idList) do
        if (self.avatarList[id]) then
            local data = {}
            data.roleId = id
            local equipData = isDefault and self.avatarList[id]:GetDefaultDress() or self.avatarList[id]:GetEquipData()
            data.equipData = table.clone(equipData)

            ---屏蔽衣物
            if(isDefault) then
                data.equipData[1] = self.avatarList[id]:GetEquipData()[1]
            end

            table.insert(mementoData, data)
        end
    end
    return mementoData
end


function PurikuraAvatarNew:SetDressInfo(roleId, dressInfo)
    if (self.avatarList[roleId]) then
        self.avatarList[roleId]:SetDressInfo(dressInfo)
    else
        Debug.LogError(" SetDressInfo role error ", roleId)
        return false
    end
end

function PurikuraAvatarNew:GetDressInfo(roleId)
    if (self.avatarList[roleId]) then
        return self.avatarList[roleId]:GetDressInfo()
    else
        Debug.LogError(" GetDressInfo role error ", roleId)
    end
end

function PurikuraAvatarNew:GetDefaultDress(roleId)
    if (self.avatarList[roleId]) then
        return self.avatarList[roleId]:GetDefaultDress()
    else
        Debug.LogError(" GetDefaultDress role error ", roleId)
    end
end

function PurikuraAvatarNew:SetDefaultDress(roleId)
    if (self.avatarList[roleId]) then
        return self.avatarList[roleId]:SetDefaultDress()
    else
        Debug.LogError(" SetDefaultDress role error ", roleId)
    end
end

function PurikuraAvatarNew:SetObjectPosAndRotByTrans(roleId, pointTrans)
    if (self.avatarList[roleId]) then
        local pos = GameObjectUtil.GetPosition(pointTrans)
        local rot = GameObjectUtil.GetEulerAngles(pointTrans)
        local scale = GameObjectUtil.GetScale(pointTrans)

        self.avatarList[roleId]:SetPos(pos)
        self.avatarList[roleId]:SetRotation(rot)
        self.avatarList[roleId]:SetLocalScale(scale)

    else
        Debug.LogError(" SetObjectPosAndRotByTrans role error ", roleId)
        return false
    end
end

function PurikuraAvatarNew:SetCutScenePosAndRot(roleId, posKey)
    local pointTrans = PurikuraMgrNew.GetPoint(posKey)
    local pos = GameObjectUtil.GetPosition(pointTrans)
    local rot = GameObjectUtil.GetEulerAngles(pointTrans)
    if (self.avatarList[roleId] and pos and rot) then
        self.avatarList[roleId]:SetPos(pos)
        self.avatarList[roleId]:SetRotation(rot)
    --else
    --    Debug.LogError("SetCutScenePosAndRot roleID error ", roleId, posKey)
    end
    --X3AnimatorUtil.SetPosition(character.animator, pos)
    --X3AnimatorUtil.SetRotation(character.animator, rot)
end

---记录当前角色的饰品和动作信息
function PurikuraAvatarNew:RecordCharInfo(mode, time)
    if mode == PurikuraConstNew.StickerMode.Female
    then
        self.stateList[time] = self.avatarList[PurikuraConstNew.DefaultFemaleId]:GetState()
    elseif mode == PurikuraConstNew.StickerMode.Male
    then
        local raleID = PurikuraProcessMgr.GetRoleId()
        self.stateList[time] = self.avatarList[raleID]:GetState()
    elseif mode == PurikuraConstNew.StickerMode.Double
    then
        ---双人模式时动作配置上实际属于男主
        local raleID = PurikuraProcessMgr.GetRoleId()
        self.stateList[time] = self.avatarList[raleID]:GetState()
        local femaleDressList = self.avatarList[PurikuraConstNew.DefaultFemaleId]:GetDressInfo()
        table.insertto(self.stateList[time].dressList, femaleDressList)
    end
end

function PurikuraAvatarNew:ClearCharInfo()
    self.stateList = {}
end

function PurikuraAvatarNew:GetCharInfo()
    return table.clone(self.stateList)
end

function PurikuraAvatarNew:Depose()
    for index, item in pairs(self.avatarList) do
        item:Depose()
    end
    self.avatarList = {}
    self.stateList = {}
end

return PurikuraAvatarNew