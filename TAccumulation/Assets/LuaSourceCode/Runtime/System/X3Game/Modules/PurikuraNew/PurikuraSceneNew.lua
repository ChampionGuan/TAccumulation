---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by deling.
--- DateTime: 2022/7/9 16:39
---


---@class PurikuraSceneNew
local PurikuraSceneNew = class("PurikuraSceneNew")

function PurikuraSceneNew:ctor()
    self.sceneInfo = nil --场景信息
    self.modeInfo = nil -- 模式信息
    self.bloomState = false
    self.StickerExtraInfoGO = nil --大头贴场景附加组件

    ---@field scene2DBGMaterial Material
    self.scene2DBGMaterial = nil --2D背景Material 更换背景用
    ---@field scenePosCollect table<key:string, value:Transform>
    self.scenePosCollect = nil   --存储位置点
end

---加载场景
---@param sceneID int 场景ID
---@param completeCB fun(void) 加载完成回调
function PurikuraSceneNew:Load(modeInfo, completeCB)
    local mSceneID = modeInfo.DefaultBackground;
    if self.sceneInfo and mSceneID == self.sceneInfo.ID then
        if completeCB ~= nil then
            completeCB(true)
        end
        return
    end

    local backGroundInfo = LuaCfgMgr.Get("PhotoBackground", mSceneID)
    --if self.sceneInfo ~= nil and backGroundInfo.Scene == self.sceneInfo.Scene then
    --    self.sceneInfo = backGroundInfo
    --    if completeCB ~= nil then
    --        completeCB(true)
    --    end
    --    return
    --end

    self.sceneInfo = backGroundInfo
    self.modeInfo = modeInfo
    SceneMgr.LoadSceneAsync(self.sceneInfo.Scene, nil, GameConst.LoadingType.Purikura, function(taskID)
        self:InitStickerScene(self.modeInfo.DefaultPos)
        if completeCB then
            completeCB(true)
        end
    end, true)
end

---初始化大头贴场景
---@param resName string 需要加载的资源[保存角色站位信息]
function PurikuraSceneNew:InitStickerScene(resName)
    --获取组件信息
    local res = Res.Load(resName, ResType.T_DynamicUIPrefab, AutoReleaseMode.Scene, typeof(CS.UnityEngine.GameObject))
    self.StickerExtraInfoGO = GameObjectUtil.InstantiateGameObject(res)
    if self.StickerExtraInfoGO == nil then
        return
    end
    UIUtil.ClearTextComp(self.StickerExtraInfoGO)
    local linker = self.StickerExtraInfoGO:GetComponent("ObjLinker")

    local controls = {}
    for i = 0, linker.ObjList.Count - 1 do
        controls[linker.ObjList[i].Name] = linker.ObjList[i].Res
    end

    self.scenePosCollect = controls --保存ObjLinker设置的对象
end

---根据Key获取位置点信息
---@param strKey string 与ObjLinker对应的Key
---@return Transform
function PurikuraSceneNew:GetPoint(strKey)
    if self.scenePosCollect == nil then
        return nil
    end
    return self.scenePosCollect[strKey]
end

---加载灯光
function PurikuraSceneNew:LoadCharacterLight(resource)
    local curProvider = CS.PapeGames.Rendering.CharacterLightingProvider.Current
    local obj = Res.Load(resource, ResType.T_CharacterLighting, AutoReleaseMode.Scene)
    if obj and curProvider then
        curProvider:ChangeCharacterLight(obj)
    end
end

function PurikuraSceneNew:Release()
    SceneMgr.Reset2DBG()

    if self.StickerExtraInfoGO then
        GameObjectUtil.Destroy(self.StickerExtraInfoGO)
        self.StickerExtraInfoGO = nil
    end

    self.sceneInfo = nil
    self.StickerExtraInfoGO = nil
    self.scene2DBGMaterial = nil
    self.scenePosCollect = nil
end

return PurikuraSceneNew