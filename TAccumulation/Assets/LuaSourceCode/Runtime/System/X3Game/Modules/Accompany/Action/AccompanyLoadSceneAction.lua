---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by fusu.
--- DateTime: 2023/4/6 14:07
---

local AccompanyBaseAction = require("Runtime.System.X3Game.Modules.Accompany.Action.AccompanyBaseAction")

---@class AccompanyLoadSceneAction : AccompanyBaseAction
local AccompanyLoadSceneAction = class("AccompanyLoadSceneAction" , AccompanyBaseAction)

function AccompanyLoadSceneAction:Init(actionParam)
    ---场景配置名
    ---@type string
    self._sceneNameKey = actionParam[1]
end

function AccompanyLoadSceneAction:OnConditionPass()
    local sceneGroup = self.accMgr.accBll:GetConfigDataByKey(self._sceneNameKey)
    local sceneName , sceneImg , lightSolution, initFxArr = self.accMgr.accBll:GetAccompanySceneInfo(sceneGroup)
    SceneMgr.LoadSceneAsync(sceneName, nil, GameConst.LoadingType.None, function()
        --这里由策划剧情控制表现
        --if not string.isnilorempty(sceneImg) then
        --    SceneMgr.Change2DSceneByPath(sceneImg)
        --end
        --
        --if not string.isnilorempty(lightSolution) then
        --    local obj = Res.Load(lightSolution, ResType.T_CharacterLighting, AutoReleaseMode.Scene)
        --    if obj then
        --        local currentLightMgr = CS.PapeGames.Rendering.CharacterLightingProvider.Current
        --        currentLightMgr:ChangeCharacterLight(obj)
        --    end
        --end
        --
        --if not table.isnilorempty(initFxArr) then
        --    for _, fx in pairs(initFxArr) do
        --        SceneMgr.PlaySceneFx(fx, nil, 0)
        --    end
        --end
        self:OnFinish()
    end)
end

function AccompanyLoadSceneAction:OnFinish()
    AccompanyBaseAction.OnFinish(self)
end

return AccompanyLoadSceneAction