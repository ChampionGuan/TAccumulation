---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by fusu.
--- DateTime: 2023/4/4 19:58
---

local AccompanyConst = require("Runtime.System.X3Game.Modules.Accompany.Data.AccompanyConst")
local AccompanyBaseCtrl = require("Runtime.System.X3Game.Modules.Accompany.Controller.AccompanyBaseCtrl")
local AccompanyCondition = require("Runtime.System.X3Game.Modules.Accompany.Condition.AccompanyCondition")

---@class AccompanyActorCtrl:AccompanyBaseCtrl  主角管理
local AccompanyActorCtrl = class("AccompanyActorCtrl", AccompanyBaseCtrl)

function AccompanyActorCtrl:Init()
    ---@type GameObject
    self.actor = nil
    ---@type BodyPartClick
    self.actorClick = nil
    ---@type handler
    self.clickListener = handler(self, self._OnActorClick)
    ---@type AccompanyConst.StateType
    self._actorStateType = nil
    ---@type table
    self._filterType = {4}
end

function AccompanyActorCtrl:OnDestroy()
    AccompanyActorCtrl.super.OnDestroy(self)
    ---InitSate持有的是主界面Actor,不能释放
    if self._actorStateType ~= AccompanyConst.StateType.InitState then
        CharacterCtrlMgr.DestroyByGameObject(self.actor)
        CharacterMgr.ReleaseIns(self.actor)
    end
    self.actor = nil
    self.actorClick = nil
    self.onTouchUp = nil
end

---刷新Actoor
---@param stateType AccompanyConst.StateType
---@param onComplete function
function AccompanyActorCtrl:RefreshActor(stateType , onComplete)
    self._actorStateType = stateType
    ---开始使用主界面板娘
    if self._actorStateType == AccompanyConst.StateType.InitState then
        self.actor = BllMgr.GetMainHomeBLL():GetActor()
        self.accMgr.accBll:SetCurActor(self.actor)
        
        local dialogueCtrl = self.accMgr:GetCtrl(AccompanyConst.CtrlType.DialogueCtrl)
        dialogueCtrl:SetDialogueActor(self.actor)

        if onComplete then
            onComplete()
        end
    end
    ---选择模式后使用功能自己的主角
    if self._actorStateType == AccompanyConst.StateType.InteractState then
        local curFashionCanInAcc = AccompanyCondition.CheckCondition(AccompanyConst.ConditionType.AccompanySuitCheck)
        if curFashionCanInAcc then
            local roleBaseKey, rolePartKeys = self.accMgr.accBll:GetCurRoleModelData()
            self:LoadActor(roleBaseKey, rolePartKeys , onComplete)
        else
            local suitKey = self.accMgr.accBll:GetAccompanySuit()
            self:LoadActorWithSuitKey(suitKey, onComplete)
        end
    end
    
end

---加载主角
---@param roleBaseKey string
---@param rolePartKeys string
---@param finishCall function
function AccompanyActorCtrl:LoadActor(roleBaseKey, rolePartKeys, finishCall)
    CharacterMgr.GetIns(roleBaseKey, rolePartKeys, self._filterType , function(ins)
        self:_LoadActorFinish(ins)
        if finishCall then
            finishCall(ins)
        end
    end)
end


---加载主角通过suitKey
---@param suitKey string
---@param finishCall function
function AccompanyActorCtrl:LoadActorWithSuitKey(suitKey, finishCall)
    CharacterMgr.GetInsWithSuitKey(suitKey, function(ins)
        self:_LoadActorFinish(ins)
        if finishCall then
            finishCall(ins)
        end
    end)
end

---加载主角回调
function AccompanyActorCtrl:_LoadActorFinish(ins)
    self.actor = ins
    self.accMgr.accBll:SetCurActor(self.actor)
    local partGroupId = self.accMgr.accBll:GetCurPartGroupId()
    self.actorClick = GameObjClickUtil.GetOrAddCharacterClick(ins, partGroupId, self.clickListener)
    self.actorClick:SetTargetEffect("", "", "")
    ---注册剧情主角
    local dialogueCtrl = self.accMgr:GetCtrl(AccompanyConst.CtrlType.DialogueCtrl)
    dialogueCtrl:SetDialogueActor(self.actor)
end

---主角点击回调
function AccompanyActorCtrl:_OnActorClick(partType)
    EventMgr.Dispatch(AccompanyConst.Event.ON_ACTOR_CLICK , partType)
end

function AccompanyActorCtrl:SetActorPosition(position)
    if self.actor then
        GameObjectUtil.SetPosition(self.actor, position)
    end
end

function AccompanyActorCtrl:SetActorRotation(rotation)
    if self.actor then
        GameObjectUtil.SetEulerAngles(self.actor, rotation)
    end
end


return AccompanyActorCtrl