---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by dengzi.
--- DateTime: 2023/6/21 15:21
---

local BridgeDataBase = require("Runtime.System.X3Game.Modules.GameDataBridge.BridgeDataBase")
---@class DynamicCardBridgeData : BridgeDataBase
local DynamicCardBridgeData = class("DynamicCardBridgeData", BridgeDataBase)
local DCCtrlPath = "Runtime.System.X3Game.Modules.DynamicCard.DynamicCardCtrl"

function DynamicCardBridgeData:ctor()
    ---@type table<int,DynamicCardCtrl>
    self.dcCtrlMap = {}
    self.allMotionCompleteCb = nil
end

---初始化一个动卡控制器
---@param parentTransform UnityEngine.Transform
---@param owner UICtrl
---@return DynamicCardCtrl
function DynamicCardBridgeData:GetOrAddCtrl(parentTransform, owner)
    if nil == parentTransform then
        return nil
    end
    local id = parentTransform.gameObject:GetInstanceID()
    if nil ~= self.dcCtrlMap[id] then
        if self.dcCtrlMap[id].owner ~= owner then
            --热更重启时，动卡UICtrl不销毁，但是已经成为野指针，不受UI生命周期管理。
            --此时需要用一个新的动卡UICtrl来接管野指针，以保证其能有正常的生命周期，且不打断现有的动卡逻辑。
            local newCtrl = UICtrl.GetOrAddCtrl(self.dcCtrlMap[id].gameObject, DCCtrlPath, owner)
            self.dcCtrlMap[id]:CloneData2NewCtrl(newCtrl)
            self.dcCtrlMap[id] = newCtrl
        end
        return self.dcCtrlMap[id]
    end
    local resGo = UIMgr.LoadDynamicUIPrefab(PrefabConst.DynamicCard)
    if not resGo then
        Debug.LogError("加载DynamicCard预制失败！")
        return nil
    end
    GameObjectUtil.SetParent(resGo, parentTransform, false)
    GameObjectUtil.SetActive(resGo, true)
    ---@type DynamicCardCtrl
    local ctrl = UICtrl.GetOrAddCtrl(resGo, DCCtrlPath, owner)
    ctrl:InitCtrl(id)
    self.dcCtrlMap[id] = ctrl
    return ctrl
end

---@param id number
function DynamicCardBridgeData:RemoveCtrl(id)
    if nil == id then
        return
    end
    local ctrl = self.dcCtrlMap[id]
    if nil == ctrl then
        return
    end
    self.dcCtrlMap[id] = nil
    if ctrl.owner then
        ctrl.owner.RemoveCtrl(ctrl.gameObject, DCCtrlPath, ctrl.owner)
    end
    Res.DiscardGameObject(ctrl.gameObject)
end

function DynamicCardBridgeData:Tick(deltaTime)
    if self.dcCtrlMap then
        for _, v in pairs(self.dcCtrlMap) do
            v:Update(deltaTime)
        end
    end
    self:_CheckAllMotionFinish()
end

---设置所有动效都播放完成的回调,回调只会执行一次
function DynamicCardBridgeData:SetAllMotionCompleteCb(callback)
    self.allMotionCompleteCb = callback
    self:_CheckAllMotionFinish()
end

function DynamicCardBridgeData:_CheckAllMotionFinish()
    if self.allMotionCompleteCb then
        if table.nums(self.dcCtrlMap) <= 0 then
            self.allMotionCompleteCb()
            self.allMotionCompleteCb = nil
            return
        end
        for _, v in pairs(self.dcCtrlMap) do
            if v:IsAnyMotionRunning() then
                return false
            end
        end
        self.allMotionCompleteCb()
        self.allMotionCompleteCb = nil
    end
end

return DynamicCardBridgeData