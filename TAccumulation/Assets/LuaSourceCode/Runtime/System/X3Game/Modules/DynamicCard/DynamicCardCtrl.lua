---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by dengzi.
--- DateTime: 2023/6/21 15:35
---

---@class DynamicCardCtrl : UICtrl
local DynamicCardCtrl = class("DynamicCardCtrl", UICtrl)

local DCSingleCardPlayer = require("Runtime.System.X3Game.Modules.DynamicCard.CardPlayer.DCSingleCardPlayer")
local DCMultiCardPlayer = require("Runtime.System.X3Game.Modules.DynamicCard.CardPlayer.DCMultiCardPlayer")

local SC2DCMotionKey = "SC2DCMotionKey"
local DownloadCtrlPath = "Runtime.System.X3Game.Modules.DynamicCard.DynamicCardDownloadCtrl"

---不使用Init()回调，自己控制自由点
function DynamicCardCtrl:InitCtrl(id)
    self.id = id
    ---@type DCCardPlayerBase
    self.playerIns = nil
    ---单卡播放器
    self.singlePlayerIns = DCSingleCardPlayer.new(self)
    ---多卡轮播播放器
    self.multiPlayerIns = DCMultiCardPlayer.new(self)
    ---动卡是否在播放
    self.isDCPlaying = false
    self.cardId = nil
    self.cardIdList = nil
    ---是否限制只使用静卡
    self.onlyShowStaticCard = false
    self.staticCardAnimEnable = true
    self.stopByHide = false
    ---@type Transform
    self.blockMotionRoot = self:GetComponent("OCX_MotionRoot", "Transform")
    ---@type string 激活的遮挡式三段动效（同时只会存在一个）
    self.activeBlockEffect = nil
    self.sc2DCMotionKey = tostring(self.id) .. SC2DCMotionKey
    self.downloadEnable = false
    ---@type DynamicCardDownloadCtrl
    self.downloadCtrl = self:GetOrAddChildCtrl("OCX_btn_Download", DownloadCtrlPath)
end

---@param newCtrl DynamicCardCtrl
function DynamicCardCtrl:CloneData2NewCtrl(newCtrl)
    newCtrl.id = self.id
    newCtrl.playerIns = self.playerIns
    newCtrl.singlePlayerIns = self.singlePlayerIns
    newCtrl.singlePlayerIns:SetDynamicCardCtrl(newCtrl)
    newCtrl.multiPlayerIns = self.multiPlayerIns
    newCtrl.multiPlayerIns:SetDynamicCardCtrl(newCtrl)
    newCtrl.isDCPlaying = self.isDCPlaying
    newCtrl.cardId = self.cardId
    newCtrl.cardIdList = self.cardIdList
    newCtrl.onlyShowStaticCard = self.onlyShowStaticCard
    newCtrl.staticCardAnimEnable = self.staticCardAnimEnable
    newCtrl.stopByHide = self.stopByHide
    newCtrl.activeBlockEffect = self.activeBlockEffect
    newCtrl.sc2DCMotionKey = self.sc2DCMotionKey
    newCtrl.downloadEnable = self.downloadEnable
end

function DynamicCardCtrl:GetId()
    return self.id
end

function DynamicCardCtrl:ResetCtrl()
    self:StopSC2DCMotion()
    self:StopBlockFadeEffect()
    self:SetStaticCardVisible(true)
    self:SetActive("OCX_img_Fade", false)
    self.cardId = nil
    self.cardIdList = nil
    self.stopByHide = false
end

function DynamicCardCtrl:GetBlockMotionRoot()
    return self.blockMotionRoot
end

---限制只播放静态卡
function DynamicCardCtrl:SetOnlyShowStaticCard(onlyShowStaticCard)
    self.onlyShowStaticCard = onlyShowStaticCard
end

---设置是否播放静卡动画
function DynamicCardCtrl:SetStaticCardAnimEnable(bEnable)
    self.staticCardAnimEnable = bEnable
end

---播放动卡(也支持静卡)
---@param cardId number 思念ID
function DynamicCardCtrl:PlayCard(cardId, onStartCb)
    local cardCfg = LuaCfgMgr.Get("CardBaseInfo", cardId)
    if not cardCfg then
        return
    end
    Debug.LogFormatWithTag(GameConst.LogTag.DynamicCard, "DynamicCardCtrl:PlayCard(). CardId：%s", tostring(cardId))
    self:Stop()
    self:ResetCtrl()
    self.isDCPlaying = true
    self.cardId = cardId
    if not self.onlyShowStaticCard and cardCfg.IsDynamic == 1 then
        self.playerIns = self.singlePlayerIns
        self.playerIns:Play(cardId, onStartCb)
    else
        self.downloadCtrl:SetDownloadData(nil, nil)
        UICommonUtil.TrySetImageWithLocalFile(self:GetComponent("OCX_img_StaticCard"), cardCfg.CardImage)
    end
end

---轮播动卡
---@param cardIdList number[] 思念ID列表，目前只支持列表中的所有卡都是动态卡
function DynamicCardCtrl:PlayCardList(cardIdList, fadeEffect)
    if self.onlyShowStaticCard then
        return
    end
    if table.isnilorempty(cardIdList) then
        Debug.LogError("轮播动卡参数错误，无需要播放的动卡")
        return
    end
    for i = 1, #cardIdList do
        local cardCfg = LuaCfgMgr.Get("CardBaseInfo", cardIdList[i])
        if not cardCfg or cardCfg.IsDynamic == 0 then
            Debug.LogErrorFormat("轮播不支持播放非动卡：%s", tostring(cardIdList[i]))
            return
        end
        local cardDynamicCfg = LuaCfgMgr.Get("CardDynamic", cardIdList[i], 1)
        if not cardDynamicCfg then
            Debug.LogErrorFormat("动卡未配置Stage1：%s", tostring(cardIdList[i]))
            return
        end
        if cardDynamicCfg.CarouselDuration <= 0 then
            Debug.LogErrorFormat("动卡轮播时长未设置：%s", tostring(cardIdList[i]))
            return
        end
    end
    self:Stop()
    self:ResetCtrl()
    self.isDCPlaying = true
    self.cardIdList = cardIdList
    self.playerIns = self.multiPlayerIns
    self.playerIns:Play(cardIdList, fadeEffect)
end

---停止播放
function DynamicCardCtrl:Stop()
    Debug.LogFormatWithTag(GameConst.LogTag.DynamicCard, "DynamicCardCtrl:Stop(). CardId：%s", tostring(self.cardId))
    if self.playerIns then
        self.playerIns:Stop()
    end
    self.playerIns = nil
    self.isDCPlaying = false
    self:SetStaticCardVisible(false)
end

---暂停播放
function DynamicCardCtrl:Pause()
    if self.playerIns then
        self.playerIns:Pause()
    end
end

---恢复播放
function DynamicCardCtrl:Resume()
    if self.playerIns then
        self.playerIns:Resume()
    end
end

---下载开关
function DynamicCardCtrl:SetDownloadEnable(enable)
    self.downloadEnable = enable
end

---初始化下载状态
function DynamicCardCtrl:RefreshDownloadBtn(cardId)
    if not self.downloadEnable then
        self.downloadCtrl:SetDownloadData(nil, nil)
        return
    end
    local subPackageType, subPackageId = BllMgr.GetCardBLL():GetCardLinkSubPack(cardId)
    if subPackageType == nil then
        self.downloadCtrl:SetDownloadData(nil, nil)
        return
    end
    local havSubPackage = SubPackageUtil.IsHaveSubPackage(subPackageType, Define.SupPackageSubType.DEFAULT, subPackageId)
    if havSubPackage then
        EventMgr.Dispatch("DynamicCardDownloadFinish")
        self.downloadCtrl:SetDownloadData(nil, nil)
        return
    end
    ---分包零散下载
    self.downloadCtrl:SetDownloadData(subPackageType, subPackageId)
end

---判断3D卡是否正在播放
function DynamicCardCtrl:Is3DPlaying()
    if self.playerIns then
        return self.playerIns:Is3DPlaying()
    end
    return false
end

---是否有任何动画在播放
function DynamicCardCtrl:IsAnyMotionRunning()
    if ThreeStageMotionMgr.IsMotionRunning(self.sc2DCMotionKey) then
        return true
    end
    if self.activeBlockEffect and ThreeStageMotionMgr.IsMotionRunning(self.activeBlockEffect) then
        return true
    end
    if self.playerIns and self.playerIns:IsAnyMotionRunning() then
        return true
    end
    return false
end

---设置静卡可见状态
function DynamicCardCtrl:SetStaticCardVisible(visible)
    self:SetAlpha("OCX_StaticCard", visible and 1 or 0)
    self:SetAlpha("OCX_img_StaticCard", visible and 1 or 0)
end

function DynamicCardCtrl:Update(deltaTime)
    if self.playerIns then
        self.playerIns:Update(deltaTime)
    end
end

---显示静态卡切动态卡的三段式动效
function DynamicCardCtrl:SC2DCFadeEffectIn(onComplete)
    self:SetStaticCardVisible(true)
    if self.staticCardAnimEnable then
        self:SetActive("OCX_img_Fade", true)
        ThreeStageMotionMgr.PlayMotionIn(self.sc2DCMotionKey, self:GetComponent("OCX_StaticCard"), onComplete)
    else
        self:SetActive("OCX_img_Fade", false)
        if onComplete then
            onComplete()
        end
    end
end

---移除静态卡切动态卡的三段式动效
function DynamicCardCtrl:SC2DCFadeEffectOut(onOutStart, onOutComplete)
    if self.staticCardAnimEnable then
        ThreeStageMotionMgr.PlayMotionOut(self.sc2DCMotionKey, onOutStart, function()
            self:SetStaticCardVisible(false)
            if onOutComplete then
                onOutComplete()
            end
        end)
    else
        self:SetStaticCardVisible(false)
        if onOutStart then
            onOutStart()
        end
        if onOutComplete then
            onOutComplete()
        end
    end
end

---显示遮挡式三段式动效
function DynamicCardCtrl:BlockFadeEffectIn(effectName, onComplete)
    if string.isnilorempty(effectName) then
        if onComplete then
            onComplete()
        end
        return
    end
    local blockEffectKey = tostring(self.id) .. effectName
    self:StopBlockFadeEffect()
    ThreeStageMotionMgr.PlayMotionInByRes(blockEffectKey, effectName, self.blockMotionRoot, onComplete)
    self.activeBlockEffect = blockEffectKey
end

---移除遮挡式三段式动效
function DynamicCardCtrl:BlockFadeEffectOut(onOutStart, onOutComplete)
    if nil == self.activeBlockEffect then
        if onOutStart then
            onOutStart()
        end
        if onOutComplete then
            onOutComplete()
        end
        return
    end
    ThreeStageMotionMgr.PlayMotionOut(self.activeBlockEffect, onOutStart, function()
        self:StopBlockFadeEffect()
        if onOutComplete then
            onOutComplete()
        end
    end)
end

function DynamicCardCtrl:StopSC2DCMotion()
    ThreeStageMotionMgr.StopMotion(self.sc2DCMotionKey)
end

function DynamicCardCtrl:StopBlockFadeEffect()
    if self.activeBlockEffect then
        ThreeStageMotionMgr.StopMotion(self.activeBlockEffect)
        self.activeBlockEffect = nil
    end
end

---界面显示
function DynamicCardCtrl:OnShow()
    if self.stopByHide then
        if self.cardId then
            self:PlayCard(self.cardId)
        elseif self.cardIdList then
            self:PlayCardList(self.cardIdList)
        end
    end
end

---界面隐藏
function DynamicCardCtrl:OnHide()
    if self.playerIns and self.playerIns:IsRunning() then
        self:Stop()
        self.stopByHide = true
    end
end

---界面focus
function DynamicCardCtrl:OnFocus(...)

end

---界面blur
function DynamicCardCtrl:OnBlur(...)

end

---销毁
function DynamicCardCtrl:OnDestroy()
    Debug.LogFormatWithTag(GameConst.LogTag.DynamicCard, "DynamicCardCtrl:OnDestroy(). CardId：%s", tostring(self.cardId))
    self.onlyShowStaticCard = nil
    self:Stop()
    self.singlePlayerIns:Destroy()
    self.singlePlayerIns = nil
    self.multiPlayerIns:Destroy()
    self.multiPlayerIns = nil
    self.stopByHide = nil
    self.downloadEnable = nil
    self.downloadCtrl = nil
    DynamicCardMgr.RemoveCtrl(self.id)
end

return DynamicCardCtrl