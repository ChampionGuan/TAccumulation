---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by canghai.
--- DateTime: 2023/8/19 14:38
---

---记录X3Data的关联关系
---@class X3DataAssociationGraph
local X3DataAssociationGraph = {}

---@type table<X3Data.X3DataBase, X3DataAssociationGraph.Node>
X3DataAssociationGraph.NodeDic = {}

---@class X3DataAssociationGraph.Node
---@field data X3Data.X3DataBase
---@field edgeDic table<X3DataAssociationGraph.Node, X3DataAssociationGraph.Edge[]> --关联node(key)与关联edge数组(value) 该数组应该是共享的

---@class X3DataAssociationGraph.Edge
---@field parentNode X3DataAssociationGraph.Node
---@field childNode X3DataAssociationGraph.Node
---@field associateField number 关联的字段（该字段是属于parent的）

---建立关联
---@param parent X3Data.X3DataBase
---@param child X3Data.X3DataBase
---@param field number
function X3DataAssociationGraph:MakeAssociation(parent, child, field)
    local parentNode = self:GetOrCreateNode(parent)
    local childNode = self:GetOrCreateNode(child)
    self:GetOrCreateEdge(parentNode, childNode, field)
end

---解除关联
---@param parent X3Data.X3DataBase
---@param child X3Data.X3DataBase
---@param field number
function X3DataAssociationGraph:BreakAssociation(parent, child, field)
    local parentNode = self:GetOrCreateNode(parent)
    local childNode = self:GetOrCreateNode(child)
    self:ReleaseEdge(parentNode, childNode, field)
end

---查询给定X3Data所有的与父节点的关联关系
---@param data X3Data.X3DataBase
---@param result X3DataAssociationGraph.Edge[]
function X3DataAssociationGraph:GetParentNodeEdges(data, result)
    if result == nil then
        return
    end
    
    ---@type table<X3DataAssociationGraph.Node, X3DataAssociationGraph.Edge>
    local dicResult = PoolUtil.GetTable()
    local node = self.NodeDic[data]
    if node then
        for _, edgeArray in pairs(node.edgeDic) do
            for _, edge in ipairs(edgeArray) do
                if edge.childNode == node then
                    dicResult[edge.parentNode] = edge
                    break
                end
            end
        end
    end
    
    --将dicResult中的数据转移到result中(已经去重)
    for _, parentEdge in pairs(dicResult) do
        table.insert(result, parentEdge)
    end
    
    PoolUtil.ReleaseTable(dicResult)
    return result
end

---@param data X3Data.X3DataBase
---@return X3DataAssociationGraph.Node
function X3DataAssociationGraph:GetOrCreateNode(data)
    local node = self.NodeDic[data]
    if not node then
        node = PoolUtil.GetTable()
        node.edgeDic = PoolUtil.GetTable()
        node.data = data
        self.NodeDic[data] = node
    end
    
    return node
end

---根据关联字段获取关联的节点
---@param parentNode X3DataAssociationGraph.Node
---@param childNode X3DataAssociationGraph.Node
---@param field number
function X3DataAssociationGraph:GetOrCreateEdge(parentNode, childNode, field)
    --创建 Parent 和 Child 的 EdgeArray
    local edges = parentNode.edgeDic[childNode]
    if not edges then
        edges = PoolUtil.GetTable()
        parentNode.edgeDic[childNode] = edges
        childNode.edgeDic[parentNode] = edges
    end

    for _, edge in ipairs(edges) do
        if edge.associateField == field then
            return edge
        end
    end
    
    ---@type X3DataAssociationGraph.Edge
    local edge = PoolUtil.GetTable()
    edge.parentNode = parentNode
    edge.childNode = childNode
    edge.associateField = field
    table.insert(edges, edge)
    return edge
end

---根据关联字段解除关联
---@param parentNode X3DataAssociationGraph.Node
---@param childNode X3DataAssociationGraph.Node
---@param field number
function X3DataAssociationGraph:ReleaseEdge(parentNode, childNode, field)
    local edgeArray = parentNode.edgeDic[childNode]
    if edgeArray ~= nil then
        ---@param edge X3DataAssociationGraph.Edge
        for i = 1, #edgeArray do
            if edgeArray[i].associateField == field then
                local removedEdge = table.remove(edgeArray, i)
                PoolUtil.ReleaseTable(removedEdge)
                break
            end
        end

        if table.isnilorempty(edgeArray) then
            --解除关联
            parentNode.edgeDic[childNode] = nil
            childNode.edgeDic[parentNode] = nil
            PoolUtil.ReleaseTable(edgeArray)
        end
    end
end

---@private
---释放节点以及节点与其他节点的关联关系
---@param data X3Data.X3DataBase
function X3DataAssociationGraph:ReleaseNode(data)
    local node = self.NodeDic[data]
    if node ~= nil then
        if node.edgeDic ~= nil then
            ---@param relativeNode X3DataAssociationGraph.Node
            for relativeNode, edgeArray in pairs(node.edgeDic) do
                --断开关联
                relativeNode.edgeDic[node] = nil
                --释放edgeArray
                for _, edge in ipairs(edgeArray) do
                    PoolUtil.ReleaseTable(edge)
                end
                PoolUtil.ReleaseTable(edgeArray)
            end

            PoolUtil.ReleaseTable(node.edgeDic)
        end

        self.NodeDic[data] = nil
        PoolUtil.ReleaseTable(node)
    end
end

function X3DataAssociationGraph:Clear()
    self.NodeDic = {}
end

return X3DataAssociationGraph