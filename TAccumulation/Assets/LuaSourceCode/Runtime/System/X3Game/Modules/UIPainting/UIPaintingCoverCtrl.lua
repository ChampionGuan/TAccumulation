---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by liyan.
--- DateTime: 2023/12/12 15:42
---

---@class UIPaintingCoverCtrl:UICtrl
local UIPaintingCoverCtrl = class("UIPaintingCoverCtrl", UICtrl)
local CFG_PATH = "Config.System.FreeMotionData."

function UIPaintingCoverCtrl:Init()
    ---@type FreeMotionData
    self.sdf = nil

    self.records = {}
    self.totalDisSqr = 0
    self.count = 0
    self.isDrawing = false
end

function UIPaintingCoverCtrl:Setup(sdf, refObjRectTransform)
    self.sdf = require(string.concat(CFG_PATH, sdf))

    self.rectTransform = refObjRectTransform or self:GetComponent(nil, "RectTransform")
    self.rectWidth = self.rectTransform.rect.width
    self.rectHeight = self.rectTransform.rect.height

    self.offset = Vector2.new(self.rectWidth * 0.5, self.rectHeight * 0.5)

    self.uiCamera = UIMgr.GetUICamera()

    self:RePaint()
end

function UIPaintingCoverCtrl:GetRMSE()
    if self.count > 0 then
        local mse = self.totalDisSqr / self.count
        local rmse = math.sqrt(mse);
        return rmse
    end
    return nil
end

function UIPaintingCoverCtrl:GetFilledRate()
    if self.sdf.filledRegionCount and self.sdf.filledRegionCount > 0 and not table.isnilorempty(self.records) then
        local filledRate = table.nums(self.records) / self.sdf.filledRegionCount
        return filledRate
    end
    return nil
end

function UIPaintingCoverCtrl:BeginPaint()
    if not self.isDrawing then
        self.isDrawing = true
    end
end

function UIPaintingCoverCtrl:EndPaint()
    if self.isDrawing then
        self.isDrawing = false
    end
end

function UIPaintingCoverCtrl:RePaint()
    table.clear(self.records)
    self.totalDisSqr = 0
    self.count = 0
end

function UIPaintingCoverCtrl:Painting(pos, deltaPos)
    if self.isDrawing then
        local _, localPos = RectTransformUtil.GetLocalPosFromScreenPos(self.rectTransform, pos)
        localPos = localPos + self.offset
        localPos.x = math.clamp(localPos.x, 0, self.rectWidth - 1)
        localPos.y = math.clamp(localPos.y, 0, self.rectHeight - 1)
        local u = localPos.x / self.rectWidth;
        local v = localPos.y / self.rectHeight;

        if self.sdf.sdfData then
            local dis = self.sdf:GetDistanceData(u, v, 0, 0) * self.rectHeight -- GetDistanceData 得到的是归一化的距离
            if dis < 0 then
                self.totalDisSqr = self.totalDisSqr +  dis * dis
            end
        end

        self:_CheckCover(u, v, 0, 0)
        self:_CheckCover(u, v, 1, 0)
        self:_CheckCover(u, v, 0, 1)
        self:_CheckCover(u, v, -1, 0)
        self:_CheckCover(u, v, 0, -1)
        self:_CheckCover(u, v, 1, 1)
        self:_CheckCover(u, v, -1, -1)
        self:_CheckCover(u, v, 1, -1)
        self:_CheckCover(u, v, -1, 1)

        self.count = self.count + 1
    end
end

function UIPaintingCoverCtrl:_CheckCover(u, v, offsetX, offsetY)
    if self.sdf.filledRegion then
        local filledState = self.sdf:GetFilledData(u, v, offsetX, offsetY)
        if filledState and filledState > 0 then
            local filledStateIndex = self.sdf:GetFilledDataIndex(u, v, offsetX, offsetY)
            if not self.records[filledStateIndex] then
                self.records[filledStateIndex] = true
            end
        end
    end
end

return UIPaintingCoverCtrl