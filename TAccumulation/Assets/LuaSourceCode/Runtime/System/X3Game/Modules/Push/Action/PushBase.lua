---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by zhanbo.
--- DateTime: 2022/6/16 16:43
---
---@class PushBase
local PushBase = class("PushBase")

function PushBase:IsCanPush()
    return true
end

function PushBase:Register()

end

---@param pushType int
---@param nextTimeStamp number
function PushBase:AddOnce(pushType, nextTimeStamp)
    local timeStamp = self:GetLocalTimeStamp(nextTimeStamp)
    if not timeStamp then
        return
    end
    ---获取推送主题
    local pushId = SelfProxyFactory.GetSystemSettingProxy():GetPushTheme()
    ---@type number
    local timeInterval = timeStamp - os.time()
    ---@type _date
    ---local time = self:GetDateByTimestamp(timeStamp)
    ---Debug.Log("[推送] 类型AddOnce: ", pushType, " 时间(时分秒): ", time.hour, ":", time.min, ":", time.sec, " 剩余时间倒计时(秒) : ", timeInterval)
    ---@type cfg.SystemPushDetail
    local cfg_SystemPushDetail = LuaCfgMgr.Get("SystemPushDetail", pushId, pushType)
    if table.isnilorempty(cfg_SystemPushDetail) then Debug.LogError("SystemPushDetail Cfg not found, idType : " .. table.dump({pushId, pushType})) return end
    local iconName = CS.X3Game.Platform.PFChangeAppIconUtility.GetCurrentIconName()
    if iconName == nil or iconName == "default" then
        iconName = ""
    end
    iconName = string.lower(iconName)
    SDKMgr.RegisterNotification(UITextHelper.GetUIText(cfg_SystemPushDetail.Title), "", UITextHelper.GetUIText(cfg_SystemPushDetail.Content), timeInterval, "", "", iconName,function(result)
        ---result.ret=0 成功  result.requestId    通知id    string
        if result and result.ret == 0 then
            return
        end
        ---Debug.Log("[推送]数据注册失败: ", result and result.ret, " msg: ", result and result.msg)
    end)
end

---@param pushType int
---@param nextTimeStamp number
function PushBase:Add(pushType, nextTimeStamp)
    local timeStamp = self:GetLocalTimeStamp(nextTimeStamp)
    if not timeStamp then
        return
    end
    ---@type _date
    local time = TimerMgr.GetDateByUnixTimestamp(timeStamp)
    ---获取推送主题
    local pushId = SelfProxyFactory.GetSystemSettingProxy():GetPushTheme()
    ---@type DateComponents
    local dateTime = PoolUtil.GetTable()
    dateTime.hour = time.hour
    dateTime.minute = time.min
    dateTime.second = time.sec
    ---Debug.Log("[推送] 类型Add: ", pushType, " 时间(时分秒): ", dateTime.hour, ":", dateTime.minute, ":", dateTime.second)
    ---@type cfg.SystemPushDetail
    local cfg_SystemPushDetail = LuaCfgMgr.Get("SystemPushDetail", pushId, pushType)
    if table.isnilorempty(cfg_SystemPushDetail) then Debug.LogError("SystemPushDetail Cfg not found, idType : " .. table.dump({pushId, pushType})) return end
    local iconName = CS.X3Game.Platform.PFChangeAppIconUtility.GetCurrentIconName()
    if iconName == nil or iconName == "default" then
        iconName = ""
    end
    iconName = string.lower(iconName)
    SDKMgr.RegisterNotification(UITextHelper.GetUIText(cfg_SystemPushDetail.Title), "", UITextHelper.GetUIText(cfg_SystemPushDetail.Content), -1, dateTime, "", iconName,function(result)
        ---result.ret=0 成功  result.requestId    通知id    string
        if result and result.ret == 0 then
            return
        end
        ---Debug.Log("[推送]数据注册失败: ", result and result.ret, " msg: ", result and result.msg)
    end)
    PoolUtil.ReleaseTable(dateTime)
end

---@param nextServerTimeStamp
---@return number
function PushBase:GetLocalTimeStamp(nextServerTimeStamp)
    local localTimeStamp = os.time()
    local serverTimeStamp = TimerMgr.GetCurTimeSeconds()
    local nextLocalTimeStamp = localTimeStamp + (nextServerTimeStamp - serverTimeStamp)
    if not self:IsTimeStampSafe(nextLocalTimeStamp) then
        return nil
    end
    return nextLocalTimeStamp
end

---确认时间是否是合法的时间(韩服夜间是不可以推送的)
function PushBase:IsTimeStampSafe(nextLocalTimeStamp)
    ---检查是否是韩服: 没开启夜间推送,同时推送时间在夜间
    if Locale.GetRegion() == Locale.Region.SouthKorea then
        ---Debug.Log("SouthKorea")
        ---没有开启夜间推送
        if BllMgr.GetSystemSettingBLL():GetSettingData(X3_CFG_CONST.SYSTEM_SETTING_TYPE_POST_NIGHTPUSH) ~= 0 then
            ---Debug.Log("关闭开关")
            ---@type _date
            local pushTime = self:GetDateByTimestamp(nextLocalTimeStamp)
            ---统设置-韩服夜间推送开启时间21点~0点时间段闭区间
            ---系统设置-韩服夜间推送开启时间0点~次日8点时间段闭区间
            local nightFirst = LuaCfgMgr.Get("SundryConfig", X3_CFG_CONST.SYSTEMSETTINGPUSHINNIGHTFIRST)
            local nightFirsts = string.split(nightFirst, "|")
            local nightFirstMin = self:GetDateByStr(nightFirsts[1])
            local nightFirstMax = self:GetDateByStr(nightFirsts[2])
            ---Debug.Log("pushTime: ", pushTime.hour, ":", pushTime.min, ":", pushTime.sec)
            ---Debug.Log("nightFirstMin", nightFirstMin.hour, ":", nightFirstMin.min, ":", nightFirstMin.sec)
            ---Debug.Log("nightFirstMax", nightFirstMax.hour, ":", nightFirstMax.min, ":", nightFirstMax.sec)
            if self:IsTimeInRange(pushTime, nightFirstMin, nightFirstMax) then
                ---Debug.Log("在上半夜的时间段内")
                return false
            end
            local nightLast = LuaCfgMgr.Get("SundryConfig", X3_CFG_CONST.SYSTEMSETTINGPUSHINNIGHTEND)
            local nightLasts = string.split(nightLast, "|")
            local nightLastMin = self:GetDateByStr(nightLasts[1])
            local nightLastMax = self:GetDateByStr(nightLasts[2])
            ---Debug.Log("nightLastMin", nightLastMin.hour, ":", nightLastMin.min, ":", nightLastMin.sec)
            ---Debug.Log("nightLastMax", nightLastMax.hour, ":", nightLastMax.min, ":", nightLastMax.sec)
            if self:IsTimeInRange(pushTime, nightLastMin, nightLastMax) then
                ---Debug.Log("在下半夜的时间段内")
                return false
            end
        end
    end
    ---Debug.Log("IsTimeStampSafe true")
    return true
end

---@param date _date
---@param dateMin _date
---@param dateMax _date
function PushBase:IsTimeInRange(date, dateMin, dateMax)
    local seconds = self:GetSecondsByHMS(date)
    local secondsMin = self:GetSecondsByHMS(dateMin)
    local secondsMax = self:GetSecondsByHMS(dateMax)
    if seconds >= secondsMin and seconds <= secondsMax then
        return true
    end
    return false
end

---根据配置表获取日期
---@param time_str string 格式配置 "05:00:00"
---@return _date
function PushBase:GetDateByStr(time_str)
    if string.isnilorempty(time_str) then
        Debug.LogError("PushBase:GetDateByStr time_str is nil")
        return
    end
    ---@type _date
    local date = {}
    local sp = string.split(time_str, ":")
    if sp and (#sp >= 3) then
        date.hour = tonumber(sp[1])
        date.min = tonumber(sp[2])
        date.sec = tonumber(sp[3])
    end
    return date
end

---@param data _date
function PushBase:GetSecondsByHMS(data)
    local time = data.hour * 60 * 60
    time = time + data.min * 60
    time = time + data.sec
    return time
end

---根据本地时区时间戳转换成本地所在时区日期
---@param timestamp number
---@return _date
function PushBase:GetDateByTimestamp(timestamp)
    return os.date("*t", math.max(math.floor(timestamp), 0))
end

return PushBase