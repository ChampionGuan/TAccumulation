---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by zhanbo.
--- DateTime: 2022/6/16 16:54
---
---@class PushMgr
local PushMgr = {}
---@type bool
local m_IsInit = false
---@type PushBase[]
local m_PushList = {}

---移除推送数据
function PushMgr.RemoveAll()
    SDKMgr.RemoveAllNotification(function(result)
        ---result.ret=0 成功
        if result and result.ret == 0 then
            return
        end
        ---Debug.Log("[推送]数据移除失败: ", result and result.ret, "  msg: ", result and result.msg)
    end)
end

---设置推送数据
function PushMgr.Refresh()
    ---移除推送数据
    PushMgr.RemoveAll()
    ---注册推送
    for i = 1, #m_PushList do
        local push = m_PushList[i]
        if push:IsCanPush() then
            push:Register()
        end
    end
end

function PushMgr.AddListener()
    ---注册监听
    EventMgr.AddListener("Game_Focus", PushMgr.OnGameFocus, PushMgr)
    EventMgr.AddListener("Game_Quit", PushMgr.OnGameQuit, PushMgr)
end

---注册消息监听
function PushMgr.Init()
    if UNITY_EDITOR then
        return
    end
    if m_IsInit then
        return
    end
    m_IsInit = true
    ---进入游戏设置推送相关数据
    PushMgr.AddListener()
    ---创建数据
    table.clear(m_PushList)
    ---推送模块-体力回满，0：开启；1：关闭；默认开启
    table.insert(m_PushList, require("Runtime.System.X3Game.Modules.Push.Action.PushStaminaMax"))
    ---推送模块-领取体力补给，0：开启；1：关闭；默认开启
    table.insert(m_PushList, require("Runtime.System.X3Game.Modules.Push.Action.PushStaminaGift"))
    ---推送模块-挂机领奖推送，0：开启；1：关闭；默认开启
    table.insert(m_PushList, require("Runtime.System.X3Game.Modules.Push.Action.PushExplore"))
    ---推送模块-玩家生日活动， 0：开启；1：关闭；默认开启
    table.insert(m_PushList, require("Runtime.System.X3Game.Modules.Push.Action.PushPlayerBirthday"))
end

function PushMgr.Clear()
    m_IsInit = false
    EventMgr.RemoveListener("Game_Focus", PushMgr.OnGameFocus, PushMgr)
    EventMgr.RemoveListener("Game_Quit", PushMgr.OnGameQuit, PushMgr)
    table.clear(m_PushList)
end

function PushMgr.Destroy()
    PushMgr.Clear()
end

function PushMgr:OnGameFocus(isFocus)
    if UNITY_EDITOR then
        return
    end
    PushMgr.Init()
    if isFocus then
        PushMgr.RemoveAll()
    else
        PushMgr.Refresh()
    end
end

function PushMgr:OnGameQuit()
    if UNITY_EDITOR then
        return
    end
    PushMgr.Init()
    PushMgr.Refresh()
end

return PushMgr