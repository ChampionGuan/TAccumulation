---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by zhanbo.
--- DateTime: 2022/11/9 15:20
---
---@class DBMgr
local DBMgr = {}
local dbCtrlMap = {}
local dbIndexCtrlMap = {}
---@type int
local playerUid = 0
---@type string
local dbFormatPath = string.concat(CS.UnityEngine.Application.persistentDataPath, "/deep_space_proj_%s.nxd")
local dbHelperMap = {}

---@type DBHelper
local DBHelper = require("Runtime.Common.DBHelper")

---获取或者创建表(存储多列数据:条件查询获取数据)
---@param tableName string
---@return DBCtrl
function DBMgr.GetOrCreateCtrl(tableName, defaultValue)
    if string.isnilorempty(tableName) then
        return
    end
    local ctrl = DBMgr._GetCtrl(tableName)
    if not ctrl:ExistTable() then
        ctrl:_CreateTable(tableName, { [1] = defaultValue or {} })
    end
    return ctrl
end

---获取或者创建表(存储单列数据:表格内容是Key-Value形式: Key是number Value是table)
---@param tableName string
---@return DBIndexCtrl
function DBMgr.GetOrCreateIndexCtrl(tableName)
    if string.isnilorempty(tableName) then
        return
    end
    local ctrl = DBMgr._GetIndexCtrl(tableName)
    if not ctrl:ExistTable() then
        ctrl:_CreateTable(tableName, { [1] = { value = "" } })
    end
    return ctrl
end

---@param uid int
function DBMgr.Init(uid)
    playerUid = uid
end

---释放表操作控制类
---@param tableName
function DBMgr.ReleaseCtrl(tableName)
    if string.isnilorempty(tableName) then
        return
    end
    local ctrl = dbCtrlMap[tableName]
    if ctrl then
        dbCtrlMap[tableName] = nil
    end
end

---释放表操作控制类
---@param tableName
function DBMgr.ReleaseIndexCtrl(tableName)
    if string.isnilorempty(tableName) then
        return
    end
    local ctrl = dbIndexCtrlMap[tableName]
    if ctrl then
        dbIndexCtrlMap[tableName] = nil
    end
end

---表格是否存在
---@param tableName string
---@return bool
function DBMgr.ExistTable(tableName)
    if string.isnilorempty(tableName) then
        return false
    end
    
    local ctrl = DBMgr._GetCtrl(tableName)
    if ctrl:ExistTable() then
        return true
    end
    
    DBMgr.ReleaseCtrl(tableName)
    ctrl = DBMgr._GetIndexCtrl(tableName)
    if ctrl:ExistTable() then
        return true
    end
    
    --没找到数据就释放掉Ctrl
    DBMgr.ReleaseIndexCtrl(tableName)
    return false
end

---删除表
---@param tableName string
function DBMgr.Delete(tableName)
    if string.isnilorempty(tableName) then
        return
    end
    local ctrl = DBMgr._GetCtrl(tableName)
    if ctrl:ExistTable() then
        ctrl:DeleteTable()
        return
    end
    ctrl = DBMgr._GetIndexCtrl(tableName)
    if ctrl:ExistTable() then
        ctrl:DeleteTable()
    end
end

---清空表格数据(注意表格仍然存在)
---@param tableName string
function DBMgr.ClearTable(tableName)
    if string.isnilorempty(tableName) then
        return
    end
    local ctrl = DBMgr._GetCtrl(tableName)
    if ctrl:ExistTable() then
        ctrl:ClearTable()
        return
    end
    ctrl = DBMgr._GetIndexCtrl(tableName)
    if ctrl:ExistTable() then
        ctrl:ClearTable()
    end
end

---添加一行数据
---@param tableName string
---@param data table
function DBMgr.Add(tableName, data)
    if string.isnilorempty(tableName) or (not data) then
        return
    end
    local ctrl = DBMgr._GetCtrl(tableName)
    ctrl:Add(data)
end

---添加多行数据
---@param tableName string
---@param dataList table[]
function DBMgr.AddValues(tableName, dataList)
    if string.isnilorempty(tableName) or (not dataList) then
        return
    end
    local ctrl = DBMgr._GetCtrl(tableName)
    ctrl:AddValues(dataList)
end

---删除一行或者多行数据
---@param tableName string
---@param condition table
function DBMgr.DeleteByCondition(tableName, condition)
    if string.isnilorempty(tableName) or (not condition) then
        return
    end
    local ctrl = DBMgr._GetCtrl(tableName)
    ctrl:DeleteByCondition(condition)
end

---更新一行数据
---@param tableName string
---@param data table
---@param condition table
function DBMgr.UpdateByCondition(tableName, data, condition)
    if string.isnilorempty(tableName) or (not data) then
        return
    end
    local ctrl = DBMgr._GetCtrl(tableName)
    ctrl:UpdateByCondition(data, condition)
end

---添加或者更新一行数据
---@param tableName string
---@param data table
---@param condition table
function DBMgr.AddOrUpdateByCondition(tableName, data, condition)
    if string.isnilorempty(tableName) or (not data) then
        return
    end
    local ctrl = DBMgr._GetCtrl(tableName)
    ctrl:AddOrUpdateByCondition(data, condition)
end

---获取所有数据
---@param tableName string
function DBMgr.GetAll(tableName)
    if string.isnilorempty(tableName) then
        return
    end
    local ctrl = DBMgr._GetCtrl(tableName)
    ctrl:GetAll()
end

---通过条件获取数据列表
---@param tableName string
---@param condition table
---@return table[]|nil 字典Map
function DBMgr.GetByCondition(tableName, condition)
    if string.isnilorempty(tableName) then
        return
    end
    local ctrl = DBMgr._GetCtrl(tableName)
    ctrl:GetByCondition(condition)
end

---@param dbPath string
---@return DBHelper
function DBMgr.GetHelper(dbPath)
    if not dbHelperMap[dbPath] then
        dbHelperMap[dbPath] = DBHelper.new(dbPath)
    end
    return dbHelperMap[dbPath]
end

function DBMgr.Clear()
    for _, v in pairs(dbHelperMap) do
        v:Close()
    end
    table.clear(dbHelperMap)
    table.clear(dbCtrlMap)
    table.clear(dbIndexCtrlMap)
    playerUid = 0
end

---@private
---@return string
function DBMgr.GetDBPath()
    return string.format(dbFormatPath, playerUid)
end

---执行Sql语句
---@param sql string
---@param tableName string 传入需要操作的表名
function DBMgr._ExeSql(sql, tableName)
    if string.isnilorempty(sql) then
        return
    end
    if string.isnilorempty(tableName) then
        return
    end
    local ctrl = DBMgr._GetCtrl(tableName)
    ctrl:_ExeSql(sql)
end

---@private
---获取针对表操作的控制类
---@param tableName string 表名
---@return DBCtrl
function DBMgr._GetCtrl(tableName)
    if string.isnilorempty(tableName) then
        return
    end
    if not dbCtrlMap[tableName] then
        ---@type DBCtrl
        local dbCtrl = require("Runtime.System.X3Game.Modules.DB.DBCtrl").new()
        ---根据玩家Uid创建独立的db文件
        dbCtrl:SetDBHelper(DBMgr.GetHelper(DBMgr.GetDBPath()))
        dbCtrl:SetTableName(tableName)
        dbCtrlMap[tableName] = dbCtrl
    end
    return dbCtrlMap[tableName]
end

---@private
---获取针对表操作的控制类(Key-Value)
---@param tableName string 表名
---@return DBIndexCtrl
function DBMgr._GetIndexCtrl(tableName)
    if string.isnilorempty(tableName) then
        return
    end
    if not dbIndexCtrlMap[tableName] then
        ---@type DBIndexCtrl
        local dbCtrl = require("Runtime.System.X3Game.Modules.DB.DBIndexCtrl").new()
        ---根据玩家Uid创建独立的db文件
        dbCtrl:SetDBHelper(DBMgr.GetHelper(DBMgr.GetDBPath()))
        dbCtrl:SetTableName(tableName)
        dbIndexCtrlMap[tableName] = dbCtrl
    end
    return dbIndexCtrlMap[tableName]
end

--key-value使用示例
--local ctrl = DBMgr.GetOrCreateIndexCtrl("gemData")
--ctrl:Add(999, { aaa = { { aa = 5 }, { aa = 6 } }, bbb = 8 })
--ctrl:ClearTable()
--Debug.LogError(ctrl:ExistTable())
--ctrl:Add(555, { aaa = { { aa = 5 }, { aa = 6 } }, bbb = 8 })
--ctrl:Add(4, { aaa = 1, bbb = 2 })
--local aa = ctrl:Get(4)
--ctrl:AddOrUpdate(4, { aaa = 6 })
--ctrl:FillValues({ {[88]=88}, {[99] = 99}, {[1010] = 1010} })
--local aa = ctrl:Get(4)
--local a = ctrl:GetAll()
--for i, v in pairs(a) do
--    Debug.LogError("v.aaa = ",v.aaa)
--end
return DBMgr