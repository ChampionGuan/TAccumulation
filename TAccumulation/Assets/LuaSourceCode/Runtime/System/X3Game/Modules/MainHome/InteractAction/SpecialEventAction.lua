---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by jiaozhu.
--- DateTime: 2022/3/5 20:26
--- 特殊事件
---@type MainHome.MainHomeConst
local MainHomeConst = require("Runtime.System.X3Game.Modules.MainHome.Data.MainHomeConst")
---@type MainHome.BaseInteractAction
local BaseAction = require(MainHomeConst.BASE_INTERACT_ACTION)
---@class MainHome.SpecialEvent:MainHome.BaseInteractAction
local SpecialEvent = class("SpecialEvent", BaseAction)

function SpecialEvent:ctor()
    BaseAction.ctor(self)
    self.isFirstEnterGame = true
    self.eventId = 0
    self.tipsType = nil
    self.internalBegin = nil
end

function SpecialEvent:Begin()
    self:SetWaiting(false)
    if  self.tipsType and self.internalBegin  then
        self:SetWaiting(true)
        ErrandMgr.AddWithCallBack(self.tipsType,self.internalBegin)
    else
        self:InternalBegin()
    end
end

function SpecialEvent:End()
    BaseAction.End(self)
    self:SetWaiting(false)
    self:SetWndActive(true)
    self:ClearTips()
    if self:GetEndType()== MainHomeConst.ActionClearType.Exit then
        if self.eventId~=self:GetServerEventId() then
            self:OnEventCheck()
        end
    end
end

function SpecialEvent:InternalBegin()
    if self:IsAIRunning() or self:IsRunning() then
        BaseAction.Begin(self)
        local dialogueId = self:GetDialogueId()
        local data = self.bll:GetData()
        local seed = data:GetDialogueSeed()
        EventMgr.Dispatch(MainHomeConst.Event.MAIN_HOME_CHANGE_DIALOGUE_SEED,dialogueId,seed)
        EventMgr.Dispatch(MainHomeConst.Event.MAIN_HOME_CLEAR_DIALOGUE_NODE_LIST)
        self:PlayDialogue()
        self:SetWndActive(false)
    else
        self:End()
        self:OnEventCheck()
    end
end

function SpecialEvent:OnDialogueEnd(dialogueId, conversion, pipelineKey)
    if self:GetEndType()== MainHomeConst.ActionClearType.Exit then
        local eventId = self:GetServerEventId()
        if eventId~=0 and eventId == self.eventId then
            EventMgr.Dispatch(MainHomeConst.Event.MAIN_HOME_AI_SEND_REQUEST,MainHomeConst.NetworkType.EVENT_FINISH,self.eventId,dialogueId,self.bll:GetDialogueCtrl():PopProcessNodes(dialogueId),self:GetId())
        else
            self:End()
        end
    else
        self:End()
    end
end

---是否可以设置主界面显隐
function SpecialEvent:IsCanSetWndActive()
    return self:GetType() == MainHomeConst.ActionType.SpecialEventHideUI
end

function SpecialEvent:SetWndActive(isActive)
    if not self:IsCanSetWndActive() then
        return
    end
    EventMgr.Dispatch(MainHomeConst.Event.MAIN_HOME_SET_WND_ACTIVE,isActive)
end

function SpecialEvent:Enter()
    BaseAction.Enter(self)
    self.tipsType = self:GetType() == MainHomeConst.ActionType.SpecialEventHideUI and X3_CFG_CONST.POPUP_SPECIALTYPE_MAINUI_SPEVENT or nil
    self.internalBegin = self:GetType() == MainHomeConst.ActionType.SpecialEventHideUI and handler(self,self.InternalBegin) or nil
    self:RegisterEvent()
    if self.isFirstEnterGame then
        self:OnEventCheck()
    end
end

function SpecialEvent:ClearTips()
    if self.tipsType then
        ErrandMgr.ClearByType(self.tipsType)
        ErrandMgr.End(self.tipsType)
    end
end

function SpecialEvent:Exit()
    BaseAction.Exit(self)
    self:ClearTips()
    self:UnRegisterEvent()
end

function SpecialEvent:OnEventCheck()
    local serverEventId = self:GetServerEventId()
    if serverEventId~=0  and not self:IsRunning() and not self:IsWaiting() then
        self.eventId = serverEventId
        self:Trigger()
    end
end

function SpecialEvent:IsCanTrigger()
    return true
end

function SpecialEvent:GetServerEventId()
    local data = self.bll:GetData()
    return data:GetEventId()
end

function SpecialEvent:OnEventCheckEnd()
    if self:IsRunning() or self:IsAIRunning() then
        if self:GetServerEventId()~=self.eventId then
            self:End()
        end
    end
end

function SpecialEvent:OnViewFocusChanged(focus)
    if focus then
        if self.bll:IsMainViewFocus() then
            self:OnEventCheck()
        end
    end
end

function SpecialEvent:OnAddListener()
    EventMgr.AddListener(MainHomeConst.Event.MAIN_HOME_CHECK_EVENT,self.OnEventCheck,self)
    EventMgr.AddListener(MainHomeConst.Event.MAIN_HOME_CHECK_EVENT_END,self.OnEventCheckEnd,self)
end

return SpecialEvent