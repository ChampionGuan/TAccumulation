---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by jiaozhu.
--- DateTime: 2022/3/25 0:00
--- 主界面状态刷新检测逻辑
---@type MainHome.MainHomeConst
local MainHomeConst = require("Runtime.System.X3Game.Modules.MainHome.Data.MainHomeConst")
---@type MainHomeBaseCtrl
local BaseCtrl = require(MainHomeConst.BASE_CTRL)
---@class MainHomeStateCheckCtrl:MainHomeBaseCtrl
local MainHomeStateCheckCtrl = class("MainHomeStateCheckCtrl", BaseCtrl)

function MainHomeStateCheckCtrl:ctor()
    BaseCtrl.ctor(self)
    self.time = 9999
    self.isCanCheck = false
    self.isSending = false
    self.maxCheckTime = 3
    self.curTime = self.maxCheckTime
    self.checkDuration = 5
    self.isChecking = false
end

function MainHomeStateCheckCtrl:Exit()
    BaseCtrl.Exit(self)
    self:UnRegisterEvent()
    self.isCanCheck = false
    self.curTime = self.maxCheckTime
end

function MainHomeStateCheckCtrl:Enter()
    BaseCtrl.Enter(self)
    self.curTime = self.maxCheckTime
    self:CheckTimer()
    self:RegisterEvent()
end

function MainHomeStateCheckCtrl:OnUpdate()
    if not self:IsCanCheck() then
        return
    end
    if TimerMgr.GetCurTimeSeconds() >= self.time then
        self:SetCheckTime(0)
        self.isSending = true
        EventMgr.Dispatch(MainHomeConst.Event.MAIN_HOME_AI_SEND_REQUEST, MainHomeConst.NetworkType.MAIN_UI_REFRESH)
    end
end

function MainHomeStateCheckCtrl:CheckTimer()
    local data = self.bll:GetData()
    self:SetCheckTime(math.min(data:GetStateEndTime(), data:GetEventEndTime()))
    if not self:IsCanCheck() then
        self:SetCheckTime(math.max(data:GetStateEndTime(), data:GetEventEndTime()))
    end
end

---是否可以检测
---@return boolean
function MainHomeStateCheckCtrl:IsCanCheck()
    return self.isCanCheck and self.curTime>0
end

---@param time number
function MainHomeStateCheckCtrl:SetCheckTime(time)
    self.time = time
    self.isCanCheck = self.time>0
end

function MainHomeStateCheckCtrl:OnStateChanged()
    self:CheckTimer()
end

---@param isSuccess boolean
function MainHomeStateCheckCtrl:OnStateRefreshReplay(isSuccess)
    if not self.isSending then
        return
    end
    self.isSending = false
    if not isSuccess then
        if self.curTime<=0 then
            self.isChecking = false
            self:CheckTimer()
            return
        end
        ---如果刷新失败，就每隔2秒刷一次
        if not self.isChecking then
            self.isChecking = true
            self.curTime = self.maxCheckTime
        end
        self.curTime = self.curTime -1
        self:SetCheckTime(TimerMgr.GetCurTimeSeconds()+self.checkDuration)
    else
        self.curTime = self.maxCheckTime
    end
end

function MainHomeStateCheckCtrl:RegisterEvent()
    EventMgr.AddListener(MainHomeConst.Event.MAIN_HOME_AI_STATE_CHANGED, self.OnStateChanged, self)
    EventMgr.AddListener(MainHomeConst.Event.MAIN_HOME_STATE_REFRESH_REPLAY, self.OnStateRefreshReplay, self)
end

return MainHomeStateCheckCtrl