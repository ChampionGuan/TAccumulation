---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by jiaozhu.
--- DateTime: 2022/3/5 11:15
---
---@type MainHome.MainHomeConst
local MainHomeConst = require("Runtime.System.X3Game.Modules.MainHome.Data.MainHomeConst")
---@type MainHome.BaseInteractAction
local BaseAction = require(MainHomeConst.BASE_INTERACT_ACTION)
---@class MainHome.ExitStateAction:MainHome.BaseInteractAction
local ExitStateAction = class("ExitStateAction", BaseAction)

function ExitStateAction:Begin()
    BaseAction.Begin(self)
    EventMgr.Dispatch(MainHomeConst.Event.MAIN_HOME_AI_SEND_REQUEST,MainHomeConst.NetworkType.CHECK_INTERACTIVE_ENABLE)
end

function ExitStateAction:End()
    BaseAction.End(self)
    self:CheckMode()
end

function ExitStateAction:Enter()
    BaseAction.Enter(self)
    self:CheckMode()
end

function ExitStateAction:CheckMode()
    self.curMode = self.bll:GetMode()
end

function ExitStateAction:OnModeChanged(mode,isStateChanged)
    if mode == MainHomeConst.ModeType.NORMAL then
        if self.curMode~=mode then
            self:Trigger()
        end
        self:CheckMode()
    else
        self:End()
    end
end

function ExitStateAction:OnEventMainUISetActiveReply()
    local mode = self.bll:GetMode()
    if mode == MainHomeConst.ModeType.NORMAL then
        self:End()
    else
        self:CheckMode()
    end
end

function ExitStateAction:OnAddListener()
    EventMgr.AddListener("MainUISetActiveReply",self.OnEventMainUISetActiveReply,self)
end

return ExitStateAction