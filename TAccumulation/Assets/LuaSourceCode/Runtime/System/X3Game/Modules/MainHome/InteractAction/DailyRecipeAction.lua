---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by doudou.
--- DateTime: 2022/3/16 17:57
---@type MainHome.MainHomeConst
local MainHomeConst = require("Runtime.System.X3Game.Modules.MainHome.Data.MainHomeConst")
---@type MainHome.BaseInteractAction
local BaseAction = require(MainHomeConst.BASE_INTERACT_ACTION)
---@class MainHome.DailyRecipeAction:MainHome.BaseInteractAction
local DailyRecipeAction = class("DailyRecipeAction", BaseAction)

function DailyRecipeAction:Enter()
    BaseAction.Enter(self)
end

function DailyRecipeAction:Exit()
    BaseAction.Exit(self)
end

function DailyRecipeAction:Begin()

    BaseAction.Begin(self)
    self.recommendNum = 0
    self.accept = false

    EventMgr.AddListener("PLAYERTAG_TAG_RANDOM", self.OnTagRandom, self)
    EventMgr.AddListener("PLAYERTAG_TAG_CHOOSE_RESULT", self.OnTagChooseResultBack, self)
    EventMgr.AddListener("PLAYERTAG_FAVORITES_CHANGE", self.OnFavoriteChange, self)
    EventMgr.AddListener("PLAYERTAG_TAG_RANDOM_EXCLUDE", self.OnFavoriteRandomExclude, self)
    EventMgr.AddListener("PLAYERTAG_TAG_RANDOM_EXCLUDE_CLEAR", self.OnFavoriteRandomExcludeClear, self)
    EventMgr.AddListener("DAILYRECIPE_CD_START", self.OnRecipeCDStart, self)
    BllMgr.GetPlayerFavoriteBLL():ResetRandomKey("DailyRecipeFoodName")

    self.enterCD = false
    self:PlayDialogue()
end

function DailyRecipeAction:End()
    if self.enterCD then
        self:SetClearType(MainHomeConst.ActionClearType.ExitBySelf)
    end
    BaseAction.End(self)
end

function DailyRecipeAction:IsCanTrigger()
    local cdTime = SelfProxyFactory.GetMainInteractProxy():GetInteractData():GetCDTimeByType(self:GetId())
    local curTime = TimerMgr.GetCurTimeSeconds()
    if cdTime > curTime then
        UICommonUtil.ShowMessage(UITextConst.UI_TEXT_9249)
        return false
    end

    return true
end

function DailyRecipeAction:OnDialogueEnd(dialogueId, conversion, pipelineKey)
    EventMgr.RemoveListener("PLAYERTAG_TAG_RANDOM", self.OnTagRandom, self)
    EventMgr.RemoveListener("PLAYERTAG_TAG_CHOOSE_RESULT", self.OnTagChooseResultBack, self)
    EventMgr.RemoveListener("PLAYERTAG_FAVORITES_CHANGE", self.OnFavoriteChange, self)
    EventMgr.RemoveListener("PLAYERTAG_TAG_RANDOM_EXCLUDE", self.OnFavoriteRandomExclude, self)
    EventMgr.RemoveListener("PLAYERTAG_TAG_RANDOM_EXCLUDE_CLEAR", self.OnFavoriteRandomExcludeClear, self)
    EventMgr.RemoveListener("DAILYRECIPE_CD_START", self.OnRecipeCDStart, self)

    if self.enterCD then
        self:SetClearType(MainHomeConst.ActionClearType.ExitBySelf)
    end

    if not self.accept and self.recommendNum > 0 then
        BllMgr.GetPlayerFavoriteBLL():SendAcceptRecommendRequest(self:GetActorId(), nil, nil, true)
    end

    BllMgr.GetPlayerFavoriteBLL():ClearRandomFilter()
    self:End()
end

function DailyRecipeAction:StringToIntTable(str)
    local result = {}
    local splitResult = string.split(str, "|")

    if splitResult ~= nil then
        for i = 1, #splitResult do
            table.insert(result, tonumber(splitResult[i]))
        end
    end

    return result
end

function DailyRecipeAction:OnTagRandom(arg)
    if arg.params == nil then
        return
    end

    BllMgr.GetPlayerFavoriteBLL():TagRandom("DailyRecipeFoodName",
            tonumber(arg.params[1]), self:StringToIntTable(arg.params[2]),
            self:StringToIntTable(tonumber(arg.params[3])), tonumber(arg.params[4]), tonumber(arg.params[5]))
end

function DailyRecipeAction:GetTagId(inputId, roleId)
    return BllMgr.GetPlayerFavoriteBLL():GetTagId(inputId, roleId, self.bll:GetDialogueCtrl())
end

function DailyRecipeAction:OnTagChooseResultBack(arg)
    if arg.params == nil then
        return
    end

    local roleId = tonumber(arg.params[4])
    local tagId = self:GetTagId(tonumber(arg.params[2]), roleId)
    local addScores = { [tagId] = tonumber(arg.params[3]) }
    local chooseIds = tonumber(arg.params[5]) == 1 and { tagId } or {}
    local appearIds = { tagId }
    self.recommendNum = self.recommendNum + 1

    if tonumber(arg.params[5]) == 1 then
        self.accept = true
        BllMgr.GetPlayerFavoriteBLL():SendAcceptRecommendRequest(roleId, tagId, self.recommendNum, false)
    end
end

function DailyRecipeAction:OnFavoriteChange(arg)
    if arg.params == nil then
        return
    end

    local roleId = tonumber(arg.params[3])
    local tagId = self:GetTagId(tonumber(arg.params[2]), roleId)
    BllMgr.GetPlayerFavoriteBLL():SendSetPlayerFavoriteRequest(roleId, tonumber(arg.params[1]), tagId)
end

function DailyRecipeAction:OnFavoriteRandomExclude(arg)
    if arg.params == nil then
        return
    end

    local roleId = tonumber(arg.params[2])
    local tagId = self:GetTagId(tonumber(arg.params[1]), roleId)
    BllMgr.GetPlayerFavoriteBLL():AddRandomFilter(roleId, tagId)
end

function DailyRecipeAction:OnFavoriteRandomExcludeClear(arg)
    if arg.params == nil then
        return
    end

    BllMgr.GetPlayerFavoriteBLL():ClearRandomFilter(tonumber(arg.params[1]))
end

function DailyRecipeAction:OnRecipeCDStart(arg)
    if arg.params == nil then
        return
    end
    self.enterCD = true
    BllMgr.GetMainInteractBLL():Send_InterActiveTimeRequest(self.actionId, tonumber(arg.params[1]))
end

return DailyRecipeAction
