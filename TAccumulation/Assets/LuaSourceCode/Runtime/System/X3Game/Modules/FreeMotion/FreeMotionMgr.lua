---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by junjun003.
--- DateTime: 2023/11/6 18:24
---

---@class FreeMotionMgr 自由互动管理器
local FreeMotionMgr = class("FreeMotionMgr")

---@type table<int, fun> FSM播放回调
local callbackDict = nil

---
function FreeMotionMgr.Init()
    callbackDict = {}
    EventMgr.AddListener(Const.Event.ON_FSM_FINISHED, FreeMotionMgr.OnFSMFinished)
end

---从外部启动自由互动
---@param id int 自由互动Id
---@param callback fun 播放完毕的回调
function FreeMotionMgr.Start(id, callback, ...)
    local context = FreeMotionMgr.PackContext(id, ...)
    local freeMotionCfg = LuaCfgMgr.Get("FreeMotion", id)
    local playId = 0
    if freeMotionCfg then
        playId = FSMMgr.StartByName(freeMotionCfg.Name, self, context)
        callbackDict[playId] = callback
    else
        Debug.LogWarningFormat("没有找到自由互动配置-%s", id)
        if callback then
            callback()
        end
    end
    return playId
end

---从关闭自由互动
---@param playId int 自由互动Id
function FreeMotionMgr.Stop(playId)
    if callbackDict[playId] then
        FSMMgr.Stop(playId, true)
        callbackDict[playId] = nil
    end
end

---组装Context信息
---@return context X3GameFSMContext 外部组装好的上下文数据
function FreeMotionMgr.PackContext(id, ...)
    local freeMotionCfg = LuaCfgMgr.Get("FreeMotion", id)
    if freeMotionCfg then
        --TODO 暂时所有Context都是这个
        local context = require("Runtime.System.X3Game.Modules.FSMMaker.Context.FreeMotionFSMContext").new()
        context:SetFreeMotionInfo(...)
        return context
    end
    return nil
end

---FSM结束
---@param id int FSMPlayId
function FreeMotionMgr.OnFSMFinished(id)
    if callbackDict[id] then
        local callback = callbackDict[id]
        callbackDict[id] = nil
        callback()
        FSMMgr.Stop(id, true)
    end
end

---
function FreeMotionMgr.Clear()
    EventMgr.RemoveListener(Const.Event.ON_FSM_FINISHED, FreeMotionMgr.OnFSMFinished)
end

return FreeMotionMgr