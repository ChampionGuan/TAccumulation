---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by canghai.
--- DateTime: 2023/6/15 12:03
---

---@type ItemSubCtrl
local ItemSubCtrl = require(ItemConst.ITEM_SUB_CTRL_PATH)

---@type CoreIconData
local CoreIconData = require(ItemConst.ITEM_CORE_ICON_DATA_PATH)

---@class CoreIconCtrl:ItemSubCtrl
local CoreIconCtrl = class("CoreIconCtrl", ItemSubCtrl)

function CoreIconCtrl:Init()
    ---@type CoreIconData
    self.coreIconData = nil
    ---@type GameObject 这个不需要解绑是属于 Common_CoreIcon 本身的
    self.coreIconFx = nil
    ---@type boolean 是否已经监听过回调
    self.isRegisterCallback = false
end

---@return ItemConst.ItemType
function CoreIconCtrl:GetItemType()
    return ItemConst.ItemType.CORE_ICON
end

--- 修改CoreIconData
---@param dataEnum ItemConst.DataEnum
---@param value any
function CoreIconCtrl:SetData(dataEnum, value)
    --保证每次取到的数据都是最新的
    ---@type ItemCtrl
    local owner = self.owner
    self.coreIconData = owner.itemData.itemSubDataDic[ItemConst.ItemType.CORE_ICON]
    local coreIconData = self.coreIconData
    local setDataFunc = CoreIconData.SetDataFuncDic[dataEnum]
    if setDataFunc then
        setDataFunc(coreIconData, value)
    end

    self:UpdateView()
end

function CoreIconCtrl:UpdateView()
    if not self.isRegisterCallback then
        EventMgr.AddListener(GemCoreConst.Event.GEM_CORE_LOCK_CHANGE, self._OnLockChange, self)
        self.isRegisterCallback = true
    end
    
    ---@type ItemCtrl
    local owner = self.owner
    self.coreIconData = owner.itemData.itemSubDataDic[ItemConst.ItemType.CORE_ICON]
    local coreIconData = self.coreIconData
    if not coreIconData.isDirty then
        return
    end

    --标准显示流程
    self:_ShowQuality()
    self:_ShowIcon()
    self:_ShowBattleTag()
    self:_ShowTextLevel()
    self:_ShowEffect()
    self:_ShowLock()
end

--region Private Field
---@private
function CoreIconCtrl:_ShowQuality()
    self:SetActiveStatus(ItemConst.OCX_CORE_ICON_IMG_QUALITY, true)
    self:SetActiveStatus(ItemConst.OCX_CORE_ICON_BG, true)
    ---@type string[]
    local images = LuaCfgMgr.Get("SundryConfig", X3_CFG_CONST.ITEMRARITYBG)
    ---@type CoreIconData
    local coreIconData = self.coreIconData
    self:SetImage(ItemConst.OCX_CORE_ICON_IMG_QUALITY, images[coreIconData.gemCoreBaseInfoConfig.Rare])
end

---@private
function CoreIconCtrl:_ShowIcon()
    self:SetActiveStatus(ItemConst.OCX_CORE_ICON_IMG_ICON, true)
    ---@type CoreIconData
    local coreIconData = self.coreIconData
    self:SetImage(ItemConst.OCX_CORE_ICON_IMG_ICON, coreIconData.owner.itemConfig.Icon)
end

---@private
function CoreIconCtrl:_ShowBattleTag()
    self:SetActiveStatus(ItemConst.OCX_CORE_ICON_BATTLE_TAG_01, true)
    ---@type CoreIconData
    local coreIconData = self.coreIconData
    local tagId = coreIconData.gemCoreBaseInfoConfig.FormationTag
    local formationTag = LuaCfgMgr.Get("FormationTag", tagId)
    self:SetImage(ItemConst.OCX_CORE_ICON_BATTLE_TAG_01, formationTag.TagImg)
end

---@private
function CoreIconCtrl:_ShowTextLevel()
    ---@type CoreIconData
    local coreIconData = self.coreIconData
    if string.isnilorempty(coreIconData.level) then
        self:SetActiveStatus(ItemConst.OCX_CORE_ICON_LEVEL_BG, false)
        self:SetActiveStatus(ItemConst.OCX_CORE_ICON_TXT_LEVEL, false)
    else
        self:SetActiveStatus(ItemConst.OCX_CORE_ICON_LEVEL_BG, true)
        self:SetActiveStatus(ItemConst.OCX_CORE_ICON_TXT_LEVEL, true)
        self:SetText(ItemConst.OCX_CORE_ICON_TXT_LEVEL, coreIconData.level)
    end
end

---@private
---锁是默认隐藏的
function CoreIconCtrl:_ShowLock()
    --通过实例ID获取锁定状态
    local isShow = SelfProxyFactory.GetGemCoreProxy():GetGemCoreIsLock(self.coreIconData.insId)
    self:SetActiveStatus(ItemConst.OCX_CORE_ICON_LOCK, isShow)
end

---@private
function CoreIconCtrl:_ShowEffect()
    ---@type CoreIconData
    local coreIconData = self.coreIconData
    local effectName = coreIconData.owner.itemConfig.IconEffect
    if string.isnilorempty(effectName) then
        self:HideEffect()
        return
    end

    self:SetActiveStatus(ItemConst.OCX_CORE_ICON_FX, true, true)
    if self.coreIconFx == nil then
        self.coreIconFx = self:GetComponent(ItemConst.OCX_CORE_ICON_FX)
    end
    
    if self.activeEffectName ~= effectName then
        self:HideEffect()
    end
    
    self:ShowEffect(effectName, self.coreIconFx)
end

---@private
function CoreIconCtrl:_OnLockChange()
    self:_ShowLock()
end
--endregion

function CoreIconCtrl:OnClose()
    self.coreIconData = nil
    self:HideEffect()
    X3AssetInsProvider.ReleaseIns(self.gameObject)
    EventMgr.RemoveListenerByTarget(self)
    self.isRegisterCallback = false
end

return CoreIconCtrl