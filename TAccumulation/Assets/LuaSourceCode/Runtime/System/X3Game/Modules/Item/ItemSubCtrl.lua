---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by canghai.
--- DateTime: 2024/1/3 11:40
---

---@class ItemSubCtrl:UICtrl
local ItemSubCtrl = class("ItemSubCtrl", UICtrl)

function ItemSubCtrl:ctor()
    ---@type table<string, GameObject> 特效字典
    self.effectDic = nil
    ---@type table<string, boolean> 特效显示状态
    self.effectActiveStatusDic = nil
    ---@type string 正在显示的Effect的名称
    self.activeEffectName = nil
end

--region Force Implement
---获取ItemSubCtrl的类型(每个都需要实现)
---@protected
---@return ItemConst.ItemType
function ItemSubCtrl:GetItemType()
end

---@protected 设置数据，控制显示
---@param dataEnum ItemConst.DataEnum
---@param value any
function ItemSubCtrl:SetData(dataEnum, value)
end

---@protected 解析显示标记
function ItemSubCtrl:DecodeShowFlag()
    
end

---@protected 刷新显示
function ItemSubCtrl:UpdateView()
    
end
--endregion


---@protected
---@param ocxKey string
---@param value boolean
---@param isForce boolean
function ItemSubCtrl:SetActiveStatus(ocxKey, value, isForce)
    local index = ItemConst.ItemTypeActiveDicOCXKeysIndexDic[self:GetItemType()][ocxKey]
    local activeDic = ItemUtil.GetActiveStatusDic(self.gameObject)

    if isForce then
        activeDic.values[index] = value
        self:SetActive(ocxKey, value)
        return
    end

    if activeDic.values[index] ~= value then
        activeDic.values[index] = value
        self:SetActive(ocxKey, value)
    end
end

--region Effect

---@protected
---@param effectName string
---@param parentObj GameObject
---@return boolean
function ItemSubCtrl:ShowEffect(effectName, parentObj)
    self.effectDic = self.effectDic or {}
    self.effectActiveStatusDic = self.effectActiveStatusDic or {}
    local effect = self.effectDic[effectName]
    if effect == nil then
        effect = ItemUtil._GetEffectInsByName(effectName)
        if effect == nil then
            --加载失败
            Debug.LogErrorFormat("Item 加载动效失败 %s", effectName)
            return false
        end

        GameObjectUtil.SetParent(effect, parentObj, false)
    end

    self.activeEffectName = effectName
    self.effectDic[effectName] = effect
    --可能是 nil 或者 false
    if self.effectActiveStatusDic[effectName] ~= true then
        self.effectActiveStatusDic[effectName] = true
        self:SetActive(effect, true)
        UIMgr.RefreshBlurMask(true)
        ---@type ItemCtrl
        local owner = self.owner
        owner:_InvokeRefresh()
    end
    
    return true
end

---@protected
function ItemSubCtrl:HideEffect()
    if string.isnilorempty(self.activeEffectName) or not self.effectActiveStatusDic then
        return 
    end

    local isShow = self.effectActiveStatusDic[self.activeEffectName] or false
    if not isShow then
        return
    end
    
    local effect = self.effectDic[self.activeEffectName]
    if effect ~= nil then
        self.effectActiveStatusDic[self.activeEffectName] = false
        self:SetActive(effect, false)
    end
end

---实现避免报错
function ItemSubCtrl.Clear()
    
end

--endregion

return ItemSubCtrl