---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by jiantao.
--- DateTime: 2023/5/10 16:55
---
---@class PurikuraARPhotoListMgr
local PurikuraARPhotoListMgr = class("PurikuraARPhotoListMgr")
PurikuraARPhotoListMgr.isInit = false

function PurikuraARPhotoListMgr:Init()
    self.textureList = {}
    self.textureNameList = {}
    self.isInit = true
end

function PurikuraARPhotoListMgr:Clear()
    self.textureList = nil
    self.textureNameList = nil
    self.isInit = false
end

function PurikuraARPhotoListMgr:CaptureTexture(obj, rect, callBack)
    if not self.isInit then
        self:Init()
    end
    ScreenCaptureUtil.CaptureUI(obj, function(texture)
        ---截图时性能瓶颈在压缩Texture
        --local targetTexture = UrlImgMgr.CompressTextureBySize(texture, 886, 1181)
        --table.insert(self.textureList, texture)
        local localFileName = "ARPhotoName__" .. os.time() .. #self.textureNameList
        UrlImgMgr.SaveTextureToPngFile(texture, localFileName, UrlImgMgr.BizType.ARPhotoAlbum, UrlImgMgr.EFileSaveCategory.All)
        table.insert(self.textureNameList, localFileName .. ".bin")
        if callBack then
            callBack(texture)
        end
    end, rect)
end

function PurikuraARPhotoListMgr:GetTexture(index)
    --if self.textureList[index] ~= nil and not GameObjectUtil.IsNull(self.textureList[index]) then
    --    return self.textureList[index]
    --end
    local texture = UrlImgMgr.LoadTextureFromFile(self.textureNameList[index], true, false, UrlImgMgr.BizType.ARPhotoAlbum)
    self.textureList[index] = texture
    return texture
end

function PurikuraARPhotoListMgr:SetImage(index, isThumb, UObject, callBack)
    UrlImgMgr.SetUrlImage(UObject, self.textureNameList[index], callBack, isThumb, UrlImgMgr.BizType.ARPhotoAlbum)
end

function PurikuraARPhotoListMgr:DeleteTexture(indexList)
    table.sort(indexList)
    for i = #indexList, 1, -1 do
        table.remove(self.textureNameList, indexList[i])
    end
end

function PurikuraARPhotoListMgr:GetPhotoFullPath(index)
    local fullPath = UrlImgMgr.GetSaveImgFilePath(self.textureNameList[index], UrlImgMgr.BizType.ARPhotoAlbum)
    return fullPath
end

function PurikuraARPhotoListMgr:GetImageCount()
    if not self.isInit then
        self:Init()
    end
    return #self.textureNameList
end

function PurikuraARPhotoListMgr:ReleasePhoto()
    for k, v in pairs(self.textureList) do
        CS.UnityEngine.Object.Destroy(v)
    end
    table.clear(self.textureList)
    UrlImgMgr.ClearFiles(UrlImgMgr.BizType.ARPhotoAlbum, {})
    table.clear(self.textureNameList)
end

return PurikuraARPhotoListMgr