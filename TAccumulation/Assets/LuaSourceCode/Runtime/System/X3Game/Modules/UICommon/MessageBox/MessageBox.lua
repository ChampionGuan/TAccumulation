---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by pc.
--- DateTime: 2020/11/13 14:21
--- 通用MessageBox相关
---
local MessageBox = class("MessageBox")
local MESSAGE_ID = 1
local MESSAGE_BOX_REFRESH = "MESSAGE_BOX_REFRESH"
local MESSAGE_BOX_REPLACE = "MESSAGE_BOX_REPLACE"
local CLOSE_MESSAGE_BOX = "CLOSE_MESSAGE_BOX"

---初始化
function MessageBox:Init()
    self.condition_ctrl = require("Runtime.System.X3Game.Modules.Common.MultiConditionCtrl").new()
    self.view_tag = UIConf.MessageBox
    self.is_running = false
    self.open_param = nil
    self:RegisterEvent()
end

---@param is_enable boolean
---@vararg any
function MessageBox:OnEventSetEnable(is_enable,...)
    local id
    if is_enable then
        id = self:GenId()
        UICommonUtil.SetMessageBoxId(id)
    else
        id = select(1,...)
        if not id then
            id = self.condition_ctrl:GetRunningType()
        end
    end
    self.condition_ctrl:SetIsRunning(id,is_enable,...)
    self:CheckShow()
end

---检测显示状态
---@param panelOrder int
function MessageBox:CheckShow(panelOrder)
    local is_running = self.condition_ctrl:IsRunning()
    if self:IsRunning() == is_running then
        self:Refresh(self:GetCurParam())
        return
    end
    self.is_running = is_running
    if self:IsRunning() then
        if panelOrder then
            UIMgr.OpenAs(self.view_tag, UIViewType.UITips, panelOrder, AutoCloseMode.None, true, false, false, UIBlurType.Dynamic, true, self:GetCurParam())
        elseif self.open_param then
            UIMgr.OpenWithViewInfo(self.view_tag,self.open_param.ViewType,self.open_param.PanelOrder,self.open_param.AutoCloseMode,self.open_param.MaskVisible,self.open_param.IsFullScreen,self.open_param.IsFocusable,self.open_param.BlurType,true,self:GetCurParam())
        else
            
            UIMgr.Open(self.view_tag)
        end

    else
        if UIMgr.IsOpened(self.view_tag) then
            EventMgr.Dispatch(CLOSE_MESSAGE_BOX)
        end
    end
    self.open_param = nil
end

function MessageBox:Refresh(...)
    EventMgr.Dispatch(MESSAGE_BOX_REFRESH,...)
end

---获取参数
---@return int,any
function MessageBox:GetCurParam()
    local running_type = self.condition_ctrl:GetRunningType()
    local param = self.condition_ctrl:GetParam()
    if param then
        return running_type,table.unpack(param)
    end
    return running_type
end

---@return int
function MessageBox:GenId()
    MESSAGE_ID  = MESSAGE_ID +1
    return MESSAGE_ID
end

---清理id
function MessageBox:ClearId()
    MESSAGE_ID = 0
end

---检测running状态
---@return boolean
function MessageBox:IsRunning()
    return self.is_running
end

function MessageBox:OnEventReplace(id)
    if id then
        self.condition_ctrl:SetIsRunning(id,false)
    end
end

---修改messagebox的内容
function MessageBox:OnEventChangeContent(content)
    if self:IsRunning() and content~=nil then
        local id = self.condition_ctrl:GetRunningType()
        local param  = self.condition_ctrl:GetParam()
        param[1] = content
        self.condition_ctrl:SetIsRunning(id,true,table.unpack(param))
        self:CheckShow()
    end
end

---动态修改层级
function MessageBox:OnEventChangeOpenType(panelOrder, ...)
    if self:IsRunning() then
        self.is_running = false
        UIMgr.Close(self.view_tag)
        self:CheckShow(panelOrder)
    end
end

---@param openParam _ViewInfo
function MessageBox:OnEventSetEnableWithOpenParam(openParam,...)
    self.open_param = openParam
    self:OnEventSetEnable(...)
end

function MessageBox:OnEventCloseAll()
    if self:IsRunning() then
        self.condition_ctrl:SetIsRunning(false)
        self:CheckShow()
    end
end

function MessageBox:RegisterEvent()
    EventMgr.AddListener(Const.Event.SET_MESSAGE_BOX_ENABLE,self.OnEventSetEnable,self)
    EventMgr.AddListener(Const.Event.CLOSE_ALL_MESSAGE_BOX,self.OnEventCloseAll,self)
    EventMgr.AddListener(Const.Event.SET_MESSAGE_BOX_ENABLE_WITH_OPEN_PARAM,self.OnEventSetEnableWithOpenParam,self)
    EventMgr.AddListener(MESSAGE_BOX_REPLACE,self.OnEventReplace,self)
    EventMgr.AddListener(Const.Event.CHANGE_MESSAGE_BOX_CONTENT,self.OnEventChangeContent,self)
    EventMgr.AddListener(Const.Event.CHANGE_MESSAGE_BOX_PANEL_TYPE,self.OnEventChangeOpenType,self)
end
MessageBox:Init()

return MessageBox