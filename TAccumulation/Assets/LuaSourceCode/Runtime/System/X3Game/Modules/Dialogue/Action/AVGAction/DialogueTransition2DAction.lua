---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by junjun003.
--- DateTime: 2023/2/6 15:36
---

---@class DialogueTransition2DAction:DialogueBaseAction
local DialogueTransition2DAction = class("DialogueTransition2DAction", require("Runtime.System.X3Game.Modules.Dialogue.Action.DialogueBaseAction"), nil ,true)

local State = {
    None = 0,
    Movein = 1, --渐入
    Wait = 2, --等待
    Moveout = 3 --渐出
}

---ActionInit
---@param cfg DialogueActionCfg
function DialogueTransition2DAction:OnInit(cfg)
    self.super.OnInit(self, cfg)
    ---@type int
    self.AVGActionId = cfg.AVGActionId
    self.transitionState = State.None

    --region UI动效配置
    ---@type bool PPV使用默认配置
    self.useDefault = cfg.useDefault
    ---@type float 停留时长
    self.waitTime = cfg.waitTime
    ---@type GameObject
    self.motionGO = nil
    --endregion
    --region 角色显隐
    ---@type bool 角色显隐
    self.changeActorActive = cfg.changeActorActive
    ---@type DynamicTarget 显隐目标
    self.actor = cfg.actor
    ---@type bool 显隐操作
    self.isActorActive = cfg.isActorActive
    --endregion
    --region 场景切换
    ---@type DialogueEnum.ChangeSceneType 切换场景类型2D/3D
    self.changeSceneType = cfg.changeSceneType
    ---@type string 资产路径
    self.assetPath = cfg.assetPath
    ---@type int Scene2DInfo表主Key
    self.scene2DInfoId = cfg.scene2DInfoId
    ---@type string 3D场景名
    self.sceneName = cfg.sceneName
    --endregion

    ---@type int
    self.moveinTime = 0
    ---@type int
    self.moveoutTime = 0
end

---ActionEnter
function DialogueTransition2DAction:OnEnter()
    self.dialogueAvgAction = LuaCfgMgr.Get("DialogueAvgAction", self.AVGActionId)
    self.motionGO = UIMgr.LoadDynamicUIPrefab(self.dialogueAvgAction.Para1)
    if GameObjectUtil.IsNull(self.motionGO) == false then
        self.moveinTime = UIUtil.GetMotionDuration(self.motionGO, "Movein")
        self.moveoutTime = UIUtil.GetMotionDuration(self.motionGO, "Moveout")
    end
    if self.useDefault then
        self.waitTime = tonumber(self.dialogueAvgAction.Para2) or 0
    end
    self.duration = self.moveinTime + self.waitTime + self.moveoutTime
end

---Process函数
---@param progress float
---@return DialogueEnum.UpdateActionState
function DialogueTransition2DAction:OnProcess(progress)
    if self.transitionState == State.None then
        self:EnterMovein()
        self.transitionState = State.Movein
    end
    if self.transitionState == State.Movein then
        self:ProcessMovein()
        if self.curTime >= self.moveinTime then
            self:EnterWait()
            self.transitionState = State.Wait
        end
    end
    if self.transitionState == State.Wait then
        if self.curTime >= self.moveinTime + self.waitTime then
            self.transitionState = State.Moveout
            self:EnterMoveout()
        end
    end
    if self.transitionState == State.Moveout then
        self:ProcessMoveout()
    end
    return self.super.OnProcess(self, progress)
end

---播放渐入
function DialogueTransition2DAction:EnterMovein()
    if GameObjectUtil.IsNull(self.motionGO) == false then
        EventMgr.Dispatch("DialogueUIAddGameObject", self.motionGO, "OCX_panel_Transition")
        UIUtil.PlayMotion(self.motionGO, "Movein")
    end
end

---
function DialogueTransition2DAction:ProcessMovein()

end

---停留过程，角色显隐和切换场景
function DialogueTransition2DAction:EnterWait()
    if GameObjectUtil.IsNull(self.motionGO) == false then
        UIUtil.FastForwardMotion(self.motionGO, "Movein", 1)
    end
    if self.changeActorActive then
--[[        local go = self.system:GetDynamicTarget(self.actor)
        local animator = GameObjectUtil.EnsureCSComponent(go, typeof(CS.X3Game.X3Animator))
        if animator and self.isActorActive == false then
            animator:Stop()
        end
        GameObjectUtil.SetActive(self.actor, self.isActorActive)]]
        self.system:SetDynamicTargetActive(self.actor, self.isActorActive)
    end
    if self.changeSceneType == DialogueEnum.ChangeSceneType.Scene2D then
        if self.scene2DInfoId and self.scene2DInfoId > 0 then
            SceneMgr.Change2DScene(self.scene2DInfoId)
        else
            SceneMgr.Change2DSceneByPath(self.assetPath)
        end
    elseif self.changeSceneType == DialogueEnum.ChangeSceneType.Scene3D then
        self.pipeline:ChangeScene(self.sceneName)
    end
end

---播放渐出
function DialogueTransition2DAction:EnterMoveout()
    if GameObjectUtil.IsNull(self.motionGO) == false then
        UIUtil.PlayMotion(self.motionGO, "Moveout")
    end
end

---
function DialogueTransition2DAction:ProcessMoveout()

end

---ActionExit
function DialogueTransition2DAction:OnExit()
    if GameObjectUtil.IsNull(self.motionGO) == false then
        UIUtil.FastForwardMotion(self.motionGO, "Moveout", 1)
        Res.DiscardGameObject(self.motionGO)
        self.motionGO = nil
    end
end

return DialogueTransition2DAction