---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by junjun003.
--- DateTime: 2023/12/15 15:24
---
---@class DialogueSVCHelper
local DialogueSVCHelper = {}

local StopBackgroundJob = CS.UnityEngine.ShaderVariantCollection.StopBackgroundJob
local AsyncPolicy = CS.UnityEngine.ShaderVariantCollection.AsyncPolicy
local SVC_TYPE = typeof(CS.UnityEngine.ShaderVariantCollection)
local UNLOAD_CHECK_TIME = 5

---Helper初始化
function DialogueSVCHelper:Init()
    ---@type table<string, CS.UnityEngine.ShaderVariantCollection>
    self.svcCache = {}
    ---@type string[] 先进先出的SVC栈，只保留有限个SVC
    self.svcPathStack = {}
    ---@type int 缓存数量
    self.cacheCount = 3
    ---@type float 卸载
    self.unloadTick = 0
end

---加载SVC并且预热
---@param svcPath string
function DialogueSVCHelper:Load(svcPath)
    if Res.IsAssetFileExist(svcPath) then
        if table.containskey(self.svcCache, svcPath) == false then
            Res.LoadWithAssetPathAsync(svcPath, AutoReleaseMode.EndOfFrame, SVC_TYPE,
                    nil, function(asset)
                        self:OnAssetLoadCplAsync(asset, svcPath)
                    end)
        end
        Debug.LogFormat("[DialogueSystem]SVC预加载-%s", svcPath)
    end
end

---资源加载完成
---@param asset CS.UnityEngine.ShaderVariantCollection
---@param path string 路径
function DialogueSVCHelper:OnAssetLoadCplAsync(asset, svcPath)
    if table.containskey(self.svcCache, svcPath) == false then
        Res.AddRefCount(asset, 1)
        self.svcCache[svcPath] = asset
        table.insert(self.svcPathStack, svcPath)
        if (asset and asset.variantCount > 0) then
            asset:WarmUpAsync(AsyncPolicy.Background)
        end
    end
end

---Tick
---@param deltaTime float
function DialogueSVCHelper:Update(deltaTime)
    self.unloadTick = self.unloadTick + deltaTime
    if self.unloadTick >= UNLOAD_CHECK_TIME then
        local length = #self.svcPathStack
        if length >= self.cacheCount + 1 then
            ---保留最后两个
            for i = length - self.cacheCount, 1, -1 do
                local svc = self.svcCache[self.svcPathStack[i]]
                if svc and svc.isWarmedUp then
                    Debug.LogFormat("[DialogueSystem]SVC卸载-%s", self.svcPathStack[i])
                    Res.SubRefCount(svc, 1)
                    self.svcCache[self.svcPathStack[i]] = nil
                    table.remove(self.svcPathStack, i)
                end
            end
        end
        self.unloadTick = 0
    end
end

---清理
function DialogueSVCHelper:Clear()
    StopBackgroundJob()
    if self.svcCache then
        for _, asset in pairs(self.svcCache) do
            Res.SubRefCount(asset, 1)
        end
    end
    table.clear(self.svcCache)
    table.clear(self.svcPathStack)
    Debug.LogFormat("[DialogueSystem]SVC清理")
end

return DialogueSVCHelper