---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by junjun003.
--- DateTime: 2023/8/26 16:42
---

---@class DialogueNodeFactory
local DialogueNodeFactory = { }

local DialoguePathPrefix = "Runtime.System.X3Game.Modules.Dialogue.NodeController."
local controllerDict = {
    [DialogueEnum.DialogueConditionType.Dialogue] = require(string.concat(DialoguePathPrefix, "NodeController")),
    [DialogueEnum.DialogueConditionType.Choice] = require(string.concat(DialoguePathPrefix, "ChoiceController")),
    [DialogueEnum.DialogueConditionType.ConditionBranch] = require(string.concat(DialoguePathPrefix, "ConditionBranchController")),
    [DialogueEnum.DialogueConditionType.Random] = require(string.concat(DialoguePathPrefix, "RandomController")),
    [DialogueEnum.DialogueConditionType.QTE] = require(string.concat(DialoguePathPrefix, "QTEController")),
    [DialogueEnum.DialogueConditionType.CommonStage] = require(string.concat(DialoguePathPrefix, "CommonStageController")),
    [DialogueEnum.DialogueConditionType.LoopCount] = require(string.concat(DialoguePathPrefix, "LoopCountController")),
    [DialogueEnum.DialogueConditionType.LoopTime] = require(string.concat(DialoguePathPrefix, "LoopTimeController")),
    [DialogueEnum.DialogueConditionType.Parallel] = require(string.concat(DialoguePathPrefix, "ParellelController")),
    [DialogueEnum.DialogueConditionType.QuickSequence] = require(string.concat(DialoguePathPrefix, "QuickSequenceNodeController")),
}

---创建Action
---@param conditionType DialogueEnum.DialogueConditionType
---@return DialogueBaseAction
function DialogueNodeFactory.CreateNodeController(conditionType)
    local controllerPool = controllerDict[conditionType]
    local controller = nil
    if controllerPool ~= nil then
        controller = controllerPool.new()
    end
    return controller
end

---归还一个Action进池
---@param controller NodeController
function DialogueNodeFactory.ReleaseNodeController(controller)
    controller:ReleaseToPool()
end

---释放ActionPool
function DialogueNodeFactory.ReleasePool()
    for _,v in pairs(controllerDict) do
        v.ClearAll()
    end
end

---行为工厂初始化
function DialogueNodeFactory.Init()

end

---行为工厂销毁
function DialogueNodeFactory.Clear()
    DialogueNodeFactory.ReleasePool()
end

return DialogueNodeFactory