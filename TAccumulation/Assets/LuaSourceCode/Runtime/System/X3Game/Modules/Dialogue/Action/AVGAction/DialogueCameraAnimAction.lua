---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by junjun003.
--- DateTime: 2023/2/15 17:28
---

---@class DialogueCameraAnimAction:DialogueBaseAction
local DialogueCameraAnimAction = class("DialogueCameraAnimAction", require("Runtime.System.X3Game.Modules.Dialogue.Action.DialogueBaseAction"), nil ,true)

---ActionInit
---@param cfg DialogueActionCfg
function DialogueCameraAnimAction:OnInit(cfg)
    self.super.OnInit(self, cfg)
    self.AVGActionId = cfg.AVGActionId

    ---@type bool 播放次数使用默认配置
    self.useDefault = cfg.useDefault
    ---@type int 播放次数
    self.playTimes = cfg.playTimes
end

---ActionEnter
function DialogueCameraAnimAction:OnEnter()
    self.dialogueAvgAction = LuaCfgMgr.Get("DialogueAvgAction", self.AVGActionId)
    if self.useDefault then
        self.playTimes = tonumber(self.dialogueAvgAction.Para2) or 0
    end
    self.cameraAsset = Res.LoadGameObject(string.concat(DialogueConst.PPVAnimPath,
            self.dialogueAvgAction.Para1, ".prefab"))
    local ctrl = GlobalCameraMgr.Shake(self.cameraAsset, self.playTimes)
    if self.cameraAsset then
        self.duration = self.playTimes == -1 and 0 or ctrl:GetShakeTime() * self.playTimes
    end
end

---Process函数
---@param progress float
---@return DialogueEnum.UpdateActionState
function DialogueCameraAnimAction:OnProcess(progress)
    if self.playTimes == -1 then
        local tempTable = PoolUtil.GetTable()
        tempTable.asset = self.cameraAsset
        tempTable.AVGActionId = self.AVGActionId
        self.actionHelper:AddHoldonAction(self.nodeUniqueId, self.ownerGroup, self.id, tempTable)
        return DialogueEnum.UpdateActionState.Complete
    else
        return self.super.OnProcess(self, progress)
    end
end

---ActionExit
function DialogueCameraAnimAction:OnExit()
    if self.playTimes ~= -1 then
        if self.cameraAsset then
            GlobalCameraMgr.StopShake(self.cameraAsset)
            Res.DiscardGameObject(self.cameraAsset)
            self.cameraAsset = nil
        end
    end
end

return DialogueCameraAnimAction