---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by junjun003.
--- DateTime: 2023/1/29 17:59
---

---@class DialogueSpecialImageTextAction:DialogueBaseAction
local DialogueSpecialImageTextAction = class("DialogueSpecialImageTextAction", require("Runtime.System.X3Game.Modules.Dialogue.Action.DialogueBaseAction"), nil ,true)

local State = {
    None = 0,
    Movein = 1, --渐入
    Wait = 2, --等待
    Moveout = 3 --渐出
}

---ActionInit
---@param cfg DialogueActionCfg
function DialogueSpecialImageTextAction:OnInit(cfg)
    self.super.OnInit(self, cfg)
    self.AVGActionId = cfg.AVGActionId
    self.transitionState = State.None

    ---@type PositionData
    self.positionData = cfg.positionData
    ---@type bool 使用默认设置
    self.useDefault = cfg.useDefault
    ---@type float 停留时长
    self.waitTime = cfg.waitTime
    ---@type string WwiseEventName
    self.eventName = cfg.eventName
    ---@type SpecialImageTextProp[]
    self.props = cfg.props
    ---@type boolean 是否自动结束
    self.isAutoClose = true

    ---@type int
    self.moveinTime = 0
    ---@type int
    self.moveoutTime = 0
    ---@type bool
    self.playCpl = false
    ---@type GameObject
    self.uiPrefab = nil
    ---@type DialogueAVGImageTextController
    self.uiCtrl = nil
end

---ActionEnter
function DialogueSpecialImageTextAction:OnEnter()
    self.dialogueAvgAction = LuaCfgMgr.Get("DialogueAvgAction", self.AVGActionId)
    self.uiPrefab = UIMgr.LoadDynamicUIPrefab(self.dialogueAvgAction.Para1)
    self.isAutoClose = self.dialogueAvgAction.Para3 == "1"
    EventMgr.Dispatch("DialogueUIAddGameObject", self.uiPrefab, "OCX_panel_SpecialImgText")
    GameObjectUtil.SetActive(self.uiPrefab, true)
    if self.uiPrefab then
        self.uiCtrl = UICtrl.GetOrAddCtrl(self.uiPrefab, "Runtime.System.X3Game.UI.UIView.Dialog.DialogueAVGImageTextController")
        if self.positionData.positionType == DialogueEnum.DialoguePositionType.Target then
            self.uiCtrl:Render(self.dialogueId, self.nodeUniqueId, self.props, self.positionData, self.system:GetDynamicTarget(self.positionData.target))
        else
            self.uiCtrl:Render(self.dialogueId, self.nodeUniqueId, self.props, self.positionData)
        end
        if self.dialogueAvgAction.SubType == DialogueEnum.SpecialImageTextSubType.Marquee then
            self.uiCtrl:PlayWwiseEvent(self.eventName, self.system:GetDialogueSpeed())
            self.uiCtrl:ResetMarquee()
            self.system:AddPlayedWwiseData(self.eventName, false)
        end
        self.moveinTime = self.uiCtrl:GetMoveinDuration()
        if self.isAutoClose then
            self.moveoutTime = self.uiCtrl:GetMoveoutDuration()
        else
            local tempTable = PoolUtil.GetTable()
            tempTable.asset = self.uiPrefab
            tempTable.AVGActionId = self.AVGActionId
            self.actionHelper:AddHoldonAction(self.nodeUniqueId, self.ownerGroup, self.id, tempTable)
        end
        if self.useDefault then
            self.waitTime = tonumber(self.dialogueAvgAction.Para2) or 0
        end
        if string.isnilorempty(self.dialogueAvgAction.Para4) == false then
            UIUtil.SetValue(self.uiPrefab, tonumber(self.dialogueAvgAction.Para4))
        end
        self.duration = self.moveinTime + self.waitTime + self.moveoutTime
    end
    self.uiCtrl:PlayMovein()
end

---Process函数
---@param progress float
---@return DialogueEnum.UpdateActionState
function DialogueSpecialImageTextAction:OnProcess(progress)
    if self.transitionState == State.None then
        self:EnterMovein()
        self.transitionState = State.Movein
    end
    if self.transitionState == State.Movein then
        if self.curTime >= self.moveinTime then
            self.transitionState = State.Wait
        end
    end
    if self.transitionState == State.Wait then
        if self.curTime >= self.moveinTime + self.waitTime and self.isAutoClose then
            self.transitionState = State.Moveout
            self:EnterMoveout()
        end
    end
    return self.super.OnProcess(self, progress)
end

---播放渐入
function DialogueSpecialImageTextAction:EnterMovein()
    if self.uiCtrl then
        self.uiCtrl:PlayMovein()
    end
end

---播放渐出
function DialogueSpecialImageTextAction:EnterMoveout()
    if self.uiCtrl then
        self.uiCtrl:PlayMoveout()
    end
end

---ActionExit
function DialogueSpecialImageTextAction:OnExit()
    if self.isAutoClose then
        Res.DiscardGameObject(self.uiPrefab)
        self.uiPrefab = nil
        self.uiCtrl = nil
    end
end

return DialogueSpecialImageTextAction