---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by junjun003.
--- DateTime: 2022/7/11 16:13
---

local AIAction = require("Runtime.Plugins.AIDesigner.Base.AITask").AIAction

---Category:Date/BlockTower
---@class ChooseBlockBaseAction:AIAction
---@field maxLevelOrder int 0=TopToBase,1=BaseToTop
---@field maxLevelIndex int
---@field minLevelOrder int 0=TopToBase,1=BaseToTop
---@field minLevelIndex int
---@field minBlockInLevel int
local ChooseBlockBaseAction = class("ChooseBlockBaseAction", AIAction)

---
function ChooseBlockBaseAction:OnEnter()
    ---@type BlockTowerGameController
    self.gameController = self.tree:GetVariable("GameController")
    ---@type BlockTowerGameData
    self.gameData = self.gameController:GetGameData()
    ---@type int[]
    self.layerPool = {}

    local topLayer = self.gameData.curPhysicsLayer
    local maxLayer = self.maxLevelOrder == 0 and topLayer - self.maxLevelIndex or self.maxLevelIndex
    local minLayer = self.minLevelOrder == 0 and topLayer - self.minLevelIndex or self.minLevelIndex

    maxLayer = Mathf.Max(minLayer, maxLayer)
    minLayer = Mathf.Min(minLayer, maxLayer)

    for i = minLayer, maxLayer do
        local curLayer = self.gameData:GetPhysicsLayer(i)
        if topLayer - i >= self.gameData.layerForbidden and #curLayer >= self.minBlockInLevel then
            table.insert(self.layerPool, i)
        end
    end
end

---随机层数
---@return int
function ChooseBlockBaseAction:RandomLayer()
    if #self.layerPool > 0 then
        local index = math.random(1, #self.layerPool)
        local randomLayer = self.layerPool[index]
        table.remove(self.layerPool, index)
        return randomLayer
    else
        return -1
    end
end

return ChooseBlockBaseAction