---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by jiaozhu.
--- DateTime: 2022/3/5 18:05
---
---@type MainHome.MainHomeConst
local MainHomeConst = require("Runtime.System.X3Game.Modules.MainHome.Data.MainHomeConst")
local AIAction = require("Runtime.System.X3Game.Modules.AIDesigner.Task.MainHome.Action.MainHomeBaseAIAction")
---检测主ui是否可以显示
---Category:MainHome
---@class MainHomeCheckUI:MainHomeBaseAIAction
local MainHomeCheckUI = class("MainHomeCheckUI", AIAction)
function MainHomeCheckUI:OnAwake()
    AIAction.OnAwake(self)
    ---@type int[]
    self.topBarList = {}
    EventMgr.AddListener(MainHomeConst.Event.MAIN_HOME_ON_MODE_CHANGE,self.OnEventModeChanged,self)
    EventMgr.AddListener(MainHomeConst.Event.MAIN_HOME_SET_ACTION_SHOW_RUNNING,self.OnEventActionShowRunning,self)
    EventMgr.AddListener(MainHomeConst.Event.MAIN_HOME_CLICK_TOP_BAR,self.OnEventClickTopBar,self)
end

function MainHomeCheckUI:OnEventModeChanged()
    self:CheckMainUI()
    self.bll:SetHandlerRunning(MainHomeConst.HandlerType.CheckUI,true)
end

function MainHomeCheckUI:CheckMainUI()
    self.bll:SetHandlerRunning(MainHomeConst.HandlerType.HideMainUI,not self.actionDataProxy:IsCanShowMainUI())
end

---@param actionId int
---@param isRunning boolean
function MainHomeCheckUI:CheckTopBar(actionId,isRunning)
    if isRunning then
        local actionTypeData = self.bll:GetActionDataProxy():GetActionTypeCfgById(actionId)
        if actionTypeData then
            if actionTypeData.BackType~= MainHomeConst.ExitType.None then
                self:SetTopBarEnable(actionId,isRunning)
            end
        end
    else
        self:SetTopBarEnable(actionId,isRunning)
    end
    self.bll:SetHandlerRunning(MainHomeConst.HandlerType.TopBarActive,not table.isnilorempty(self.topBarList))
end

---action表演状态变更
---@param actionId int
---@param isRunning boolean
function MainHomeCheckUI:OnEventActionShowRunning(actionId,isRunning)
    self:CheckMainUI()
    self:CheckTopBar(actionId,isRunning)
    self.bll:SetHandlerRunning(MainHomeConst.HandlerType.CheckUI,true)
end

function MainHomeCheckUI:OnEventClickTopBar()
    self.bll:SetHandlerRunning(MainHomeConst.HandlerType.RefreshUI,true)
    if self:IsTopBarEnable() then
        local actionId = self.topBarList[#self.topBarList]
        self:CheckTopBar(actionId,false)
        local actionData = self.actionDataProxy:GetActionTypeCfgById(actionId)
        if actionData then
            if actionData.BackType == MainHomeConst.ExitType.ExitSelf then
                self.bll:StopAction(actionId)
            elseif actionData.BackType == MainHomeConst.ExitType.ExitInteract then
                if self.bll:GetMode() == MainHomeConst.ModeType.INTERACT then
                    self.bll:SetMode(MainHomeConst.ModeType.NORMAL)
                else
                    self.bll:StopAction(actionId)
                end
            end
        else
            if self.bll:IsDebugMode() then
                Debug.LogWarningFormat("[MainHome] 返回按钮绑定action[%s]未找到",self.actionDataProxy:GetActionDebugDes(actionId))
            end
            
        end
    else
        Debug.LogWarningFormat("[MainHome] 返回按钮数据绑定有问题！！！")
        self.bll:SetMode(MainHomeConst.ModeType.NORMAL)
    end
end

---当前topbar是否有效
---@return boolean
function MainHomeCheckUI:IsTopBarEnable()
    return not table.isnilorempty(self.topBarList)
end

---@param actionId int
---@param isEnable boolean
function MainHomeCheckUI:SetTopBarEnable(actionId,isEnable)
    if isEnable then
        if not table.containsvalue(self.topBarList,actionId) then
            table.insert(self.topBarList,actionId)
            if self.bll:IsDebugMode() then
                self.editorAction:SetActionTopBarEnable(actionId,isEnable)
                Debug.LogFormat("[MainHome] action[%s] 对topBar绑定控制",self.actionDataProxy:GetActionDebugDes(actionId))
            end
            return true
        end
    else
        if table.containsvalue(self.topBarList,actionId) then
            table.removebyvalue(self.topBarList,actionId)
            if self.bll:IsDebugMode() then
                self.editorAction:SetActionTopBarEnable(actionId,isEnable)
                Debug.LogFormat("[MainHome] action[%s] 对topBar解除控制",self.actionDataProxy:GetActionDebugDes(actionId))
            end
            return true
        end
    end
    return false
end

function MainHomeCheckUI:OnDestroy()
    EventMgr.RemoveListenerByTarget(self)
end
return MainHomeCheckUI