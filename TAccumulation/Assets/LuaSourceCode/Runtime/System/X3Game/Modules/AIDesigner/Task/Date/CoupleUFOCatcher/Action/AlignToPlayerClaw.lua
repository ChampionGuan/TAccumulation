---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by junjun003.
--- DateTime: 2022/6/13 11:46
---

local AIAction = require("Runtime.Plugins.AIDesigner.Base.AITask").AIAction

---Category:Date/CoupleUFOCatcher
---@class AlignToPlayerClaw:AIAction
---@field minOffset Float 对齐最小偏移量
---@field maxOffset Float 对齐最大偏移量
local AlignToPlayerClaw = class("AlignToPlayerClaw", AIAction)

function AlignToPlayerClaw:OnEnter()
    ---@type GameObject
    self.body = BllMgr.GetUFOCatcherBLL():GetAIGameObject()
    ---@type GameObject
    self.target = BllMgr.GetUFOCatcherBLL():GetPlayerGameObject()
    ---@type ClawController
    self.clawController = self.tree:GetVariable("UFOCatcherController").clawController
    ---@type GameObject
    self.ufoCatcher = self.tree:GetVariable("UFOCatcher")
    ---@type float
    self.startPositionZ = GameObjectUtil.GetPosition(self.body).z
    ---@type float
    self.checkStartTime = 0
    ---@type float
    self.lastPositionZ = 0
    ---@type float
    self.directionZ = GameObjectUtil.GetPosition(self.target).z - GameObjectUtil.GetPosition(self.body).z
    ---@type float
    self.needMoveZ = math.abs(self.directionZ) + Mathf.RandomFloat(self.minOffset, self.maxOffset)
end

---@return AITaskState
function AlignToPlayerClaw:OnUpdate()
    if self.clawController.isGetStuck then
        self.clawController.isGetStuck = false
        return AITaskState.Success
    end
    local direction = Vector2.Temp(0, 0)
    local bodyPosition = GameObjectUtil.GetPosition(self.body)
    if math.abs(bodyPosition.z - self.startPositionZ) < self.needMoveZ then
        direction.y = self.directionZ
    end
    if TimerMgr.RealtimeSinceStartup() - self.checkStartTime > 1 then
        self.checkStartTime = TimerMgr.RealtimeSinceStartup()
        if math.abs(self.lastPositionZ - bodyPosition.z) <= 0.005 then
            return AITaskState.Success
        else
            self.lastPositionZ = bodyPosition.z
        end
    end
    if direction:SqrMagnitude() >= 0.0001 then
        local worldDirection = self.ufoCatcher.transform:TransformDirection(direction.x, direction.y, 0).normalized
        self.clawController:MoveClawByWorldDirection(worldDirection.x, worldDirection.y)
        return AITaskState.Running
    end
    return AITaskState.Success
end

return AlignToPlayerClaw