---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by junjun003.
--- DateTime: 2022/6/13 15:22
---

local AIAction = require("Runtime.Plugins.AIDesigner.Base.AITask").AIAction

---Category:Date/CoupleUFOCatcher
---@class CoupleUFOCatcherMoveClawX:AIAction
---@field min Float
---@field max Float
local CoupleUFOCatcherMoveClawX = class("CoupleUFOCatcherMoveClawX", AIAction)

function CoupleUFOCatcherMoveClawX:OnEnter()
    ---@type GameObject
    self.body = self.tree:GetVariable("clawBody")
    ---@type GameObject
    self.target = self.tree:GetVariable("catchTarget")
    ---@type ClawController
    self.clawController = self.tree:GetVariable("UFOCatcherController").clawController
    ---@type GameObject
    self.ufoCatcher = self.tree:GetVariable("UFOCatcher")
    ---@type float
    self.lastPositionX = 0
    ---@type float
    self.checkStartTime = 0
    ---@type float
    self.directionX = 0
    ---@type float
    self.needMoveX = 0
    ---@type float
    self.startPositionX = 0

    local collider = self.target:GetComponent("DollCollider")
    local minX = collider:GetBorderPosition(-1, 0).x
    local maxX = collider:GetBorderPosition(1, 0).x
    local randomRange = Mathf.RandomFloat(self.min, self.max)
    local targetPositionX = minX *  (1 - randomRange) + maxX * randomRange
    local bodyPositionX = GameObjectUtil.GetPosition(self.body).x
    self.startPositionX = bodyPositionX
    self.needMoveX = math.abs(bodyPositionX - targetPositionX)
    self.directionX = targetPositionX - bodyPositionX
    EventMgr.Dispatch("UFOCATCHEREVENT_AI_MOVECLAW", nil)
end

---@return AITaskState
function CoupleUFOCatcherMoveClawX:OnUpdate()
    local direction = Vector2.Temp(0, 0)
    local bodyPosition = GameObjectUtil.GetPosition(self.body)
    if math.abs(bodyPosition.x - self.startPositionX) < self.needMoveX then
        direction.x = self.directionX
    end
    if TimerMgr.RealtimeSinceStartup() - self.checkStartTime > 2 then
        self.cheskStartTime = TimerMgr.RealtimeSinceStartup()
        if math.abs(self.lastPositionX - bodyPosition.x) <= 0.005 then
            return AITaskState.Success
        else
            self.lastPositionX = bodyPosition.x
        end
    end

    if direction:SqrMagnitude() >= 0.0001 then
        local worldDirection = self.ufoCatcher.transform:TransformDirection(direction.x, direction.y, 0).normalized
        self.clawController:MoveClawByWorldDirection(worldDirection.x, worldDirection.y)
        return AITaskState.Running
    end
    return AITaskState.Success
end

function CoupleUFOCatcherMoveClawX:OnExit()
    self.clawController:OnLeftBtnUp()
end

return CoupleUFOCatcherMoveClawX