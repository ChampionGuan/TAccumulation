---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by aoliao.
--- DateTime: 2023/5/31 21:05
---LoginConst
---@class LoginConst
local LoginConst = class("LoginConst")
---@class LoginConst.ThrottleAcquireState
---排队登录状态及处理方式
LoginConst.ThrottleAcquireState = ---https://papergames.feishu.cn/wiki/wikcnOIfEPTzqYHARXpgOC7bhMf
{
    ---原因：成功（默认不显），容量限流情况下才有这个状态。
    ---处置方式:
    ---receipt处理:返回receipt，可以游戏服务器认证
    Suc = 0,
    ---原因：触发最大等待时长限流
    ---处置方式:过 5~10s 后重试
    ---receipt处理不返回 receipt
    WaitTime = 1,
    ---原因：触发匀速限流等待
    ---处置方式:根据返回的 queue_wait_seconds 时长等待后重新请求接口
    ---receipt处理:返回receipt（限流服务器自用），每次会重新签发，客户端需要更新receipt。
    WaitQueue = 2,
    ---原因：触发匀速限流等待（无容量限制）
    ---处置方式:根据返回的queue_wait_seconds等待后相应时长后去登录游戏服务器。注意：queue_wait_seconds为0时不等待。
    ---receipt处理:返回receipt，可以去游戏服务器认证
    Normal = 3,
    ---原因：触发窗口限流等待/同一个用户1s内多次请求
    ---处置方式:更新排名，5~10s 后重试
    ---receipt处理:返同状态码2处理方式。
    RequestRepeat  = 4,
    ---原因：排名比游戏剩余容量大
    ---更新排名，15s 过 15s 重试，更新排名
    ---receipt处理:返同状态码2处理方式。
    CapacityMax = 5,
    ---原因：排队队列已满
    ---处置方式:过 5~10s 后重试
    ---receipt处理:返同状态码2处理方式。
    QueueMax = 6,
}
---@class LoginConst.Event
LoginConst.Event =
{
    RetryThrottleAcquire = "LoginConst.Event.RetryThrottleAcquire"
}
---@class LoginConst.ConstParam
---一些常量
LoginConst.ConstParam =
{
    ---排队重试时间(秒)
    RetryThrottleAcquireTime = 15,
    ---小于指定的分钟后只显示小于的时间(分)
    minShowMinutes = 1,
    ---到达上限(分)
    LimitShowMinutes = 1,
    ---不管等待多久最长的秒都是这个
    MaxShowSecond = 60
}
LoginConst.ReceiptKey = "Receipt" ---排队登录限流token 字段名

return LoginConst