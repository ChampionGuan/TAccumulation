---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by junjun003.
--- DateTime: 2023/7/3 14:43
---

---角色虚拟控制器管理类，封装功能接口供业务使用
---@class CharacterCtrlMgr
local CharacterCtrlMgr = {}

---控制器Dict
---@type table<int, CharacterCtrl>
local ctrlDict = nil

---Mgr初始化
function CharacterCtrlMgr.Init()
    ctrlDict = {}
end

---获取一个Ctrl,如果没有GameObject则会创建一个虚拟的Lua控制器对象
---@param ins GameObject
function CharacterCtrlMgr.GetCtrl(ins)
    if ctrlDict == nil then return end
    ---@type CharacterCtrl
    local ctrl = nil
    if ins then
        local instanceID = ins:GetInstanceID()
        if table.containskey(ctrlDict, instanceID) then
            return ctrlDict[instanceID]
        else
            ctrl = require("Runtime.System.X3Game.Modules.CharacterCtrl.CharacterCtrl").new()
            ctrl:BindGameObject(ins)
            ctrlDict[instanceID] = ctrl
        end
    else
        ctrl = require("Runtime.System.X3Game.Modules.CharacterCtrl.CharacterCtrl").new()
    end
    return ctrl
end

---重新绑定Ctrl, 用以在GameObject发生变化后保存引用用
---@param ins GameObject
---@param ctrl CharacterCtrl
function CharacterCtrlMgr.RebindCtrl(ins, ctrl)
    if ctrlDict == nil then return end
    if ins == nil or ctrl == nil then return end
    local lastInstanceID = ctrl:GetInstanceID()
    ctrlDict[lastInstanceID] = nil
    ctrl:BindGameObject(ins)
    ctrlDict[ins:GetInstanceID()] = ctrl
end

---销毁Ctrl
---@param ctrl CharacterCtrl
function CharacterCtrlMgr.DestroyCtrl(ctrl)
    if ctrlDict == nil then return end
    if ctrl then
        local instanceID = ctrl:GetInstanceID()
        if instanceID > 0 then
            ctrlDict[instanceID] = nil
        end
        ctrl:Clear()
    end
end

---销毁Ctrl
---@param gameObject GameObject
function CharacterCtrlMgr.DestroyByGameObject(gameObject)
    if ctrlDict == nil then return end
    if GameObjectUtil.IsNull(gameObject) == false then
        local instanceID = gameObject:GetInstanceID()
        local ctrl = ctrlDict[instanceID]
        if ctrl then
            ctrlDict[instanceID] = nil
            ctrl:Clear()
        end
    end
end

---清理逻辑，在登出等逻辑会主动调用
function CharacterCtrlMgr.Clear()
    for _, ctrl in pairs(ctrlDict) do
        ctrl:Clear()
    end
    ctrlDict = nil
end

return CharacterCtrlMgr