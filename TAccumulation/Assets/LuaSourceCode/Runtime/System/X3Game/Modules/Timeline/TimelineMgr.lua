---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by changkong.
--- DateTime: 2021/8/14 14:59
require("Runtime.Battle.Common.LuaPool")
require("Runtime.System.X3Game.Modules.Timeline.TimelineType")
---@type Timeline
local Timeline = require("Runtime.System.X3Game.Modules.Timeline.Timeline")
---@class TimelineMgr
local TimelineMgr = class("TimelineMgr")

---@param contextType TimelineContextType timeline环境，没有就用默认的
function TimelineMgr:ctor(contextType)
    ---@type table<Timeline, boolean>
    self.playingTimelines = {}
    if not contextType then
        contextType = TimelineContextType.Default
    end
    local contextClassPath = TimelineContextType2ClassPath[contextType]
    self.context = require(contextClassPath).new()
end

----------------------- 外部接口 ---------------------------------
---@param type TimelineType
---@return Timeline
function TimelineMgr:CreateTimeline(type)
    local timeline = Timeline.new(self, type, self.context)
    return timeline
end

-- 自动播放timeline
---@param type TimelineType 类型
---@param resPath string 资源路径
---@param bindObj GameObject bindObj 绑定对象
---@param stopCall  function 结束回调
---@return Timeline
function TimelineMgr:AutoPlay(type, resPath, bindObj, stopCall)
    local timeline = Timeline.new(self, type, self.context)
    timeline:SetResPath(resPath)
    timeline:SetForceBindObj(bindObj)
    timeline:SetStopCall(stopCall)
    timeline:Build()
    timeline:Play()
    return timeline
end

-- 自动播放timeline
---@param type TimelineType 类型
---@param timelineObj GameObject timeline实例化对象
---@param bindObj string bindObj 绑定对象
---@param stopCall  function 结束回调
---@return Timeline
function TimelineMgr:AutoPlayObj(type, timelineObj, bindObj, stopCall)
    local timeline = Timeline.new(self, type, self.context)
    timeline:SetResObj(timelineObj)
    timeline:SetForceBindObj(bindObj)
    timeline:SetStopCall(stopCall)
    timeline:Build()
    timeline:Play()
    return timeline
end

-- 更新方法，外部调用驱动timeline更新
---@param deltaTime float 帧间隔时间
function TimelineMgr:Tick(deltaTime)
    for timeline, _ in pairs(self.playingTimelines) do
        timeline:Tick(deltaTime)
        if timeline.timelineState == TimelineState.Destroy then
            self.playingTimelines[timeline] = nil
        end
    end
end

function TimelineMgr:Destroy()
    for timeline, _ in pairs(self.playingTimelines) do
        timeline:Destroy()
    end
    table.clear(self.playingTimelines)
end
-------------------------------------------------------------------

-- 友元函数
---@param timeline Timeline
function TimelineMgr:__PlayTimeline(timeline)
    self.playingTimelines[timeline] = true
end

return TimelineMgr