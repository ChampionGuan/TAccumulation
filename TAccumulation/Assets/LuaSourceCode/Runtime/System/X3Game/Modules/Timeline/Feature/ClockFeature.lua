---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by changkong.
--- DateTime: 2021/8/20 14:48
---

--- 统计时间的feature，可以实现定帧、时间缩放、repeat、跳时间等功能
local BaseFeature = require("Runtime.System.X3Game.Modules.Timeline.Feature.BaseFeature")
-- 已知对象池配套的onDiscard方法，此处已经通过别的方式清理过了，没有添加这个方法
---@class TimelineClockFeature:TimelineBaseFeature
local ClockFeature = XECS.class("ClockFeature", BaseFeature, true, 6)

function ClockFeature:_OnCreate()
    self:_Reset()
end

function ClockFeature:_Reset()
    self.tickTime = 0  -- 统计的tick时间
    self.curPlayTime = 0  -- 播放时间
    self.scale = 1  -- 时间缩放
    self.isRepeat = false
    self.leftScaleDuration = nil  -- 当前时间缩放剩余时间
    self.timelineDuration = nil
    self.scaleDeltaTime = 0
end

function ClockFeature:_OnBeforePlay()
    self.timelineDuration = self.timeline.duration
end

function ClockFeature:_OnTick(deltaTime)
    -- 计算当前播放时间
    self.scaleDeltaTime = self.scale * deltaTime
    self.curPlayTime = self.curPlayTime + self.scaleDeltaTime
    -- repeat判断
    if self.isRepeat then
        if self.curPlayTime >= self.timelineDuration then
            self.curPlayTime = 0
        end
    end
    -- ticktime添加
    self.tickTime = self.tickTime + deltaTime
    -- 剩余缩放时间处理
    if self.leftScaleDuration then
        self.leftScaleDuration = self.leftScaleDuration - deltaTime
        if self.leftScaleDuration <= 0 then
            self.leftScaleDuration = nil
            self.timeline:SetTimeScale(1)
        end
    end
end

---@param scale float 缩放比率
---@param duration float 此缩放持续时间（每次设置都会冲掉之前的设置，nil则不设限制）
function ClockFeature:SetScale(scale, duration)
    self.scale = scale
    self.leftScaleDuration = duration
end

function ClockFeature:GetScale()
    return self.scale, self.leftScaleDuration
end

-- 获取缩放后的本帧delta值
---@return float
function ClockFeature:GetScaleDeltaTime()
    return self.scaleDeltaTime
end

---@return float 获取播放时间
function ClockFeature:GetPlayTime()
    return self.curPlayTime
end

---@return float 获取播放时间
function ClockFeature:SetPlayTime(time)
    self.curPlayTime = time
end

-- 设置循环播放
---@param isRepeat boolean 是否循环播放
function ClockFeature:SetRepeat(isRepeat)
    self.isRepeat = isRepeat
end

function ClockFeature:_OnDestroy()
    self:_Reset()
    self:discard()
end

return ClockFeature