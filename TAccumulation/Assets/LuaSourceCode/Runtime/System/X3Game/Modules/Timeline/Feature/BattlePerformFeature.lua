---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by changkong.
--- DateTime: 2021/8/16 16:02
---

-- 表演特性：①从battle中获取男主女主和怪物对象  ②编辑器下battle中没有相关单位现场新建一个 ③播表演时停掉女主的Playable动画并强制显示女主武器
local BaseFeature = require("Runtime.System.X3Game.Modules.Timeline.Feature.BaseFeature")
-- 已知对象池配套的onDiscard方法，此处已经通过别的方式清理过了，没有添加这个方法
---@class TimelineBattlePerformFeature:TimelineBaseFeature
local BattlePerformFeature = XECS.class("BattlePerformFeature", BaseFeature, true, 6)
local X3TimelineUtility = CS.X3.X3TimelineUtility
local PerformPlayableInstance = CS.PerformPlayableInstance
local GameObject = CS.UnityEngine.GameObject
local CharacterEnum = require("Runtime.System.X3Game.Modules.Character.CharacterEnum")

function BattlePerformFeature:_OnBeforeBuild()
    self.generateObjects = {}
    self.performCfg = self.timeline:GetPerformConfig()
    self.womanWeaponGO = nil
    self._oldWeaponVisible = nil

    local womanObj = self:GetWomanGO()
    self.timeline:SetWoman(womanObj)
    self.womanObj = womanObj

    local manObj = self:GetManGO()
    self.timeline:SetMan(manObj)
    self.manObj = manObj

    self.monsterObj = self:GetMonsterGO()
    self.timeline:SetMonster(self.monsterObj)
    self.recordMonsterActive = nil
    self.timeline:SetIsPerform(true)

    self._activeEnemys = self:GetActiveEnemysExceptTarget()

    -- 设置高质量lod
    local performConfig = self.timeline:GetPerformConfig()
    if performConfig and performConfig.IfHPM then
        self.oldLod = CharacterMgr.GetGlobalLOD()
        CharacterMgr.SetGlobalLOD(CharacterEnum.LOD.HD)
    end
    return true
end

function BattlePerformFeature:_OnBuild()
    ---@type CS.PerformPlayableInstance 表演时的女主动画
    self.femalePlayableIns = nil
    ---@type CS.PerformPlayableInstance 表演时的男主动画
    self.malePlayableIns = nil
    self:_InitActorAnim()
    return
end

-- 播放角色表演动画
function BattlePerformFeature:_InitActorAnim()
    local director = self.timeline:GetPlayableDirector()
    local timelineObj = self.timeline:GetResObj()
    if director and  timelineObj then
        local groupType = self.context:GetEStaticSlot()
        -- 女主表演动画
        self.femalePlayableIns = PerformPlayableInstance()
        self.femalePlayableIns:SetAnimatorByGameObject(self.womanObj)
        self.femalePlayableIns:SetOnlyFemale()
        self.femalePlayableIns:SetAnimationGroupType(groupType)
        self.femalePlayableIns:BuildTimelinePerformPlayable(director)
        self.timeline:AddPlayableIns(self.femalePlayableIns)
        -- 男主表演动画
        self.malePlayableIns = PerformPlayableInstance()
        self.malePlayableIns:SetAnimatorByGameObject(self.manObj)
        self.malePlayableIns:SetOnlyMale()
        self.malePlayableIns:SetAnimationGroupType(groupType)
        self.malePlayableIns:BuildTimelinePerformPlayable(director)
        self.timeline:AddPlayableIns(self.malePlayableIns)
        -- 怪物表演动画
        if not self.performCfg.HideEnermy and self.monsterObj then
            self.monsterPlayableIns = PerformPlayableInstance()
            self.monsterPlayableIns:SetAnimatorByGameObject(self.monsterObj)
            self.monsterPlayableIns:SetOnlyMonster()
            self.monsterPlayableIns:SetAnimationGroupType(groupType)
            self.monsterPlayableIns:BuildTimelinePerformPlayable(director)
            self.timeline:AddPlayableIns(self.monsterPlayableIns)
        end
    end
    return
end

-- 停止播放角色材质动画
function BattlePerformFeature:_DestroyActorAnim()
    if self.femalePlayableIns then
        self.femalePlayableIns:Destroy()
        self.femalePlayableIns = nil
    end

    if self.malePlayableIns then
        self.malePlayableIns:Destroy()
        self.malePlayableIns = nil
    end

    if self.monsterPlayableIns then
        self.monsterPlayableIns:Destroy()
        self.monsterPlayableIns = nil
    end
end

function BattlePerformFeature:_OnAfterBuild()
    local director = self.timeline:GetPlayableDirector()
    -- 如果是hold类型的表演，比如战斗结束胜利失败，此处设置不自动销毁（等待外部销毁）
    if X3TimelineUtility.IsDirectorHoldOnEnd(director) then
        self.timeline:SetIsAutoDestroy(false)
    end

    -- 设置时间
    local timelineExtInfo = self.timeline._timelineExtInfo
    if timelineExtInfo and timelineExtInfo.useRangeTime then
        self.timeline:SetTime(timelineExtInfo.rangeStartTime)
        self.timeline:SetDuration(timelineExtInfo.rangeEndTime)
    end

    return true
end

function BattlePerformFeature:_OnBeforePlay()
    self:_SetSubSystemEnable(self.womanObj, false)
    self:_SetSubSystemEnable(self.manObj, false)
    if self.performCfg  then
        -- 设置怪物 HideEnemy如果是true，全部隐藏；如果是false，除了当前目标都隐藏
        if self.monsterObj and self.performCfg.HideEnermy then
            self.recordMonsterActive = self.monsterObj.activeSelf
            self.monsterObj:SetActive(false)
             self:_SetSubSystemEnable(self.monsterObj, false)
        end
    end

    -- 隐藏其余怪物
    if self._activeEnemys then
        for _, actor in ipairs(self._activeEnemys) do
            actor.view:GetGO():SetActive(false)
        end
    end

    if self.womanWeaponGO then
        self._oldWeaponVisible = self.womanWeaponGO.activeSelf
        self.womanWeaponGO:SetActive(true)
    end

end

function BattlePerformFeature:_OnDestroy()
    self:_SetSubSystemEnable(self.womanObj, true)
    self:_SetSubSystemEnable(self.manObj, true)

    if self.monsterObj and self.recordMonsterActive ~= nil then
        self.monsterObj:SetActive(self.recordMonsterActive)
        self:_SetSubSystemEnable(self.monsterObj, true)
    end

    if self.womanWeaponGO and self._oldWeaponVisible ~= nil then
        self.womanWeaponGO:SetActive(self._oldWeaponVisible)
    end

    -- 显示其余怪物
    if self._activeEnemys then
        for _, actor in ipairs(self._activeEnemys) do
            actor.view:GetGO():SetActive(true)
        end
        self._activeEnemys = nil
    end

    self:_DestroyActorAnim()

    if self.generateObjects then
        for _, go in ipairs(self.generateObjects) do
            GameObject.DestroyImmediate(go, true)
        end
        self.generateObjects = nil
    end

    -- 恢复设置lod
    if self.oldLod then
        CharacterMgr.SetGlobalLOD(self.oldLod)
        self.oldLod = nil
    end

    -- 如果有配结束时特效
    local endTimelineEffectPath = self.performCfg and self.performCfg.EndEffectPath
    if endTimelineEffectPath then
        g_BattleClient.timelineMgr:PlaySceneEffect(endTimelineEffectPath)
    end

    self.performCfg = nil
    self.womanWeaponGO = nil
    self.womanObj = nil
    self.manObj = nil
    self.monsterObj = nil
    self.recordMonsterActive = nil
    self._oldWeaponVisible = nil

    self:discard()
end

---@param timelineObj BattleTimeline timeline对象
---@return GameObject 获取女主模型
function BattlePerformFeature:GetWomanGO()
    local go = nil
    local actor = g_BattleClient.battle:GetActor(BattleEntityID.Girl)
    if actor ~= nil then
        go = actor.view:GetGO()
        self.womanWeaponGO = actor.view:GetWeaponGO()
    end
    return go
end

function BattlePerformFeature:_SetSubSystemEnable(target, enable)
    if not target then
        return
    end

    local X3Character = target:GetComponentInChildren(typeof(CS.X3.Character.X3Character))
    if X3Character then
        X3Character:EnableSubsystem(CS.X3.Character.ISubsystem.Type.PhysicsCollider, enable);
        X3Character:EnableSubsystem(CS.X3.Character.ISubsystem.Type.PhysicsCloth, enable);
    end
end

---@return GameObject 获取男主模型
function BattlePerformFeature:GetManGO()
    local go = nil
    local actor = g_BattleClient.battle:GetActor(BattleEntityID.Boy)
    if actor ~= nil then
        go = actor.view:GetGO()
    else
        -- 编辑器下加载男主套装
        if Application.IsEditor() then
            local timelineAsset = self.timeline:GetTimelineAsset()
            if timelineAsset then
                local suitName = X3TimelineUtility.GetManSuitPathInEditor(timelineAsset)
                go = self:_LoadSuitIns(suitName)
            end
        end
    end
    return go
end

---@param timelineObj BattleTimeline timeline对象
---@return GameObject 获取Boos模型
function BattlePerformFeature:GetMonsterGO()
    local go = nil
    ---@type Role
    local female = g_BattleClient.battle:GetActor(BattleEntityID.Girl)
    local actor = female:GetTarget()
    if actor ~= nil then
        go = actor.view:GetGO()
    else
        -- 编辑器下加载怪物模型
        if Application.IsEditor() then
            local timelineAsset = self.timeline:GetTimelineAsset()
            if timelineAsset then
                local suitName = X3TimelineUtility.GetMonsterPathInEditor(timelineAsset)
                go = self:_LoadPrefabIns(suitName)
            end
        end
    end
    return go
end

-- 获取目标之外的所有可见敌方单位
function BattlePerformFeature:GetActiveEnemysExceptTarget()
    ---@type Actor
    local actor = g_BattleClient.battle:GetActor(BattleEntityID.Girl)
    local target = actor:GetTarget()
    local enemys = BattleUtil.GetEnemys(actor, function(targetActor)
        if targetActor ~= target and targetActor.view:IsActive() then
            return true
        else
            return false
        end
    end)
    return enemys
end

---@param suitName string 套装key
function BattlePerformFeature:_LoadSuitIns(suitName)
    if not Application.IsEditor() then
        return
    end

    if not suitName or suitName == "" then
        return
    end

    local go = CharacterMgr.GetInsWithSuitKeySync(suitName)
    if not go then
        Debug.LogErrorFormat("加载套装资源失败：套装key=%s", suitName)
        return
    end
    go:SetActive(true)
    table.insert(self.generateObjects, go)
    return go
end

-- 通过prefab名字加载obj
---@param prefabPath string prefab全路径
function BattlePerformFeature:_LoadPrefabIns(prefabPath)
    if not Application.IsEditor() then
        return
    end
    if not prefabPath or prefabPath == "" then
        return
    end
    local go = X3Res.LoadGameObject(prefabPath)
    if not go then
        Debug.LogErrorFormat("加载GameObject资源失败：全路径=%s", prefabPath)
        return
    end
    go:SetActive(true)
    table.insert(self.generateObjects, go)
    return go
end

return BattlePerformFeature