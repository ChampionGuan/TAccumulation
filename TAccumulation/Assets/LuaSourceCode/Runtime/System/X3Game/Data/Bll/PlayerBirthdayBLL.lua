--- 
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by sms.
--- DateTime: 2023/3/23 12:46
--- 处理关于玩家生日活动相关功能

---@class PlayerBirthdayBLL
local PlayerBirthdayBLL = class("PlayerBirthdayBLL", BaseBll)

---@class PlayerBirthdayEventMap
PlayerBirthdayEventMap = {
    OverallDataUpdate = "PlayerBirthdayOverallDataUpdate",                -- 生日信息整体更新
    BirthdayActivityEnd = "BirthdayActivityEnd",                          -- 生日活动结束
    OfficialGiftUpdate = "PlayerBirthdayOfficialGiftUpdate",              -- 市政赠礼状态更新
    RoleGiftUpdate = "PlayerBirthdayRoleGiftUpdate",                      -- 男主赠礼状态更新
    TimeDataUpdate = "PlayerBirthdayTimeDataUpdate",                      -- 生日时间更新
}

---@class EPlayerBirthdayGiftState 玩家生日礼物状态 (可来自官方赠礼和男主赠礼) 
EPlayerBirthdayGiftState = {
    Lock = 0,           -- 未解锁
    Unlock = 1,         -- 不可领取
    Reward = 2,         -- 可领取
    Completed = 3,      -- 已领取
}

function PlayerBirthdayBLL:OnInit()
    ---@type number
    self.serverOpenTime = nil
    EventMgr.AddListener("UnLockSystem", function(self, sysId)
        if sysId == X3_CFG_CONST.SYSTEM_UNLOCK_MYBIRTHDAY then
            self:CTS_GetBirthdayDataRequest()
        end
    end, self)

    ---daily tick 
    EventMgr.AddListener(Const.Event.TIME_TICK_HOUR, self.CheckRefreshDailyTickTimer, self)
    
    -- 红点刷新逻辑
    EventMgr.AddListener(PlayerBirthdayEventMap.OverallDataUpdate, function(self) 
        self:UpdateRoleGiftRedPoint()
        
        self:UpdateOfficialGiftRedPoint()

        self:CheckRefreshBirthdayActivityEndTimer()
    end, self)
end

function PlayerBirthdayBLL:OnClear()
    EventMgr.RemoveListenerByTarget(self)

    if self.dailyTickTimer then TimerMgr.Discard(self.dailyTickTimer) self.dailyTickTimer = nil end
end

---GM指令接管处理
function PlayerBirthdayBLL:HandleGMCommand(inputList)
    -- 女主生日活动功能测试
    if inputList[3] == "getstoryreward" then
        local roleId = tonumber(inputList[4])
        BllMgr.GetPlayerBirthdayBLL():Debug_GetRewardByRole(roleId)
    elseif inputList[3] == "dump" then
        Debug.LogError("当前生日数据 : " .. table.dump({
            SelfProxyFactory.GetPlayerBirthdayProxy().birthdayBeginTime,
            SelfProxyFactory.GetPlayerBirthdayProxy().birthdayEndTime,
            SelfProxyFactory.GetPlayerBirthdayProxy().anniversaries,
        }))
    elseif inputList[3] == "openrewardwnd" then
        local roleId = tonumber(inputList[4])
        UIMgr.Open(UIConf.PlayerBirthdayRewardWnd, { roleId = roleId, anniversary = BllMgr.GetPlayerBirthdayBLL():GetCurAnniversary() })
    end
end

---@public 刷新生日活动倒计时timer 结束后抛事件
function PlayerBirthdayBLL:CheckRefreshBirthdayActivityEndTimer()
    -- check clear timer
    if self.birthdayEndTimer then TimerMgr.Discard(self.birthdayEndTimer) self.birthdayEndTimer = nil end
    
    if not self:CheckIfBirthdayActivityOpen() then return end
    
    local curTime = GrpcMgr.GetServerTimeToUnixTimeSeconds()
    local endTime = SelfProxyFactory.GetPlayerBirthdayProxy():GetBirthdayEndTime()
    local remainTime = endTime - curTime
    if remainTime and remainTime > 0 and remainTime < 60 * 60 * 24 then
        self.birthdayEndTimer = TimerMgr.AddTimer(remainTime, function()
            EventMgr.Dispatch(PlayerBirthdayEventMap.BirthdayActivityEnd)
        end)
    end
end

---@public 检查当前生日活动是否有奖励可领取包括男主赠礼和市政赠礼
function PlayerBirthdayBLL:CheckIfRewards()
    local isRoleRewardAvailable = false
    local roleCfgList = BllMgr.GetRoleBLL():GetRoleCfgList()
    for _, roleCfg in pairs(roleCfgList) do
        if roleCfg.IsOpen and RedPointMgr.GetCount(X3_CFG_CONST.RED_BIRTHDAY_MAN_REWARD, roleCfg.ID) == 1 then isRoleRewardAvailable = true break end
    end
    local isCityRewardAvailable = self:GetBirthdayOfficialGiftState() == EPlayerBirthdayGiftState.Reward
    return isCityRewardAvailable or isRoleRewardAvailable
end

---@public 每次进入生日活动时的红点逻辑
function PlayerBirthdayBLL:DailyFirstEnterReadBirthdayRedPoint()
    --if RedPointMgr.GetCount(X3_CFG_CONST.RED_BIRTHDAY_REWARD) > 0 then
    --    RedPointMgr.Save(os.time(), X3_CFG_CONST.RED_BIRTHDAY_REWARD)   -- 更新一下当前进入时间
    --    
    --    self:UpdateBirthdayEntryRedPoint()  -- 刷新红点值
    --end
end

-----@public 更新生日活动入口红点
--function PlayerBirthdayBLL:UpdateBirthdayEntryRedPoint()
--    -- 没有奖励肯定没有红点
--    if not self:CheckIfRewards() then RedPointMgr.UpdateCount(X3_CFG_CONST.RED_BIRTHDAY_REWARD, 0) end
--    -- 有奖励还要检查距上次进入活动时间间隔是否超过24h 如果超过才有红点
--    local lastEnterTime = RedPointMgr.GetValue(X3_CFG_CONST.RED_BIRTHDAY_REWARD)
--    local curTime = os.time()
--    if curTime > lastEnterTime + 60 * 60 * 24 then
--        RedPointMgr.UpdateCount(X3_CFG_CONST.RED_BIRTHDAY_REWARD, 1)
--    else
--        RedPointMgr.UpdateCount(X3_CFG_CONST.RED_BIRTHDAY_REWARD, 0)
--    end
--end

---@public 更新男主赠礼红点
---@param roleId int 红点id
function PlayerBirthdayBLL:UpdateRoleGiftRedPoint(roleId)
    if roleId then
        -- 未解锁返回false
        local isUnlock = BllMgr.GetRoleBLL():IsUnlocked(roleId)
        if not isUnlock then
            RedPointMgr.UpdateCount(X3_CFG_CONST.RED_BIRTHDAY_MAN_REWARD, 0, roleId)
            return
        end

        local isRead = RedPointMgr.GetValue(X3_CFG_CONST.RED_BIRTHDAY_MAN_REWARD, roleId)    -- 1为已读记录 0为未读记录
        local isRewardState = self:GetBirthdayGiftStateByRoleId(roleId) == EPlayerBirthdayGiftState.Reward
        
        local redPointCount = isRewardState and 1 or 0
        RedPointMgr.UpdateCount(X3_CFG_CONST.RED_BIRTHDAY_MAN_REWARD, redPointCount, roleId)
    else
        -- 不传入roleId 则更新所有的男主赠礼红点
        local roleList = {}
        local roleCfgList = BllMgr.GetRoleBLL():GetRoleCfgList()
        for i = 1, #roleCfgList do
            if roleCfgList[i].IsOpen == 1 then
                table.insert(roleList, roleCfgList[i].ID)
            end
        end
        
        local overallManReward = 0
        for _, _roleId in pairs(roleList) do
            self:UpdateRoleGiftRedPoint(_roleId)
            
            local redCount = RedPointMgr.GetCount(X3_CFG_CONST.RED_BIRTHDAY_MAN_REWARD, _roleId)
            if redCount > 0 then overallManReward = 1 end
        end
        
        RedPointMgr.UpdateCount(X3_CFG_CONST.RED_BIRTHDAY_MANREWARD, overallManReward)

        -- 非当日的红点
        local openDayIdx = BllMgr.GetPlayerBirthdayBLL():GetCurDayIdxSinceBirthdayBeginTime()
        local overallManRewardNotCurDay = (openDayIdx and openDayIdx > 1) and overallManReward or 0
        local recordDayIdx = RedPointMgr.GetValue(X3_CFG_CONST.RED_BIRTHDAY_REWARD_ACTIVITY)
        if recordDayIdx > openDayIdx then RedPointMgr.Save(0, X3_CFG_CONST.RED_BIRTHDAY_REWARD_ACTIVITY) recordDayIdx = 0 end   -- 这里是处理 跨年生日 的情况 第二年生日恢复默认值
        if openDayIdx == recordDayIdx then
            RedPointMgr.UpdateCount(X3_CFG_CONST.RED_BIRTHDAY_MANREWARD_ACTIVITY, 0)
        else
            RedPointMgr.UpdateCount(X3_CFG_CONST.RED_BIRTHDAY_MANREWARD_ACTIVITY, overallManRewardNotCurDay)
        end
    end
end

---@public 更新市政赠礼红点
function PlayerBirthdayBLL:UpdateOfficialGiftRedPoint()
    local isRewardState = self:GetBirthdayOfficialGiftState() == EPlayerBirthdayGiftState.Reward

    local redPointCount = isRewardState and 1 or 0
    RedPointMgr.UpdateCount(X3_CFG_CONST.RED_BIRTHDAY_CITYREWARD, redPointCount)

    -- 非当日的红点
    local openDayIdx = BllMgr.GetPlayerBirthdayBLL():GetCurDayIdxSinceBirthdayBeginTime()
    local redPointCountNotCurDay = (openDayIdx and openDayIdx > 1) and redPointCount or 0
    local recordDayIdx = RedPointMgr.GetValue(X3_CFG_CONST.RED_BIRTHDAY_REWARD_ACTIVITY)
    if recordDayIdx > openDayIdx then RedPointMgr.Save(0, X3_CFG_CONST.RED_BIRTHDAY_REWARD_ACTIVITY) recordDayIdx = 0 end   -- 这里是处理 跨年生日 的情况 第二年生日恢复默认值
    if openDayIdx == recordDayIdx then
        RedPointMgr.UpdateCount(X3_CFG_CONST.RED_BIRTHDAY_CITYREWARD_ACTIVITY, 0)
    else
        RedPointMgr.UpdateCount(X3_CFG_CONST.RED_BIRTHDAY_CITYREWARD_ACTIVITY, redPointCountNotCurDay)
    end
end

---@public 生日活动入口红点每天点进去的已读红点
function PlayerBirthdayBLL:CheckReadBirthdayActivityRedPoint()
    -- 保存当前进入时的天数
    local openDayIdx = BllMgr.GetPlayerBirthdayBLL():GetCurDayIdxSinceBirthdayBeginTime()
    RedPointMgr.Save(openDayIdx, X3_CFG_CONST.RED_BIRTHDAY_REWARD_ACTIVITY)
    
    -- 刷新红点
    self:UpdateRoleGiftRedPoint()

    self:UpdateOfficialGiftRedPoint()
end

---@public 初始化拉取数据
function PlayerBirthdayBLL:OnEnterGame()
    self:CTS_GetBirthdayDataRequest()
end

---@public 条件判断
function PlayerBirthdayBLL:CheckCondition(id, params, iDataProvider)
    if id == X3_CFG_CONST.CONDITION_ACTIVITY_MYBIRHTDAY then
        local flag = tonumber(params[1])
        local isInBirthdayAct = self:CheckIfBirthdayActivityOpen()
        return (flag == 0 and not isInBirthdayAct) or (flag == 1 and isInBirthdayAct)
    elseif id == X3_CFG_CONST.CONDITION_ACTIVITY_MYBIRHTDAY_DURATION then
        if not self:CheckIfBirthdayActivityOpen() then return false end
        local startDay = tonumber(params[1])
        local endDay = tonumber(params[2])
        local curDayIdx = self:GetCurDayIdxSinceBirthdayBeginTime()
        return curDayIdx >= startDay and curDayIdx <= endDay
    end
end

---@private 每日重置刷新定时器
function PlayerBirthdayBLL:CheckRefreshDailyTickTimer(hour)
    if not hour or hour ~= 0 then return end
    if self.dailyTickTimer then TimerMgr.Discard(self.dailyTickTimer) self.dailyTickTimer = nil end
    
    -- 如果已经开启活动了 return
    if self:CheckIfBirthdayActivityOpen() then return end
    
    -- add random delay timer
    self.dailyTickTimer = TimerMgr.AddTimer(
            math.random(1, 300),
            function()
                -- 这里给个日期限制
                local cur_time = TimerMgr.GetCurDate()
                local cur_day = cur_time.day
                local cur_month = cur_time.month

                -- 只有在刚好过0点的生日当天才会tick server
                local birth_month, birth_day = BllMgr.GetPlayerBLL():GetDecodedBirthday()
                if birth_month == cur_month and birth_day == cur_day then
                    self:CTS_DailyTickBirthday()
                end
            end
    )
end

---@public 检查系统是否解锁
function PlayerBirthdayBLL:CheckIfSysUnlock()
    return SysUnLock.IsUnLock(X3_CFG_CONST.SYSTEM_UNLOCK_LOVEPOINT) and SysUnLock.IsUnLock(X3_CFG_CONST.SYSTEM_UNLOCK_MYBIRTHDAY)
end

---@public 记录开服时间
---@param serverOpenTime number 服务器开服时间
function PlayerBirthdayBLL:SetServerOpenTime(serverOpenTime)
    self.serverOpenTime = serverOpenTime
end

---@public 获取当年玩家生日市政赠礼状态
---@return EPlayerBirthdayGiftState
function PlayerBirthdayBLL:GetBirthdayOfficialGiftState()
    if not self:CheckIfBirthdayActivityOpen() then return EPlayerBirthdayGiftState.Lock end
    
    local curBirthdayData = SelfProxyFactory.GetPlayerBirthdayProxy():GetCurBirthdayData()
    if not curBirthdayData or not curBirthdayData.BirthdayFromCity then return EPlayerBirthdayGiftState.Reward end
    local officialGiftData = curBirthdayData.BirthdayFromCity
    return officialGiftData.Rewarded and EPlayerBirthdayGiftState.Completed or EPlayerBirthdayGiftState.Reward
end

---@public 获取当年玩家生日男主赠礼状态
---@return EPlayerBirthdayGiftState
function PlayerBirthdayBLL:GetBirthdayGiftStateByRoleId(roleId)
    if not self:CheckIfBirthdayActivityOpen() or not BllMgr.GetRoleBLL():IsUnlocked(roleId) then return EPlayerBirthdayGiftState.Lock end

    local curBirthdayData = SelfProxyFactory.GetPlayerBirthdayProxy():GetCurBirthdayData()
    if not curBirthdayData or not curBirthdayData.BirthdayStories then return EPlayerBirthdayGiftState.Reward end
    local roleGiftData = curBirthdayData.BirthdayStories[roleId]
    return (roleGiftData and roleGiftData.Rewarded) and EPlayerBirthdayGiftState.Completed or EPlayerBirthdayGiftState.Reward
end

---@public 返回当年对应男主的生日祝福剧情是否已阅读
function PlayerBirthdayBLL:CheckIfBirthdayDialogueReadByRoleId(roleId)
    local curBirthdayData = SelfProxyFactory.GetPlayerBirthdayProxy():GetCurBirthdayData()
    if not curBirthdayData or not curBirthdayData.BirthdayStories then return false end
    local roleStoryData = curBirthdayData.BirthdayStories[roleId]
    if roleStoryData and roleStoryData.Read then return true end
    return false
end

---@public 返回当年对应男主的生日祝福剧情是否已校验
function PlayerBirthdayBLL:CheckIfBirthdayDialogueCheckedByRoleId(roleId)
    local curBirthdayData = SelfProxyFactory.GetPlayerBirthdayProxy():GetCurBirthdayData()
    if not curBirthdayData or not curBirthdayData.BirthdayStories then return false end
    local roleStoryData = curBirthdayData.BirthdayStories[roleId]
    if roleStoryData and roleStoryData.DialogueChecked then return true end
    return false
end

---@public 获取玩家生日活动剩余时间格式化字符串
---@return string 
function PlayerBirthdayBLL:GetBirthdayActivityRemainTime()
    local birthdayEndTime = SelfProxyFactory.GetPlayerBirthdayProxy():GetBirthdayEndTime()
    if not birthdayEndTime or birthdayEndTime <= 0 then return "" end
    return GameHelper.GetLeftTimeDes(birthdayEndTime,nil,nil,true)
end

---@public 返回当前玩家生日活动是否开启
---@return bool
function PlayerBirthdayBLL:CheckIfBirthdayActivityOpen()
    -- 牵绊度系统解锁
    if not self:CheckIfSysUnlock() then return end
    
    -- 保证至少有一个男主解锁
    local roleCfgList = BllMgr.GetRoleBLL():GetRoleCfgList()
    local isRoleUnlock = false
    for _, roleCfg in pairs(roleCfgList) do
        if roleCfg.IsOpen and BllMgr.GetRoleBLL():IsUnlocked(roleCfg.ID) then isRoleUnlock = true end
    end
    if not isRoleUnlock then return false end
    
    -- 检查时间
    local curTime = TimerMgr.GetCurTimeSeconds() + 1
    local startTime = SelfProxyFactory.GetPlayerBirthdayProxy():GetBirthdayBeginTime()
    local endTime = SelfProxyFactory.GetPlayerBirthdayProxy():GetBirthdayEndTime()
    if not startTime or not endTime or startTime <= 0 or endTime <= 0 then return false end
    
    return startTime <= curTime and curTime <= endTime
end

---@public 玩家生日活动跨天重置tick
function PlayerBirthdayBLL:CTS_DailyTickBirthday()
    GrpcMgr.SendRequest(RpcDefines.BirthdayDailyRefreshRequest, {})
end

---@public 拉取玩家生日活动数据
function PlayerBirthdayBLL:CTS_GetBirthdayDataRequest()
    if SysUnLock.IsUnLock(X3_CFG_CONST.SYSTEM_UNLOCK_MYBIRTHDAY) then
        GrpcMgr.SendRequestAsync(RpcDefines.GetBirthdayDataRequest, {})
    end
end

---@public 领取玩家生日市政赠礼礼物
function PlayerBirthdayBLL:CTS_SendGetOfficialGiftRequest()
    GrpcMgr.SendRequest(RpcDefines.ClaimCityRewardRequest, {})
end

---@public 领取玩家生日男主礼物
function PlayerBirthdayBLL:CTS_SendGetRoleGiftRequest(roleId)
    GrpcMgr.SendRequest(RpcDefines.ClaimStoryRewardRequest, {RoleID = roleId}, true)
end

---@public 阅读男主剧情
function PlayerBirthdayBLL:CTS_SendReadRoleDialogue(roleId)
    GrpcMgr.SendRequest(RpcDefines.ReadStoryRequest, {RoleID = roleId}, true)
end

---@public 获取当前所属周年数 (计算方法与服务器保持一致)
---@return number 周年数
function PlayerBirthdayBLL:GetCurAnniversary()
    local curServerTime = GrpcMgr.GetServerTimeToUnixTimeSeconds()
    local serverOpenTime = self.serverOpenTime

    local server_open_date = os.date("!*t", serverOpenTime)
    local current_date = os.date("!*t", curServerTime)

    local years_since_open = current_date.year - server_open_date.year
    if current_date.month < server_open_date.month or (current_date.month == server_open_date.month and current_date.day < server_open_date.day) then
        years_since_open = years_since_open - 1
    end
    return years_since_open + 1
end

---@public 获取当前是生日活动开始第几天
---@return number 开始第几天
function PlayerBirthdayBLL:GetCurDayIdxSinceBirthdayBeginTime()
    local startTime = SelfProxyFactory.GetPlayerBirthdayProxy():GetBirthdayBeginTime()
    return TimeUtil.GetOpenDay(startTime)
end

---@public 根据当前设置的生日获取下一个生日时间戳 (客户端时间预测 用于手机推送)
---@return number os时间戳
function PlayerBirthdayBLL:GetNextBirthdayTimestamp()
    if self:CheckIfBirthdayActivityOpen() then return end                           -- 如果当前生日活动正在进行则返回空
    local birthday = SelfProxyFactory.GetPlayerInfoProxy():GetBirthDay()
    if not birthday or birthday <= 0 then return end                                -- 生日未设置 返回空
    local birth_month, birth_day = BllMgr.GetPlayerBLL():GetDecodedBirthday(birthday)
    local curDate = GrpcMgr.GetServerTime()
    if (curDate.Month < birth_month) or (curDate.Month == birth_month and curDate.Day < birth_day) then
        return os.time({ year = curDate.Year, month = birth_month, day = birth_day, hour = 0, min = 0, sec = 0 })
    else
        return os.time({ year = curDate.Year + 1, month = birth_month, day = birth_day, hour = 0, min = 0, sec = 0 })
    end
end

---@public 检查并设置剧情已读
---@param roleId number 男主id
function PlayerBirthdayBLL:SetDialogueRead(roleId)
    if self:CheckIfBirthdayDialogueReadByRoleId(roleId) then return end
    
    self:CTS_SendReadRoleDialogue(roleId)
end

---@public 检查并获取男主礼物
---@param roleId number 角色Id
---@param callback function 如果发送协议则执行回调
function PlayerBirthdayBLL:CheckGetRoleGift(roleId, callback)
    local giftStateByRole = self:GetBirthdayGiftStateByRoleId(roleId)
    if not giftStateByRole or giftStateByRole ~= EPlayerBirthdayGiftState.Reward then return end
    
    self:CTS_SendGetRoleGiftRequest(roleId)
    if callback then callback() end
end

---@public 根据当年生日活动剧情阅读情况判断是否是首次进入生日活动
function PlayerBirthdayBLL:CheckIfBirthdayActivityFirstOpen()
    local curBirthdayData = SelfProxyFactory.GetPlayerBirthdayProxy():GetCurBirthdayData()
    if not curBirthdayData or not curBirthdayData.BirthdayStories then return true end
    
    -- 有任意男主剧情已阅读说明非首次进入
    for roleId, data in pairs(curBirthdayData.BirthdayStories) do
        if data.Read then return false end
    end
    
    return true
end

---@public 生日活动首次进入游戏时跳转剧情 (进入牵绊度最高的男主生日祝福剧情)
---@return bool 返回是否成功进入剧情
function PlayerBirthdayBLL:CheckEnterBirthdayDialogue()
    local __checkFirstEnter = function()
        if not self:CheckIfBirthdayActivityOpen() then return false end   -- 当前生日活动是否开启

        if not self:CheckIfBirthdayActivityFirstOpen() then return false end  -- 检查是否首次进入当年生日活动剧情
        
        return true
    end
    
    if not __checkFirstEnter() then return false end

    -- 牵绊度排序取最高的男主id （如果最高排序的未解锁则直接返回）
    local maxLoveLevelRoleId = BllMgr.GetLovePointBLL():GetMaxPointRole()
    
    -- 检查配置是否合法
    local __checkConfig = function()
        local curAnniversary = BllMgr.GetPlayerBirthdayBLL():GetCurAnniversary()
        local curBirthdayStoryCfg = LuaCfgMgr.GetDataByCondition("MyBirthdayStory", {Role = maxLoveLevelRoleId, Anniversary = curAnniversary})
        if not curBirthdayStoryCfg then Debug.LogFatal("curBirthdayStoryCfg not found ? " .. table.dump({maxLoveLevelRoleId, curAnniversary})) return false end
        return true
    end

    if not __checkConfig() then return false end
    
    -- 进入剧情
    local __enterDialogue = function()
        if not __checkFirstEnter() then ErrandMgr.End(X3_CFG_CONST.POPUP_SPECIALTYPE_ACTIVITY_MYBIRTHDAY) return false end
        UICommonUtil.WhiteScreenIn(function()
            GameStateMgr.Switch(GameState.PlayerBirthdayDialogue, {roleId = maxLoveLevelRoleId, endCallback = function()
                ErrandMgr.End(X3_CFG_CONST.POPUP_SPECIALTYPE_ACTIVITY_MYBIRTHDAY)
            end})
        end)
    end
    ErrandMgr.AddWithCallBack(X3_CFG_CONST.POPUP_SPECIALTYPE_ACTIVITY_MYBIRTHDAY, __enterDialogue)
    
    return true
end

---@public 模式下发送领奖协议 [Debug]
function PlayerBirthdayBLL:Debug_GetRewardByRole(roleId)
    BllMgr.GetPlayerBirthdayBLL():SetDialogueRead(roleId)

    ---@param reply pbcmessage.ClaimStoryRewardReply
    local function __onGetStoryReward_debug(reply)
        if not table.isnilorempty(reply and reply.RewardList) then
            UICommonUtil.ShowRewardPopTips(reply.RewardList, 2)
        end
    end
    EventMgr.AddListenerOnce("ClaimStoryRewardReply", __onGetStoryReward_debug)
    BllMgr.GetPlayerBirthdayBLL():CheckGetRoleGift(roleId)
end

return PlayerBirthdayBLL