---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by aoliao.
--- DateTime: 2023/12/20 17:47
---ActivityDIYCollectBLL
---@class ActivityDIYCollectBLL:BaseBll
local ActivityDIYCollectBLL = class("ActivityDIYCollectBLL", BaseBll)
local ActivityDIYCollectConst = require("Runtime.System.X3Game.Modules.Activity.ActivityDIYCollect.Data.ActivityDIYCollectConst")
---@type ActivityHangUpConst
local ActivityHangUpConst = require("Runtime.System.X3Game.GameConst.ActivityHangUpConst")

function ActivityDIYCollectBLL:Init(activityID, activityDiyCollection)
    self:InitCfg(activityID)
    local v = self.cfg[activityID]
    if v then
        for k, j in ipairs(v) do
            j.isCheck = activityDiyCollection[j.cfg.DIYPartID] and true or false
            if self:GetIsUnlock(j.cfg) then
                Debug.LogError("redpoint id => ",self:GetRedPointId(activityID,j.cfg.DIYPartID))
                RedPointMgr.UpdateCount(X3_CFG_CONST.RED_ACTIVITY_RB_SEARCHSTORY_ITEM, j.isCheck and 0 or 1, self:GetRedPointId(activityID,j.cfg.DIYPartID))
            end
        end
    end
    EventMgr.AddListener(ActivityHangUpConst.EventMap.DataUpdate, self.OnItemChangeBack, self)
end

function ActivityDIYCollectBLL:OnInit()

end

function ActivityDIYCollectBLL:OnItemChangeBack()
    for i, v in pairs(self.cfg) do
        for k, j in ipairs(v) do
            if not j.isCheck and self:GetIsUnlock(j.cfg) then
                RedPointMgr.UpdateCount(X3_CFG_CONST.RED_ACTIVITY_RB_SEARCHSTORY_ITEM, 1, self:GetRedPointId(i,j.cfg.DIYPartID))
            end
        end
    end
end
---@param activityID number 活动ID
function ActivityDIYCollectBLL:InitCfg(activityID)
    if not self.cfg then
        self.cfg = {}
    end
    local allParts = LuaCfgMgr.GetAll("ActivityDIYModelInfo")
    for _, v in pairs(allParts) do
        if v.ActivityID then
            for _, id in pairs(v.ActivityID) do
                if id == activityID then
                    if self.cfg[id] == nil then
                        self.cfg[id] = {}
                    end
                    if v.SpType == ActivityDIYCollectConst.NormalType then
                        local hadAdd = false
                        for _i, _v in ipairs(self.cfg[id]) do
                            if _v.cfg.DIYPartID == v.DIYPartID then
                                hadAdd = true
                                break
                            end
                        end
                        if not hadAdd then
                            self.cfg[id][#self.cfg[id] + 1] = {
                                cfg = v,
                                isCheck = false,
                            }
                        end
                    end
                end
            end
        end
    end
    for k, v in pairs(self.cfg) do
        table.sort(v,function (a,b)
            return a.cfg.Order < b.cfg.Order
        end)
    end
end
---@return table 获取所有配置
function ActivityDIYCollectBLL:GetCfg()
    return self.cfg
end

function ActivityDIYCollectBLL:GetCfgByActivityId(activityId)
    local result = self.cfg[activityId]
    if not result then
        Debug.LogError("ActivityDIYCollect Cfg Is Null, ActivityId => ",activityId)
        result = {}
    end
    return result
end
---@param activityID number
function ActivityDIYCollectBLL:UpdateCollectSate(DiyModelList,activityID)
    local v = self.cfg[activityID]
    if v then
        for k, j in ipairs(v) do
            if table.containsvalue(DiyModelList, j.cfg.DIYPartID) then
                j.isCheck = true
                RedPointMgr.UpdateCount(X3_CFG_CONST.RED_ACTIVITY_RB_SEARCHSTORY_ITEM, 0, self:GetRedPointId(activityID,j.cfg.DIYPartID))
            end
        end
    else
        Debug.Log("Collect Activity Cfg Is Null ,Id => ",activityID)
    end
end


function ActivityDIYCollectBLL:GetRedPointId(activityId,DIYPartID)
    return string.format("%s_%s",activityId,DIYPartID)
end

function ActivityDIYCollectBLL:RequestCollectState(activityId, DiyModelList)
    local messageBody = PoolUtil.GetTable()
    messageBody.ActivityID = activityId
    messageBody.DiyModelList = DiyModelList
    GrpcMgr.SendRequest(RpcDefines.ActivityDiyModelMarkRequest, messageBody, true)
    PoolUtil.ReleaseTable(messageBody)
end

function ActivityDIYCollectBLL:GetIsUnlock(cfg)
    return (cfg.SpType == ActivityDIYCollectConst.NormalType and BllMgr.GetItemBLL():GetItemNum(cfg.DIYPartID) > 0)
end

---获取对话IDList
---@param dialogueID int 起始对话ID
---@param resultList int[] 空table，用于记录获取的对话IDList
function ActivityDIYCollectBLL:GetTextChatIDList(dialogueID, resultList)
    local nextTextChatID = dialogueID or 0
    while nextTextChatID > 0 do
        table.insert(resultList, nextTextChatID)
        nextTextChatID = self:GetNextTextChatID(nextTextChatID)
    end
end

---获取下一个对话ID
---@param dialogueID int 对话ID
function ActivityDIYCollectBLL:GetNextTextChatID(dialogueID)
    local nextTextChatID = 0

    local textChatCfg = LuaCfgMgr.Get("ActivityTextChat", dialogueID)
    local weightList = PoolUtil.GetTable()
    if textChatCfg and textChatCfg.NextID then
        weightList[0] = 0
        for i = 1, #textChatCfg.NextID do
            local nextID = textChatCfg.NextID[i]
            local nextTextChatCfg = LuaCfgMgr.Get("ActivityTextChat", nextID)
            local nextWeight = nextTextChatCfg.Weight == 0 and 1 or nextTextChatCfg.Weight
            weightList[i] = weightList[i - 1] + nextWeight
        end

        local totalWeight = weightList[#weightList]
        local resultWeight = math.random(0, totalWeight)

        local resultIndex = 1
        for i = #weightList, 1, -1 do
            if resultWeight > weightList[i - 1] then
                resultIndex = i
                break
            end
        end
        nextTextChatID = textChatCfg.NextID[resultIndex]
    end

    PoolUtil.ReleaseTable(weightList)

    return nextTextChatID
end
return ActivityDIYCollectBLL