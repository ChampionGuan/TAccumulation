---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by doudou.
--- DateTime: 2023/12/15 15:20
---@class ActivityDIYModelBLL:BaseBll
local ActivityDIYModelBLL = class("ActivityDIYModelBLL", BaseBll)
function ActivityDIYModelBLL:OnInit()

end

function ActivityDIYModelBLL:GetDIYModel(activityId, includeExtraPart)
    local selectPart = PoolUtil.GetTable()
    local recordParts = SelfProxyFactory.GetActivityDIYModelProxy():GetDIYMap(activityId)
    if recordParts then
        for k, v in pairs(recordParts) do
            selectPart[k] = v
        end
    end

    local allParts = LuaCfgMgr.GetAll("ActivityDIYModelInfo")
    for _, v in pairs(allParts) do
        if v.ActivityID then
            for _, id in pairs(v.ActivityID) do
                if id == activityId and selectPart[v.TypeGroupID] == nil and v.Default == 1 then
                    selectPart[v.TypeGroupID] = v.DIYPartID
                end
            end
        end
    end

    local cakeRoot = GameObjectUtil.CreateGameObject("CakeRoot")
    GameObjectUtil.SetLocalScale(cakeRoot, 1, 1, 1)
    GameObjectUtil.SetActive(cakeRoot, true)
    for _, cfgId in pairs(selectPart) do
        local cfg = LuaCfgMgr.Get("ActivityDIYModelInfo", cfgId)
        if not string.isnilorempty(cfg.ModelResource) then
            local part = Res.LoadGameObject(cfg.ModelResource)
            if part then
                GameObjectUtil.SetParent(part, cakeRoot)
                GameObjectUtil.SetLocalPosition(part, 0, 0, 0)
                GameObjectUtil.SetLocalScale(part, 1, 1, 1)
                GameObjectUtil.SetLocalRotation(part, 0, 0, 0)
                GameObjectUtil.SetActive(part, true)
            end
        end

        if not string.isnilorempty(cfg.ExtraPart) and includeExtraPart then
            local part = Res.LoadGameObject(cfg.ExtraPart)
            if part then
                GameObjectUtil.SetParent(part, cakeRoot)
                GameObjectUtil.SetLocalPosition(part, 0, 0, 0)
                GameObjectUtil.SetLocalScale(part, 1, 1, 1)
                GameObjectUtil.SetLocalRotation(part, 0, 0, 0)
                GameObjectUtil.SetActive(part, true)
            end
        end
    end

    PoolUtil.ReleaseTable(selectPart)

    return cakeRoot
end

function ActivityDIYModelBLL:HasRecord(activityId)
    return SelfProxyFactory.GetActivityDIYModelProxy():GetDIYMap(activityId) ~= nil
end

function ActivityDIYModelBLL:SaveDIYModel(activityId, diyMap)
    local messageBody = PoolUtil.GetTable()
    messageBody.ActivityID = activityId
    messageBody.DIYMap = diyMap
    GrpcMgr.SendRequest(RpcDefines.ActivityDiyModelSetRequest, messageBody, true)
    PoolUtil.ReleaseTable(messageBody)
end

-- 获取蜡烛节点名
function ActivityDIYModelBLL:GetCandleNodeName(activityId)
    local diyMap = SelfProxyFactory.GetActivityDIYModelProxy():GetDIYMap(activityId)
    if table.isnilorempty(diyMap) then
        -- 获取默认的节点
        local defaultCfgList = LuaCfgMgr.GetListByCondition("ActivityDIYModelInfo", {Default = 1})
        for _, v in ipairs(defaultCfgList) do
            if not string.isnilorempty(v.ExtraPart) then return v.ExtraPart end
        end
    else
        for typeId, partId in pairs(diyMap) do
            local partCfg = LuaCfgMgr.Get("ActivityDIYModelInfo", partId)
            if table.isnilorempty(partCfg) then return end

            if not string.isnilorempty(partCfg.ExtraPart) then return partCfg.ExtraPart end
        end
    end

    Debug.LogError("CandleNode not found? check cfg: " .. table.dump({diyMap}))
    return
end

function ActivityDIYModelBLL:CheckCondition(id, params)
    if id == X3_CFG_CONST.CONDITION_ACTIVITY_RB_SAVECAKE then
        if params and #params >= 2 then
            if tonumber(params[2]) == 1 then
                return self:HasRecord(tonumber(params[1]))
            else
                return not self:HasRecord(tonumber(params[1]))
            end
        else
            Debug.LogErrorFormat("ActivityDIYModelBLL:CheckCondition[%d], not enough parameters", id)
            return false
        end
    end
end

return ActivityDIYModelBLL