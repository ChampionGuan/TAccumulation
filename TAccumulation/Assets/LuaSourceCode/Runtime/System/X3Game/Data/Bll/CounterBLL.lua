---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by muchen.
--- DateTime: 2023/7/27 17:24
---@class CounterBLL
local CounterBLL = class("CounterBLL", BaseBll)

function CounterBLL:OnInit()
    self.counterDataDirtyList = {}
    TimerMgr.AddTimer(0.5, self.CounterUpdateDirty, self, true)
end

---客户端Counter上报数据
---@param counterType int
---@param addNum int
---@param params table<int>
---@param param6 int
---@param param7 int
function CounterBLL:SetCounterUpdateData(counterType, addNum, params, param6, param7)
    local counterData = {}
    counterData.CounterType = counterType
    counterData.AddNum = addNum
    if params then
        counterData.Params = params
    end
    if param6 then
        counterData.Param6 = param6
    end
    if param7 then
        counterData.Param7 = param7
    end
    table.insert(self.counterDataDirtyList, counterData)
end

function CounterBLL:CounterUpdateDirty()
    if #self.counterDataDirtyList <= 0 then
        return
    end
    local dirtyList = PoolUtil.GetTable()
    for i = 1, #self.counterDataDirtyList do
        local counterData = self.counterDataDirtyList[i]
        table.insert(dirtyList, #dirtyList + 1, counterData)
    end
    table.clear(self.counterDataDirtyList)
    if #dirtyList > 0 then
        local messageBody = PoolUtil.GetTable()
        messageBody.Counters = dirtyList
        GrpcMgr.SendRequestAsync(RpcDefines.CounterUpdateRequest, messageBody)
        PoolUtil.ReleaseTable(messageBody)
    end
    PoolUtil.ReleaseTable(dirtyList)
end

function CounterBLL:OnClear()
    table.clear(self.counterDataDirtyList)
end
---查询工具用协议
function CounterBLL.SendGMTestRequest(counterData, counterTableData, func)
    local counterData = {
        CounterType = counterData.type,
        AddNum = counterData.addNum,
        Params = GameHelper.ToTable(counterData.paramList),
        Param6 = counterData.param6,
        Param7 = counterData.param7,
    }
    local counterTableData = {
        Params = GameHelper.ToTable(counterTableData.paramList),
        Param6 = GameHelper.ToTable(counterTableData.param6List),
        Param7 = GameHelper.ToTable(counterTableData.param7List),
    }
    local messageBody = {
        Data = counterData,
        TableData = counterTableData
    }
    GrpcMgr.SendRequestAsync(RpcDefines.CounterGMTestRequest, messageBody)
end

function CounterBLL.SendOpenGMLogRequest()
    GrpcMgr.SendRequestAsync(RpcDefines.CounterOpenGMLogRequest, {})
end
return CounterBLL
