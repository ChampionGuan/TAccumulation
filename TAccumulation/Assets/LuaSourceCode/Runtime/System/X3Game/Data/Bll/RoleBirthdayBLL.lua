--- 
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by sms.
--- DateTime: 2023/12/6 12:46
--- 男主生日功能相关

---@class RoleBirthdayBLL
local RoleBirthdayBLL = class("RoleBirthdayBLL", BaseBll)

---@type ActivityCenterConst
local ActivityCenterConst = require("Runtime.System.X3Game.GameConst.ActivityCenterConst")

local MainHomeConst = require("Runtime.System.X3Game.Modules.MainHome.Data.MainHomeConst")

------------------------------------------------------------------------------------------------------------------------
local logOn = true
local errLogOn = true

---@param self RoleBirthdayBLL
local function __log(self, _logContent)
    if logOn then
        Debug.LogError(string.format("【男主生日】 Log: %s", _logContent))
    end
end
RoleBirthdayBLL.Log = __log

---@param self RoleBirthdayBLL
local function __logError(self, _logContent)
    if errLogOn then
        Debug.LogError(string.format("【男主生日】 ErrorLog: %s", _logContent))
    end
end
RoleBirthdayBLL.LogError = __logError
------------------------------------------------------------------------------------------------------------------------

-- 剧情活动类型下的客户端类型为2 男主生日用这个
local DIALOGUE_ACTIVITY_CLIENT_TYPE = 2

function RoleBirthdayBLL:OnInit()
    ---@type table<number, GameObject> key: activityId value: obj 用于存储已注入的DIY GO
    self.injectedDIYMap = {}
    ---@type table<number, number> 活动Id列表
    self.focusActivityIdList = {}
    
    X3DataMgr.Subscribe(X3DataConst.X3Data.ActivityDialogue, self.UpdateAllDialogueRedPoint, self, X3DataConst.X3DataField.ActivityDialogue.UnlockIDs)
    X3DataMgr.Subscribe(X3DataConst.X3Data.ActivityDialogue, self.UpdateAllDialogueRedPoint, self, X3DataConst.X3DataField.ActivityDialogue.FinishIDs)

    EventMgr.AddListener("TaskEventCheckRp", self.OnTaskCheckRp, self)
    EventMgr.AddListener(GameConst.TaskEvent.TaskStatusChange, self.OnTaskCheckRp, self)
    EventMgr.AddListener(ActivityCenterConst.EventType.REWARD_CLAIM_REPLY, self.OnActivityRewardUpdate, self)
end

function RoleBirthdayBLL:OnClear()
    EventMgr.RemoveListenerByTarget(self)
    X3DataMgr.UnsubscribeWithTarget(self)

    self.injectedDIYMap = {}
    self.focusActivityIdList = {}
end

-- 任务红点检查
function RoleBirthdayBLL:OnActivityRewardUpdate(rewards,activityId)
    self:OnTaskCheckRp()
end

-- 任务红点检查
function RoleBirthdayBLL:OnTaskCheckRp(taskId)
    local shouldCheck = false
    if taskId then
        local config = BllMgr.GetTaskBLL():GetTaskCfg(taskId)
        if config and config.TaskType == Define.EumTaskType.Activity then
            shouldCheck = true
        end
    else
        shouldCheck = true
    end
    if shouldCheck then
        self:OnTaskDataUpdate(taskId)
    end
end

-- GM命令接管
function RoleBirthdayBLL:HandleGMCommand(inputList)
    Debug.LogError("【男主生日】GM命令执行: " .. table.dump(inputList))
    
    if inputList[3] == "logon" then
        logOn = true
    elseif inputList[3] == "logoff" then
        logOn = false
    end
end

-- 登陆时获取活动数据
function RoleBirthdayBLL:SyncActivity(activityId)
    -- 更新剧情红点
    self:UpdateAllDialogueRedPoint()
    
    -- 更新任务红点
    self:OnTaskDataUpdate()
end

-- 获取活动共计天数
function RoleBirthdayBLL:GetBirthdayTotalDays(activityId)
    local cfg = LuaCfgMgr.Get("ActivitySundryConfig", activityId, RoleBirthdayEnum.SundryParaType.TotalDays)
    if table.isnilorempty(cfg) then return end
    
    return tonumber(cfg.Value)
end

-- 这里是获取奖励展示在商店配置中的shopGroupId
function RoleBirthdayBLL:GetShowRewardShopGroupId(activityId)
    local cfg = LuaCfgMgr.Get("ActivitySundryConfig", activityId, RoleBirthdayEnum.SundryParaType.ShopGroupCfg)
    if table.isnilorempty(cfg) then return end

    return cfg.Value
end

-- 这里检查蛋糕点击弹出tips的条件
function RoleBirthdayBLL:CheckCakeClickCondition(activityId)
    local cfg = LuaCfgMgr.Get("ActivitySundryConfig", activityId, RoleBirthdayEnum.SundryParaType.ClickTipCondition)
    if table.isnilorempty(cfg) then return end
    local conditionGroupId = cfg.Value
    return ConditionCheckUtil.CheckConditionByCommonConditionGroupId(conditionGroupId)
end

-- 这里检查蛋糕点击弹出tips的条件
function RoleBirthdayBLL:GetCakeClickTipList(activityId)
    local cfg = LuaCfgMgr.Get("ActivitySundryConfig", activityId, RoleBirthdayEnum.SundryParaType.TipList)
    if table.isnilorempty(cfg) then return end
    
    return cfg.Value
end

-- 获取生日活动剩余时间格式化字符串
---@return string
function RoleBirthdayBLL:GetBirthdayActivityRemainTime(activityId)
    if not activityId then return end
    local activityCfg = BllMgr.GetActivityCenterBLL():GetActivityCMSConfig(activityId)
    if table.isnilorempty(activityCfg) then return end
    
    local birthdayEndTime = activityCfg.EndTime
    if not birthdayEndTime or birthdayEndTime <= 0 then return "" end
    return UITextHelper.GetUIText(UITextConst.UI_TEXT_33006, GameHelper.GetLeftTimeDes(birthdayEndTime, nil, nil, true))
end

-- 检查更新剧情红点
-- tips: GetValue和Save成对用 代表当前状态 0: 从未激活过红点 1: 激活过解锁红点 , GetCount和UpdateCount成对用 代表当前红点的显示情况
function RoleBirthdayBLL:UpdateDialogueRedPoint(dialogueId)
    if not dialogueId then return end
    local isDialogueUnlock, _ = self:CheckIfDialogueUnlock(dialogueId)
    local isDialogueFinish = SelfProxyFactory.GetActivityDialogueProxy():IsDialogueFinish(dialogueId)
    if (not isDialogueUnlock) or (isDialogueFinish) then
        RedPointMgr.UpdateCount(X3_CFG_CONST.RED_ACTIVITY_RB_STORY, 0, dialogueId)
    else
        local isRead = RedPointMgr.GetValue(X3_CFG_CONST.RED_ACTIVITY_RB_STORY, dialogueId) == 1
        if not isRead and not isDialogueFinish then
            RedPointMgr.UpdateCount(X3_CFG_CONST.RED_ACTIVITY_RB_STORY, 1, dialogueId)
            RedPointMgr.Save(1, X3_CFG_CONST.RED_ACTIVITY_RB_STORY, dialogueId)
        end
    end
end

-- 更新生日活动下的所有剧情红点
function RoleBirthdayBLL:UpdateAllDialogueRedPoint()
    local allDialogueCfg = LuaCfgMgr.GetAll("ActivityDialogue")
    if table.isnilorempty(allDialogueCfg) then return end
    
    for _, cfg in pairs(allDialogueCfg) do
        local activityId = cfg.ActivityID
        local activityCfg = LuaCfgMgr.Get("ActivityCenter", activityId)
        if activityId and not table.isnilorempty(activityCfg) then
            if activityCfg.ActivityType == ActivityCenterConst.ActivityEntryType.ActivityDialogue and activityCfg.ActivityShowType == DIALOGUE_ACTIVITY_CLIENT_TYPE then
                self:UpdateDialogueRedPoint(cfg.ID)
            end
        end
    end
end

-- 移除剧情红点
---@param dialogueId number 剧情Id
function RoleBirthdayBLL:CheckRemoveDialogueRedPoint(dialogueId)
    if RedPointMgr.GetCount(X3_CFG_CONST.RED_ACTIVITY_RB_STORY, dialogueId) == 1 then
        RedPointMgr.UpdateCount(X3_CFG_CONST.RED_ACTIVITY_RB_STORY, 0, dialogueId)
        RedPointMgr.Save(1, X3_CFG_CONST.RED_ACTIVITY_RB_STORY, dialogueId)
    end
end

-- 移除所有活动相关的剧情红点
---@param activityId number 活动Id
function RoleBirthdayBLL:RemoveAllDialogueRedPoint(activityId)
    local dialogueIdList = self:GetDialogueListByActivityId(activityId)
    if table.isnilorempty(dialogueIdList) then return end
    
    for _, id in pairs(dialogueIdList) do
        self:CheckRemoveDialogueRedPoint(id)
    end
end

-- 获取与生日活动Id关联的DIY活动Id
---@param activityId number 活动Id
function RoleBirthdayBLL:GetRelatedDIYActivityId(activityId)
    local specialDialogueId = BllMgr.GetRoleBirthdayBLL():GetSpecialDialogueId(self.activityId)
    if not specialDialogueId or specialDialogueId <= 0 then return end

    local dialogueCfg = LuaCfgMgr.Get("ActivityDialogue", specialDialogueId)
    if table.isnilorempty(dialogueCfg) then Debug.LogError("activity dialogue cfg not found, id : " .. tostring(specialDialogueId)) return end

    -- 检查之前是否有DIY过蛋糕
    local relatedDIYActivityId = dialogueCfg.Para1 and dialogueCfg.Para1[1]
    if relatedDIYActivityId then return relatedDIYActivityId end
end

-- 获取与生日活动Id关联的DIY活动的资产Id (用于CutScene注入)
---@param activityId number 活动Id
function RoleBirthdayBLL:GetRelatedDIYAssetId(activityId)
    local specialDialogueId = BllMgr.GetRoleBirthdayBLL():GetSpecialDialogueId(self.activityId)
    if not specialDialogueId or specialDialogueId <= 0 then return end

    local dialogueCfg = LuaCfgMgr.Get("ActivityDialogue", specialDialogueId)
    if table.isnilorempty(dialogueCfg) then Debug.LogError("activity dialogue cfg not found, id : " .. tostring(specialDialogueId)) return end

    -- 检查之前是否有DIY过蛋糕
    local diyAssetId = dialogueCfg.Para1 and dialogueCfg.Para1[2]
    if diyAssetId then return diyAssetId end
end

-- 根据活动Id获取其对应的剧情节点列表 (获取线性剧情 特殊类型除外)
---@param activityId number 活动Id
function RoleBirthdayBLL:GetDialogueListByActivityId(activityId)
    local allDialogueList = LuaCfgMgr.GetListByCondition("ActivityDialogue", {ActivityID = activityId, Type = 1})
    if table.isnilorempty(allDialogueList) then return end
    table.sort(allDialogueList, function(a, b)
        if a.PreID ~= b.PreID then return a.PreID < b.PreID end
        return a.ID < b.ID
    end)
    local idList = {} for _, v in ipairs(allDialogueList) do table.insert(idList, v.ID) end
    return idList
end

-- 根据活动Id获取其对应的特殊类型剧情Id (生日当天的剧情)
---@param activityId number 活动Id
function RoleBirthdayBLL:GetSpecialDialogueId(activityId)
    local dialogueCfgList = LuaCfgMgr.GetListByCondition("ActivityDialogue", {ActivityID = activityId, Type = 2})
    if table.isnilorempty(dialogueCfgList) then return end
    return dialogueCfgList[1].ID
end

-- 检查注入关联的DIY资产
---@param activityId number 活动Id
function RoleBirthdayBLL:CheckInjectDIYModel(activityId, withExtraPart)
    local relatedActivityId = self:GetRelatedDIYActivityId(activityId)
    local relatedDIYAssetId = self:GetRelatedDIYAssetId(activityId)
    if relatedActivityId and relatedDIYAssetId then

        local go = BllMgr.GetActivityDIYModelBLL():GetDIYModel(relatedActivityId, withExtraPart)
        if not GameObjectUtil.IsNull(go) then
            local isSuccess = CutSceneMgr.InjectAssetInsPermanently(relatedDIYAssetId, go)

            self.injectedDIYMap = self.injectedDIYMap or {}
            self.injectedDIYMap[activityId] = self.injectedDIYMap[activityId] or {}
            self.injectedDIYMap[activityId] = go
            
            return isSuccess
        end
    end
    
    return false
end

-- 获取注入到剧情里的DIY模型
---@param activityId number 活动Id
function RoleBirthdayBLL:GetInjectedDIYModel(activityId)
    if self.injectedDIYMap and not GameObjectUtil.IsNull(self.injectedDIYMap[activityId]) then
        return self.injectedDIYMap[activityId]
    end
end

-- 移除注入的DIY资产
---@param activityId number 活动Id
function RoleBirthdayBLL:CheckRemoveDIYModel(activityId)
    if not activityId or not self.injectedDIYMap then return end

    if not GameObjectUtil.IsNull(self.injectedDIYMap[activityId]) then
        CutSceneMgr.RemoveAssetInsPermanently(self.injectedDIYMap[activityId])
        
        -- 捎带着给销毁了
        GameObjectUtil.DestroyImmediate(self.injectedDIYMap[activityId])
    else
        Debug.LogError(table.dump({self.injectedDIYMap}))
    end
    self.injectedDIYMap[activityId] = nil
    
    return false
end

-- 获取蜡烛节点名
function RoleBirthdayBLL:GetCandleNodeName(activityId)
    local extraPartName = BllMgr.GetActivityDIYModelBLL():GetCandleNodeName(activityId)
    -- 使用string.match获取最后一个'/'之后的内容，包括扩展名
    local filenameWithExtension = string.match(extraPartName, "[^/]+$")
    -- 去除扩展名，获取节点名
    local nodeName = string.match(filenameWithExtension, "([^%.]+)")
    return nodeName
end

-- 播放生日剧情
---@param dialogueId number 剧情Id
---@param withoutUnlockCheck bool 是否跳过解锁条件判定
---@param isPreDialogue bool 是否为前置剧情
function RoleBirthdayBLL:PlayBirthdayDialogue(dialogueId, withoutUnlockCheck, isPreDialogue)
    local dialogueCfg = LuaCfgMgr.Get("ActivityDialogue", dialogueId)
    if table.isnilorempty(dialogueCfg) then Debug.LogError("activity dialogue cfg not found, dialogueId : " .. tostring(dialogueId)) return end

    local isSuccess = self:CheckInjectDIYModel(dialogueCfg.ActivityID, true)

    -- 剧情里的业务事件
    EventMgr.AddListener("ACTIVITY_RB_CandleSwitch", function(self, param)
        if table.isnilorempty(param) then Debug.LogError("ACTIVITY_RB_CandleSwitch param is nil !!--------- ") return end
        local args = param.params
        local fxName = tostring(args[1])
        local flag = tonumber(args[2])      -- flag: 1 点燃 2 熄灭

        -- 这里获取蛋糕obj吧
        local obj = self:GetInjectedDIYModel(dialogueCfg.ActivityID)
        if GameObjectUtil.IsNull(obj) then Debug.LogError("获取不到GameObject  ") return end

        -- 获取关联的DIY活动ID -> 查找设置中对应的节点名 -> 找到蜡烛火光节点进行显隐
        local diyActivityId = self:GetRelatedDIYActivityId(dialogueCfg.ActivityID)
        local candleNodeName = BllMgr.GetRoleBirthdayBLL():GetCandleNodeName(diyActivityId)
        local candleEffectObj = GameObjectUtil.GetComponent(obj, string.format("%s/%s", candleNodeName, fxName))
        if not GameObjectUtil.IsNull(candleEffectObj) then
            GameObjectUtil.SetActive(candleEffectObj, flag == 1)
        else
            Debug.LogError("蜡烛火光节点找不到 ： " .. table.dump({
                string.format("%s/%s", candleNodeName, fxName),
            }))
        end
        
        -- 继续剧情
        if param.handler then param.handler() end
    end, self)
    
    local preDialogueQuitTip = isPreDialogue and UITextHelper.GetUIText(UITextConst.UI_TEXT_33631)
    BllMgr.GetActivityDialogueBLL():PlayDialogue(dialogueCfg, function()
        self:QuitDialogue()
        
    end, isPreDialogue, preDialogueQuitTip, withoutUnlockCheck, function()
        -- 移除注入的资产
        self:CheckRemoveDIYModel(dialogueCfg.ActivityID)

        -- 移除事件
        EventMgr.RemoveListenerByName("ACTIVITY_RB_CandleSwitch", self)
    end)
end

-- 退出剧情
function RoleBirthdayBLL:QuitDialogue()
    EventMgr.AddListenerOnce(MainHomeConst.Event.MAIN_HOME_ENTER, self.EnterMainHome, self)
    UICommonUtil.WhiteScreenIn(function()
        EventMgr.Dispatch(ActivityCenterConst.EventType.RECOVER_VIEW)
        GameStateMgr.Switch(GameState.MainHome, false, false)
    end)
end

function RoleBirthdayBLL:EnterMainHome()
    UICommonUtil.WhiteScreenOut(function()
        EventMgr.Dispatch(ActivityCenterConst.EventType.FANTASY_DIALOGUE_END)
    end)
end

-- 检查剧情是否解锁
---@param dialogueId number 剧情Id
function RoleBirthdayBLL:CheckIfDialogueUnlock(dialogueId)
    local dialogueCfg = LuaCfgMgr.Get("ActivityDialogue", dialogueId)
    local unlockDate = GameHelper.GetDateByStr(dialogueCfg.UnlockTime)
    local timeLockTip = UITextHelper.GetUIText(UITextConst.UI_TEXT_33620, unlockDate.year, unlockDate.month, unlockDate.day, unlockDate.hour, unlockDate.min)
    local preDialogueNotUnlockTip = UITextHelper.GetUIText(UITextConst.UI_TEXT_33619)
    local flag, desc = BllMgr.GetActivityDialogueBLL():IsCanUnlock(dialogueCfg, timeLockTip, preDialogueNotUnlockTip)
    return flag, desc
end

-- 打开指定功能界面
---@param viewType RoleBirthdayEnum.ViewType 功能类型
---@param openParam table 传参
function RoleBirthdayBLL:OpenViewByType(viewType, openParam)
    ---@type RoleBirthdayViewCfg
    local viewCfg = RoleBirthdayEnum.ViewCfgMap[viewType]
    if table.isnilorempty(viewCfg) then self:LogError("界面打开失败 " .. table.dump({viewType, openParam})) return end
    
    local viewKey = UIConf[viewCfg.viewTag]
    if string.isnilorempty(viewKey) then self:LogError("界面打开失败, ViewTag不存在 : " .. tostring(viewKey)) return end
    
    openParam = openParam or {}
    
    -- 这个活动Id字段必传
    local activityId = openParam.activityId
    local activityCfg = LuaCfgMgr.Get("ActivityCenter", activityId)
    if not activityId or table.isnilorempty(activityCfg) then
        Debug.LogError("需要传入指定活动Id " .. table.dump({activityId, activityCfg}))
        return
    end
    
    ---@param viewCtrl Framework.UIViewCtrl
    local function __openCallback(viewCtrl)
        if not viewCfg.prefabIdx or string.isnilorempty(viewCfg.prefabLogicPath) then return end
        
        if GameObjectUtil.IsNull(viewCtrl.childPanelObj) then
            local prefabPathList = activityCfg.ActivityPrefab
            local prefabPath = prefabPathList and prefabPathList[viewCfg.prefabIdx]
            if string.isnilorempty(prefabPath) then
                Debug.LogError("加载对应活动预设失败 : " .. table.dump({activityId, viewCfg.prefabIdx, prefabPath}))
                return
            end
            viewCtrl.childPanelObj = UIMgr.LoadDynamicUIPrefab(prefabPath)
        end
        viewCtrl.childPanelObj.transform:SetParent(viewCtrl.root, false)
        GameObjectUtil.SetActive(viewCtrl.childPanelObj, true)
        GameObjectUtil.SetParent(viewCtrl.childPanelObj, viewCtrl.view:GetComponent(UComponentType.Transform):Find("Root"))
        
        local panelCtrl = Framework.GetOrAddCtrl(viewCtrl.childPanelObj, viewCfg.prefabLogicPath, viewCtrl)
        if panelCtrl and panelCtrl.Refresh then panelCtrl:Refresh(openParam) end
        
        UIMgr.RefreshSortingOrder(viewCtrl:GetInsId())
    end

    ---@param viewCtrl Framework.UIViewCtrl
    local function __closeCallback(viewCtrl)
        -- check unLoad child panel
        if not GameObjectUtil.IsNull(viewCtrl.childPanelObj) then
            Res.DiscardGameObject(viewCtrl.childPanelObj)
            viewCtrl.childPanelObj = nil
        end
    end
    
    openParam.openCallback = __openCallback
    openParam.closeCallback = __closeCallback
    
    UIMgr.Open(viewKey, openParam)
end

-- 关闭指定功能界面
---@param viewType RoleBirthdayEnum.ViewType 功能类型
function RoleBirthdayBLL:CloseViewByType(viewType)
    ---@type RoleBirthdayViewCfg
    local viewCfg = RoleBirthdayEnum.ViewCfgMap[viewType]
    if table.isnilorempty(viewCfg) then self:LogError("界面关闭失败 " .. table.dump({viewType})) return end

    local viewKey = UIConf[viewCfg.viewTag]
    if string.isnilorempty(viewKey) then self:LogError("界面关闭失败, ViewTag不存在 : " .. tostring(viewKey)) return end

    UIMgr.Close(viewKey)
end

-- 获取活动开始第n天 (0点为跨天)
---@param activityId number 活动Id
function RoleBirthdayBLL:GetDayIdxFromRoleBirthday(activityId)
    local activityData = BllMgr.GetActivityCenterBLL():GetActivityCMSConfig(activityId)
    if table.isnilorempty(activityData) then return end
    
    local curTime = TimerMgr.GetCurTimeSeconds()
    local startTime = activityData.StartTime
end

-- 生日当天开始时间
--local birthdayTimeStamp = 1709654400

---- 生日活动开始时间 3.1号5:00
--local birthdayActivityStartTime = 1709240400
--local curTime = birthdayActivityStartTime + 60
--local totalDays = 6
--local openDay = totalDays - TimeUtil.GetOpenDay(birthdayActivityStartTime, curTime, 0)
--Debug.LogError("[%s] ~ [%s] 之间跨越了 [%d] 天", table.dump({TimerMgr.GetDateByUnixTimestamp(birthdayActivityStartTime)}), table.dump({TimerMgr.GetDateByUnixTimestamp(curTime)}), openDay)


-- 获取距生日第n天 (当天为0 && 活动最后一天为0)
---@param activityId number 活动Id
function RoleBirthdayBLL:GetRemainDayToBirthday(activityId)
    local activityData = BllMgr.GetActivityCenterBLL():GetActivityCMSConfig(activityId)
    if table.isnilorempty(activityData) then return end
    
    local startTime = activityData.StartTime
    local curTime = TimerMgr.GetCurTimeSeconds()
    
    -- 计算curTime里endTime差了几天 (0点为跨天, 当天的话返回0)
    local totalDays = self:GetBirthdayTotalDays(activityId)
    local openDay = totalDays - TimeUtil.GetOpenDay(startTime, curTime, 0)
    
    --Debug.LogError("[%s] ~ [%s] 之间跨越了 [%d] 天", table.dump({TimerMgr.GetDateByUnixTimestamp(startTime)}), table.dump({TimerMgr.GetDateByUnixTimestamp(curTime)}), openDay)
    
    return openDay
end

-- 检查倒计时界面打开条件
---@param activityId number 活动Id
function RoleBirthdayBLL:CheckIfOpenCountDown(activityId)
    local remainDayIdx = self:GetRemainDayToBirthday(activityId)
    if not remainDayIdx or remainDayIdx < 0 then return false end

    -- 检查下倒计时天数配置吧
    local totalDays = self:GetBirthdayTotalDays(activityId)
    if not totalDays or remainDayIdx > totalDays then return false end

    -- 检查当天是否有打开过
    local parsedDayIdx = BllMgr.GetPlayerServerPrefsBLL():GetInt(GameConst.CustomDataIndex.ROLE_BIRTHDAY_COUNTDOWN, -1)
    if not parsedDayIdx or parsedDayIdx < 0 then return true end

    return parsedDayIdx ~= remainDayIdx
end

-- 弹出倒计时后记录下
---@param activityId number 活动Id
function RoleBirthdayBLL:RecordCountDownIdx(activityId)
    if not activityId then return end
    local remainDayIdx = self:GetRemainDayToBirthday(activityId)
    BllMgr.GetPlayerServerPrefsBLL():SetInt(GameConst.CustomDataIndex.ROLE_BIRTHDAY_COUNTDOWN, remainDayIdx)
end

-- 检查前置剧情是否自动打开过
---@param activityId number 活动Id
function RoleBirthdayBLL:CheckIfFirstDialoguePlayed(activityId)
    local firstDialogueId = self:GetFirstDialogueId(activityId)
    if not firstDialogueId or firstDialogueId < 0 then return true end

    local playedFirstDialogueId = BllMgr.GetPlayerServerPrefsBLL():GetInt(GameConst.CustomDataIndex.ROLE_BIRTHDAY_FIRST_DIALOGUE_PLAYED_ID, -1)
    if not playedFirstDialogueId or playedFirstDialogueId < 0 then return false end

    return firstDialogueId == playedFirstDialogueId
end

-- 前置剧情自动播放后记录下
---@param activityId number 活动Id
function RoleBirthdayBLL:RecordPlayedFirstDialogue(activityId)
    if not activityId then return end
    local firstDialogueId = self:GetFirstDialogueId(activityId)
    BllMgr.GetPlayerServerPrefsBLL():SetInt(GameConst.CustomDataIndex.ROLE_BIRTHDAY_FIRST_DIALOGUE_PLAYED_ID, firstDialogueId)
end

-- 检查并打开生日倒计时界面
---@param activityId number 活动Id
function RoleBirthdayBLL:CheckOpenCountDownWnd(activityId)
    if not activityId then return end
    -- 检查打开条件
    if not self:CheckIfOpenCountDown(activityId) then return end
    -- 在这里打开界面
    self:OpenViewByType(RoleBirthdayEnum.ViewType.CountDown, {activityId = activityId})
end

-- 获取活动对应的第一个剧情 (要自动播放)
---@param activityId number 活动Id
function RoleBirthdayBLL:GetFirstDialogueId(activityId)
    local activityDialogueCfg = LuaCfgMgr.GetDataByCondition("ActivityDialogue", {ActivityID = activityId, ShowOrder = 1})
    if table.isnilorempty(activityDialogueCfg) then return end
    return activityDialogueCfg.ID
end

-- 检查活动首个剧情是否播放完成 如果没有播放完成则直接进入剧情
---@param activityId number 活动Id
function RoleBirthdayBLL:CheckEnterFirstDialogue(activityId)
    if not activityId then return end
    local firstDialogueId = self:GetFirstDialogueId(activityId)
    if not firstDialogueId then return end
    local isUnlock = BllMgr.GetRoleBirthdayBLL():CheckIfDialogueUnlock(firstDialogueId)
    if not isUnlock then return end
    local isFirstDialogueAutoPlayed = BllMgr.GetRoleBirthdayBLL():CheckIfFirstDialoguePlayed(activityId)
    if not isFirstDialogueAutoPlayed then
        self:PlayBirthdayDialogue(firstDialogueId, nil, true)
        BllMgr.GetRoleBirthdayBLL():RecordPlayedFirstDialogue(activityId)
        return true
    end
end

-- 检查任务奖励
function RoleBirthdayBLL:GetIsHadTaskRewards(activityId)
    if not activityId then
        Debug.LogError("RoleBirthdayBLL activityId is Null!!!")
        return false
    end
    local canGetRewardTaskList = false
    local canGetProgressReward = false
    local hadTaskRewards
    local cmsCfg = BllMgr.GetActivityCenterBLL():GetActivityCMSConfig(activityId)
    if table.isnilorempty(cmsCfg) then return false end
    
    local cfg = LuaCfgMgr.Get("ActivityCenter", activityId)
    local taskData = self:InitTaskData(cfg.ActivityTaskGroupID)
    canGetRewardTaskList = self:GetCanGetRewardTaskList(activityId, taskData)
    canGetProgressReward = self:GetCanGetProcessReward(cmsCfg.ID)
    hadTaskRewards = (#canGetRewardTaskList > 0 or canGetProgressReward)
    
    return hadTaskRewards, canGetRewardTaskList, canGetProgressReward
end

--region Task相关
function RoleBirthdayBLL:OnTaskDataUpdate(taskId)
    local _type = ActivityCenterConst.ActivityEntryType.Task
    local _sortType = ActivityCenterConst.ActivityEntrySignType.RoleBirthday
    local cfg = BllMgr.GetActivityCenterBLL():GetActivityCenterCfgByType(_type, _sortType)
    if not cfg then
        Debug.LogError("找不到活动数据，type => ", _type, " sortType => ", _sortType)
        return
    end
    if taskId then
        local taskCfg = BllMgr.GetTaskBLL():GetTaskCfg(taskId)
        if not taskCfg then
            return
        end
        local shouldCheck = false
        for i, v in ipairs(cfg.ActivityTaskGroupID) do
            if v == taskCfg.GroupID then
                shouldCheck = true
                break
            end
        end
        if not shouldCheck then
            return
        end
    end
    self:UpdateTaskRedPoint(cfg.ActivityID)
end

function RoleBirthdayBLL:UpdateTaskRedPoint(activityID)
    local hadTaskRewards, canGetRewardTaskList, canGetProgressReward = self:GetIsHadTaskRewards(activityID, true)
    RedPointMgr.UpdateCount(X3_CFG_CONST.RED_ACTIVITY_RB_TASK, hadTaskRewards and 1 or 0,activityID)
    EventMgr.Dispatch(RoleBirthdayEnum.EventMap.TaskDataUpdate, hadTaskRewards)
    return hadTaskRewards, canGetRewardTaskList, canGetProgressReward
end

---@param activityID number taskID
---@param taskData table table<X3Data.Task>
function RoleBirthdayBLL:GetCanGetRewardTaskList(activityID, taskData)
    local result = {}
    local cmsCfg = BllMgr.GetActivityCenterBLL():GetActivityCMSConfig(activityID)
    local isOpen, isClose = BllMgr.GetActivityCenterBLL():GetOpenState(cmsCfg, true)
    if not isOpen then
        return result
    end
    for i, v in ipairs(taskData) do
        if v:GetStatus() == X3DataConst.TaskStatus.TaskCanFinish then
            table.insert(result, v:GetPrimaryValue())
        end
    end
    return result
end

---@public 初始化任务数据
---@return table<X3Data.Task>
function RoleBirthdayBLL:InitTaskData(activityTaskGroupID)
    local taskGroupData = {}
    local taskData = {}
    for k, v in ipairs(activityTaskGroupID) do
        taskGroupData = table.insertto(taskGroupData, LuaCfgMgr.Get("TaskTableByGroupId", v))
    end

    for i, v in ipairs(taskGroupData) do
        local task = BllMgr.GetTaskBLL():GetTaskInfoById(v.ID)
        if (not task) then
            Debug.Log("error No task data ----  taskItem.ID ", v.ID, " index ", i)
        else
            table.insert(taskData, task)
        end
    end
    table.sort(taskData, function(a, b)
        local stateA = a:GetStatus()
        local stateB = b:GetStatus()
        if stateA ~= stateB then
            return stateA < stateB--- X3DataConst.TaskStatus.TaskCanFinish
        end
        return a:GetPrimaryValue() < b:GetPrimaryValue()
    end)
    return taskData
end

---@param cmsID number
---@return bool 是否可以领取阶段奖励
function RoleBirthdayBLL:GetCanGetProcessReward(cmsID)
    local curPoint, limitPoint, hadReward, cfg = BllMgr.GetActivityCenterBLL():GetIntegralProgressData(cmsID)
    if curPoint then
        if curPoint >= limitPoint then
            if hadReward then
                return true, { cfg.Rank }
            end
        end
    end
    return false
end
--endregion

return RoleBirthdayBLL