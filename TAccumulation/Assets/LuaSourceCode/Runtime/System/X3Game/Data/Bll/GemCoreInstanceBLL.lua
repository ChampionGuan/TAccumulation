---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by zhanbo.
--- DateTime: 2022/10/24 17:13
---
---@class GemCoreInstanceBLL
local GemCoreInstanceBLL = class("GemCoreInstanceBLL", BaseBll)

function GemCoreInstanceBLL:OnInit()
    ---@type bool
    self.isAddItemOverLimitRewards = false
    
    -- 战斗返回处理
    EventMgr.AddListener(Const.Event.RECOVER_VIEW_SNAPSHOT_FINISH, function(self)
        local stageID = ChapterStageManager.GetCurStageID()
        local stageCfg = LuaCfgMgr.Get("CommonStageEntry", stageID)
        if table.isnilorempty(stageCfg) then return end
        if stageCfg.Type and stageCfg.Type == Define.EStageType.GemCoreStage then
            local config = BllMgr.GetGemCoreInstanceBLL():GetConfigByStageID(stageID)
            local isCurStageOpen, lockTip = BllMgr.GetGemCoreInstanceBLL():CheckIfOpenByStageId(stageID)

            -- 这里的Tips弹出时机和易奇约定好了可以接受 目前的话会在OnOpen的时候弹出tips(边界条件检查)
            if not isCurStageOpen then UICommonUtil.ShowMessage(lockTip) end

            if config and isCurStageOpen then
                UIMgr.OpenWithAnim(UIConf.GemCoreLayerWnd, false, config)
            end
        end
    end, self)
end

function GemCoreInstanceBLL:OnClear()
    EventMgr.RemoveListenerByTarget(self)
end

---芯核数量到达上限
function GemCoreInstanceBLL:IsGemCoreLimit()
    ---1820  GemCoreLimit  int  培养  1000  芯核拥有上限
    local gemCoreMax = LuaCfgMgr.Get("SundryConfig", X3_CFG_CONST.GEMCORELIMIT)
    local gemCoreNum = BllMgr.GetGemCoreBLL():GetCurCoreNum()
    return gemCoreNum >= gemCoreMax
end

---判断芯核数量是否到达上限(是就弹出提示,不是就不弹)
function GemCoreInstanceBLL:IsGemCoreLimit_Message()
    if self:IsGemCoreLimit() then
        UICommonUtil.ShowMessageBox(UITextHelper.GetUIText(UITextConst.UI_TEXT_21407), {
            {btn_type = GameConst.MessageBoxBtnType.CONFIRM, btn_text = UITextConst.UI_TEXT_21420, btn_call = function()
                UIMgr.Open(UIConf.DevelopCoreListWnd, { sortOrderType = true })
            end},
            {btn_type = GameConst.MessageBoxBtnType.CANCEL, btn_text = UITextConst.UI_TEXT_21419}
        })
        return true
    end
    return false
end

---@param reply pbcmessage.AddItemOverLimitReply
function GemCoreInstanceBLL:OnAddItemOverLimitReply(reply)
    self.isAddItemOverLimitRewards = reply and reply.Rewards
end

---判断是否是芯核副本超出上限,发送邮件提示
function GemCoreInstanceBLL:IsAddItemOverLimitRewards(isClear)
    if isClear then
        self.isAddItemOverLimitRewards = false
    end
    return self.isAddItemOverLimitRewards
end

-- 检查当前芯核副本是否开启
function GemCoreInstanceBLL:CheckIfLevelOpen(gemCoreInstanceId, showTips)
    local gemCoreCfg = LuaCfgMgr.Get("GemCoreInstance", gemCoreInstanceId)
    if table.isnilorempty(gemCoreCfg) then Debug.LogError("GemCoreInstance Cfg not found, Id : " .. tostring(gemCoreInstanceId or "nil")) return end
    
    -- 先检查Condition
    local isConditionPass = ConditionCheckUtil.CheckConditionByCommonConditionGroupId(gemCoreCfg.OpenCondition)
    if not isConditionPass then
        if showTips then
            UICommonUtil.ShowMessage(ConditionCheckUtil.GetConditionDescByGroupId(gemCoreCfg.OpenCondition))
        end
        return false, ConditionCheckUtil.GetConditionDescByGroupId(gemCoreCfg.OpenCondition)
    end

    -- 再检查开放星期 (这里的星期数计算基于5点日重置逻辑 策划 yiqi)
    local curDate = TimerMgr.GetCurDate()
    local curWeekDay = curDate.hour < 5 and curDate.wday - 1 or curDate.wday
    curWeekDay = curWeekDay < 0 and curWeekDay + 7 or curWeekDay
    local openDayStrList = string.split(gemCoreCfg.OpenDay, '|')
    for _, dayStr in ipairs(openDayStrList) do
        if tonumber(dayStr) == curWeekDay then
            return true
        end
    end

    if showTips then
        UICommonUtil.ShowMessage(UITextConst.UI_TEXT_21418)
    end

    return false, UITextHelper.GetUIText(UITextConst.UI_TEXT_21418)
end

-- 根据关卡Id检查当前芯核副本是否开启
function GemCoreInstanceBLL:CheckIfOpenByStageId(stageId, showTips)
    local gemCoreInsId = self:GetGemCoreInsIdByStageId(stageId)
    local flag, tip = self:CheckIfLevelOpen(gemCoreInsId, showTips)
    return flag, tip
end

-- 根据关卡Id获取芯核配置Id
---@param stageId number 关卡Id
function GemCoreInstanceBLL:GetGemCoreInsIdByStageId(stageId)
    local allCfg = LuaCfgMgr.GetAll("GemCoreInstance")
    for gemCoreInsId, cfg in pairs(allCfg) do
        local levelList = cfg.LevelList
        for _, levelId in ipairs(levelList) do
            if levelId == stageId then
                return gemCoreInsId
            end
        end
    end
end

---跳转到芯核副本界面
---@param gemCoreInstanceId int
function GemCoreInstanceBLL:JumpToGemCoreInstance(gemCoreInstanceId)
    if not gemCoreInstanceId then
        return
    end
    if gemCoreInstanceId <= 0 then
        UIMgr.Open(UIConf.GemCoreWnd)
    else
        local cfg_GemCoreInstance = LuaCfgMgr.Get("GemCoreInstance", gemCoreInstanceId)
        if cfg_GemCoreInstance then
            UIMgr.Open(UIConf.GemCoreLayerWnd, cfg_GemCoreInstance)
        end
    end
end

---@param stageID number 战斗的关卡ID
---@return cfg.GemCoreInstance
function GemCoreInstanceBLL:GetConfigByStageID(stageID)
    ---@type cfg.CommonStageEntry
    local cfg_all_GemCoreInstance = LuaCfgMgr.GetAll("GemCoreInstance")
    for _, cfg_GemCoreInstance in pairs(cfg_all_GemCoreInstance) do
        for _, id in ipairs(cfg_GemCoreInstance.LevelList) do
            if id == stageID then
                return cfg_GemCoreInstance
            end
        end
    end
    Debug.LogError("GemCoreInstance表的LevelList都没有配置: ", stageID)
    return nil
end

-- 根据芯核TagId查找对应的产出副本Id (GemCoreInstance Cfg Id )
function GemCoreInstanceBLL:GetGemCoreInstanceIdByTagId(tagId)
    if not tagId then return end
    
    local allCfg = LuaCfgMgr.GetAll("GemCoreInstance")
    
    for _, cfg in pairs(allCfg) do
        local output = cfg.GemOutPut
        if not table.isnilorempty(output) and table.containsvalue(output, tagId) then return cfg.ID end
    end
    
    return
end

function GemCoreInstanceBLL:OnGemCoreLayerOpen(uiView)
    self.gemCoreLayerUIViewMap = self.gemCoreLayerUIViewMap or {}
    self.gemCoreLayerUIViewMap[uiView] = true
end

function GemCoreInstanceBLL:OnGemCoreLayerClose(uiView)
    self.gemCoreLayerUIViewMap = self.gemCoreLayerUIViewMap or {}
    self.gemCoreLayerUIViewMap[uiView] = nil
end

return GemCoreInstanceBLL
