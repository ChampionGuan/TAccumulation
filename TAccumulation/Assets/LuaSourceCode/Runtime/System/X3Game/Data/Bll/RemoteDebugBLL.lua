---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by jiaozhu.
--- DateTime: 2021/10/25 11:12
---

---@class RemoteDebugBLL:BaseBll
local RemoteDebugBLL = class("RemoteDebugBLL",BaseBll)
local RemoteDebug = CS.X3Game.RemoteDebug
local QRCode = CS.X3Game.QRCode
local CMD = 
{
    CONNECT_HTTP = 1,
    DOWN_LOAD = 2,
    CLEAR_LUA = 3,
    START_REMOTE_DEBUG = 4,
    CLOSE_REMOTE_DEBUG = 5,
    QR_CODE = 6,
    STOP_QR_CODE = 7,
    EXECUTE_LUA = 8,
    OPEN_PROFILER_WND = 9,
    START_PROFILER = 10,
    PAUSE_PROFILER = 11,
    RESUME_PROFILER = 12,
    REPORT_PROFILER = 13,
    STOP_PROFILER = 14,
    EXPORT_X3DATASET = 15,
}
---@class RemoteDebugBLL.CMD
RemoteDebugBLL.CMD = CMD

local IP_KEY = "REMOTE_DEBUG_KEY" 
local LUA_CODE_KEY = "REMOTE_DEBUG_CODE_KEY"
local REMOTE_DEBUG_PORT = "8172"
local WEB_PORT = "12346"
local WEB_CAMERA_WIDTH = 886
local WEB_CAMERA_HEIGHT =1920
local CHECK_REMOTE_DEBUG_DT = 2

---初始化
function RemoteDebugBLL:OnInit()
    self.isRemoteDebugConnected = false
    self.luaCode = PlayerPrefs.GetString(LUA_CODE_KEY,"")
    self.ip = PlayerPrefs.GetString(IP_KEY,"")
    self.remoteDebugPort = REMOTE_DEBUG_PORT
    self.webPort = WEB_PORT
    CS.X3Game.GMCommandManager.CheckRemoteDebugDt = CHECK_REMOTE_DEBUG_DT
    self:AddEventListener()
end

---@return string
function RemoteDebugBLL:GetLuaCode()
    return self.luaCode
end

---@param lua string
function RemoteDebugBLL:SetLuaCode(lua)
    self.luaCode = lua or ""
end

---@param width int
---@param height int
function RemoteDebugBLL:SetWebCameraSize(width,height)
    local size = UIMgr.GetCanvasSize()
    WEB_CAMERA_WIDTH = math.floor( width or size.x)
    WEB_CAMERA_HEIGHT = math.floor(height or size.y)
end

---设置远程调试port
---@param port int
function RemoteDebugBLL:SetRemoteDebugPort(port)
    self.remoteDebugPort = port
end

---设置webViewport
---@param webPort int
function RemoteDebugBLL:SetWebPort(webPort)
    if webPort~=self.webPort then
        self.webPort = webPort
        RemoteDebug.WEB_SOCKET_PORT = tonumber(webPort) or WEB_PORT
    end
end

---设置ip
---@param ip string
function RemoteDebugBLL:SetIP(ip)
    self.ip = ip
    if not string.isnilorempty(ip) then
        PlayerPrefs.SetString(IP_KEY,ip)
    end
end

---获取webPort
---@return int
function RemoteDebugBLL:GetWebPort()
    return self.webPort
end

---获取远程调试port
---@return int
function RemoteDebugBLL:GetRemoteDebugPort()
    return self.remoteDebugPort
end

---设置远程调试连接状态
---@param isConnect
function RemoteDebugBLL:SetRemoteDebugConnect(isConnect)
    self.isRemoteDebugConnected = isConnect
    EventMgr.Dispatch("REMOTE_DEBUG_STATE_CHANGED")
end

---远程连接是否成功
---@return boolean
function RemoteDebugBLL:IsWebConnected()
    return RemoteDebug.IsConnected
end

---远程调试是否连接成功
---@return boolean
function RemoteDebugBLL:IsRemoteDebugConnected()
    return self.isRemoteDebugConnected
end

---获取当前IP
---@return string
function RemoteDebugBLL:GetIP()
    return self.ip
end

---检测当前ip和port
function RemoteDebugBLL:CheckIpPort(ip,port)
    if not string.isnilorempty(ip) then
        self:SetIP(ip)
    end
    if not string.isnilorempty(port) then
        self:SetWebPort(port)
    end
    if string.isnilorempty(self:GetIP()) or string.isnilorempty(self:GetWebPort())  then
        UICommonUtil.ShowMessage("ip或者port是空")
        return
    end
    return true
end

---执行命令
---@param cmd RemoteDebugBLL.CMD
---@vararg any
function RemoteDebugBLL:Execute(cmd,...)
    if cmd == CMD.CONNECT_HTTP then
        local ip,port = select(1,...)
        if not self:CheckIpPort(ip,port) then
            return
        end
        RemoteDebug.Connect(self:GetIP())
        TimerMgr.AddTimerByFrame(5,function ()
            if self:IsWebConnected() then
                UICommonUtil.ShowMessage("连接成功："..self:GetIP())
                self:Execute(CMD.DOWN_LOAD)
            else
                UICommonUtil.ShowMessage("连接失败："..self:GetIP())
            end
        end)
    elseif cmd == CMD.DOWN_LOAD then
        if string.isnilorempty(self:GetIP()) then
            UICommonUtil.ShowMessage("下载失败，ip是空")
            return
        end
        RemoteDebug.DownLoad()
        UICommonUtil.ShowMessage("下载成功：")
    elseif cmd == CMD.CLEAR_LUA then
        RemoteDebug.ClearLua()
        UICommonUtil.ShowMessage("清除成功")
    elseif cmd == CMD.START_REMOTE_DEBUG then
        local ip,port = select(1,...)
        if not self:CheckIpPort(ip,port) then
            return
        end
        EventMgr.Dispatch("REMOTE_DEBUG",string.concat(self:GetIP(),":",self:GetRemoteDebugPort()))
    elseif cmd == CMD.CLOSE_REMOTE_DEBUG then
        EventMgr.Dispatch("REMOTE_DEBUG","closeDebug")
    elseif cmd == CMD.EXECUTE_LUA then
        local lua = select(1,...)
        if not string.isnilorempty(lua) then
            self:SetLuaCode(lua)
            RemoteDebug.DoString(lua)
            UICommonUtil.ShowMessage("执行代码成功")
        end
    elseif cmd == CMD.QR_CODE then
        local img,finishCall,width,height = select(1,...)
        if not GameObjectUtil.IsNull(img) then
            self:SetWebCameraSize(width,height)
            QRCode.ScanQRCode(img,finishCall,WEB_CAMERA_WIDTH,WEB_CAMERA_HEIGHT)
        else
            UICommonUtil.ShowMessage("扫描二维码参数不对!!!,img is nil")
        end
    elseif cmd == CMD.STOP_QR_CODE then
        QRCode.DestroyWebCamera()
    elseif cmd == CMD.OPEN_PROFILER_WND then
        UIMgr.Open(UIConf.ProfilerWnd)
    elseif cmd == CMD.START_PROFILER then
        Profiler.Start()
    elseif cmd == CMD.PAUSE_PROFILER then
        Profiler.Pause()
    elseif cmd == CMD.RESUME_PROFILER then
        Profiler.Resume()
    elseif cmd == CMD.REPORT_PROFILER then
        local sort_type,is_save_file,sort_condition = select(1,...)
        Profiler.GetReport(sort_type,is_save_file,sort_condition)
    elseif cmd == CMD.STOP_PROFILER then
        Profiler.Stop()
    elseif cmd == CMD.EXPORT_X3DATASET then
        local paramArray = {...}
        local fileName = table.remove(paramArray, 1)
        local protoStr = X3DataMgr._EncodeX3DataSetWithTypeArray(fileName, table.unpack(paramArray))
        RemoteDebug.UploadMobilePersistFile(fileName, protoStr);
    end
    
end

---监听远程连接事件
function RemoteDebugBLL:OnEventWeb(cmd,...)
    if not string.isnilorempty(cmd) then
        self:Execute(cmd,...)
    else
        Debug.LogError("RemoteDebugBLL:OnEventWeb --failed cmd is nil or empty")
    end
    
end

---监听命令执行逻辑
---@param param string 多参数用分号分隔
function RemoteDebugBLL:OnEventRemoteExecute(param)
    if string.isnilorempty(param) then
        return
    end
    local res = string.split(param,":")
    if #res>=1 then
       local cmd = tonumber(table.remove(res,1))
        if cmd then
            self:Execute(cmd,table.unpack(res))
        end
    end
end

---执行lua代码
---@param lua string
function RemoteDebugBLL:ExecuteLua(lua)
    self:SetLuaCode(lua)
end


function RemoteDebugBLL:AddEventListener()
    EventMgr.AddListener("EXECUTE_LUA_CMD",self.OnEventWeb,self)
    EventMgr.AddListener("REMOTE_EXECUTE_LUA_CMD",self.OnEventRemoteExecute,self)
    EventMgr.AddListener("UP_LOAD_LUA_CODE",self.ExecuteLua,self)
end

function RemoteDebugBLL:RemoveEventListener()
    EventMgr.RemoveListenerByTarget(self)
end

function RemoteDebugBLL:CheckRemoteDebugView()
    if not UIMgr.IsOpened(UIConf.GMRemoteDebugWnd) then
        UIMgr.Open(UIConf.GMRemoteDebugWnd)
    end
end

function RemoteDebugBLL:OnClear()
    self:RemoveEventListener()
end
return RemoteDebugBLL