---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by xiaofang.
--- DateTime: 2021/12/10 11:50
--- 喵牌集卡界面交互入口
---@class MiaoGachaBLL:BaseBll
local MiaoGachaBLL = class("MiaoGachaBLL", BaseBll)
local MiaoGachaConst = require("Runtime.System.X3Game.GameConst.MiaoGachaConst")

function MiaoGachaBLL:Init(data)
    self.proxy = SelfProxyFactory.GetMiaoGachaProxy()
    self.proxy:UpdateGachaGroup(data and data.RoleSeries or {})
    self.curReqSeriesId = 0  -- 当前请求集卡系列id
    self.selectRoleID = 1
    X3DataMgr.Subscribe(X3DataConst.X3Data.Item, self.RefreshGachaRed, self)
end

---@param role_id int
---@param serialId int
---@param costs {Type,Id,Num}[]
function MiaoGachaBLL:SendMiaoGacha(role_id, serialId, cost, regularId)
    local messageInfo = {}
    messageInfo.RoleId = role_id
    messageInfo.SeriesId = serialId
    messageInfo.Cost = cost
    messageInfo.RegularId = regularId
    GrpcMgr.SendRequest(RpcDefines.MiaoGachaRequest, messageInfo)
end

---@param price int
---@param series_data MiaoGachaItemData
---@param is_confirm boolean  --是否需要二次确认
function MiaoGachaBLL:ShowConfirmBox(series_data, is_confirm)
    is_confirm = is_confirm == nil and true or is_confirm
    if not series_data then
        Debug.LogError("series_data is nil")
        return
    end
    local isOpen, state = series_data:CheckInOpenTime()
    if not isOpen then
        if state == MiaoGachaConst.GachaTypeState.OVERDUE then
            UICommonUtil.ShowMessage(UITextConst.UI_TEXT_32009)
        else
            UICommonUtil.ShowMessage(UITextConst.UI_TEXT_32021)
        end
        return
    end
    local is_enough, cost = series_data:CheckReqCondition()
    if not is_enough then
        UICommonUtil.ShowMessage(UITextConst.UI_TEXT_32000)
        return
    end
    if self:GetBuyState() then
        ---在购买中时不允许再次购买
        return
    end
    local series_id = series_data:GetId()
    local role_id = series_data:GetRoleId()
    local regular_id = series_data:GetRegularId()
    ---@type fun()
    local confirm_event = function()
        ---防止二次弹窗点确认时有时间差，导致时间计算误差
        local isOpen, state = series_data:CheckInOpenTime()
        if not isOpen then
            if state == MiaoGachaConst.GachaTypeState.OVERDUE then
                UICommonUtil.ShowMessage(UITextConst.UI_TEXT_32009)
            else
                UICommonUtil.ShowMessage(UITextConst.UI_TEXT_32021)
            end
            return
        end
        self:SetBuyState(true)
        self:SendMiaoGacha(role_id, series_id, cost, regular_id)
        self.curReqSeriesId = series_id
    end
    if is_confirm then
        if cost then
            local iteminfo = BllMgr.Get("ItemBLL"):GetLocalItem(cost.Id)
            local item_name = ""
            if iteminfo then
                item_name = UITextHelper.GetUIText(iteminfo.Name)
            end
            UICommonUtil.ShowMessageBox(UITextHelper.GetUIText(UITextConst.UI_TEXT_32006, series_data:GetGachaPrice(), item_name, series_data:GetShowName()), {
                { btn_type = GameConst.MessageBoxBtnType.CONFIRM, btn_call = function()
                    confirm_event()
                end
                },
                { btn_type = GameConst.MessageBoxBtnType.CANCEL }
            })
        end
    else
        confirm_event()
    end
end

---获得购买状态  true为购买中，false为未购买
function MiaoGachaBLL:GetBuyState()
    return self.buy_state
end

function MiaoGachaBLL:SetBuyState(value)
    self.buy_state = value
end

---@param item X3Data.Item
function MiaoGachaBLL:RefreshGachaRed(item)
    if not item then
        return
    end
    local is_cost, role_id = self.proxy:CheckIsCostItem(item:GetPrimaryValue())
    if is_cost then
        self.proxy:RefreshRedPoint(role_id)
        EventMgr.Dispatch(MiaoGachaConst.Event.MIAOGACHA_COST_ITEM_CHANGE, item:GetPrimaryValue())
    end
end

function MiaoGachaBLL:CheckCondition(id, datas)
    if id == X3_CFG_CONST.CONDITION_MIAOGACHA_PACKNUM then
        ---喵呜集卡进度条件
        local role_id = tonumber(datas[1])
        if not self.proxy then
            self.proxy = SelfProxyFactory.GetMiaoGachaProxy()
        end
        local amount = self.proxy:GetCollectAmountByRoleId(role_id)
        return ConditionCheckUtil.IsInRange(amount, tonumber(datas[2]), tonumber(datas[3])), amount
    elseif id == X3_CFG_CONST.CONDITION_MIAOGACHA_PACKCOLLECTION then
        local role_id = tonumber(datas[1])
        if not self.proxy then
            self.proxy = SelfProxyFactory.GetMiaoGachaProxy()
        end
        local amount = self.proxy:GetCollectAmountByRoleId(role_id, tonumber(datas[2]))
        return amount > 0, amount
    end
    return false
end

function MiaoGachaBLL:SetCurRole(role_id)
    self.selectRoleID = role_id
end

function MiaoGachaBLL:GetCurRole()
    return self.selectRoleID
end

function MiaoGachaBLL:JumpWnd(role_id)
    if not role_id then
        role_id = BllMgr.GetLovePointBLL():GetMaxPointRole()
    end
    if not BllMgr.GetRoleBLL():IsUnlocked(role_id) then
        local roleInfoCfg = LuaCfgMgr.Get("RoleInfo", role_id)
        UICommonUtil.ShowMessage(ConditionCheckUtil.GetConditionDescByGroupId(roleInfoCfg and roleInfoCfg.UnlockCondition or 0))
        return
    end
    self:SetCurRole(role_id)
    UIMgr.Open(UIConf.MiaoGachaWnd)
end

function MiaoGachaBLL:GetMiaoGachaData()
    local req = {}
    GrpcMgr.SendRequest(RpcDefines.GetMiaoGachaDataRequest, req)
end

function MiaoGachaBLL:OnClear()
    EventMgr.RemoveListenerByTarget(self)
    X3DataMgr.UnsubscribeWithTarget(self)
end

return MiaoGachaBLL
