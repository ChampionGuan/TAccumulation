--- Generated by AutoGen
---
---@class MsgCmd_GetFriendDataReply
local MsgCmd_GetFriendDataReply = class("MsgCmd_GetFriendDataReply", require("Runtime.System.Framework.GameBase.Misc.SimpleCommand"))

---Command执行
---@param reply pbcmessage.GetFriendDataReply
function MsgCmd_GetFriendDataReply:Execute(reply)
    if reply then
        ---@type FriendProxy
        local proxy = SelfProxyFactory.GetFriendProxy()
        local totalInfo = reply.TotalInfo
        if totalInfo then
            proxy:Reset()

            proxy:UpdateFriendData(totalInfo.Db)
            local info = totalInfo.Info

            proxy:AddStaminaSendMap(totalInfo.Db.StaminaSends, totalInfo.Db.LastCounterUpdateTime)
            proxy:AddStaminaReceiveMap(totalInfo.Db.StaminaRecveds, totalInfo.Db.LastCounterUpdateTime, info.StaminaUnRecvMap)

            proxy:AddFriendedMap(info.FriendMap)
            proxy:AddFriendingMap(info.FriendAppliedMap)

            EventMgr.Dispatch("FRIEND_QUERY_TOTAL", true)
            return
        else
            Debug.Log("RecvMsg_GetFriendDataReply error, serverdata.TotalInfo = nil")
        end
    else
        Debug.Log("RecvMsg_GetFriendDataReply error, serverdata = nil")
    end

    EventMgr.Dispatch("FRIEND_QUERY_TOTAL", false)
end

return MsgCmd_GetFriendDataReply
