--- Generated by AutoGen
---
---@class MsgCmd_FriendApplyAcceptReply
local MsgCmd_FriendApplyAcceptReply = class("MsgCmd_FriendApplyAcceptReply", require("Runtime.System.Framework.GameBase.Misc.SimpleCommand"))

---Command执行
---@param reply pbcmessage.FriendApplyAcceptReply
function MsgCmd_FriendApplyAcceptReply:Execute(reply)
    if reply then
        ---@type FriendProxy
        local proxy = SelfProxyFactory.GetFriendProxy()
        local friendApplyAcceptList = reply.FriendApplyAcceptList
        if friendApplyAcceptList and #friendApplyAcceptList > 0 then
            local isBatch = BllMgr.GetFriendBLL():GetIsApplyAcceptBatch()
            for _, uid in ipairs(friendApplyAcceptList) do
                local friendInfo = (proxy:RemoveFriendingByUid(uid) or {}).AppliedFriend
                if friendInfo then
                    proxy:AddFriended(friendInfo)
                    proxy:RemoveMyApply(friendInfo.Uid)
                    if not isBatch then
                        local fullName = PlayerUtil.GetFixName(friendInfo.FamilyName, friendInfo.Name)
                        UICommonUtil.ShowMessage(UITextConst.UI_TEXT_30523, fullName)
                    end
                else
                    Debug.Log("RecvMsg_FriendApplyAcceptReply error, serverdata.unknown.userid:", uid)
                end
            end

            if isBatch then
                UICommonUtil.ShowMessage(UITextConst.UI_TEXT_30528, #friendApplyAcceptList)
            end

            proxy:RefreshMaxCount()

            BllMgr.GetFriendBLL():CheckRed(true, true)

            ---更新申请列表
            EventMgr.Dispatch("EVENT_REFRESH_FRIENDING_ACCEPT")
            ---更新好友列表
            EventMgr.Dispatch("EVENT_REFRESH_FRIENDED_ADDFRIEND")
        else
            Debug.Log("RecvMsg_FriendApplyAcceptReply error, serverdata.FriendApplyAcceptList = nilOrEmpty")
        end
    else
        Debug.Log("RecvMsg_FriendApplyAcceptReply error, serverdata = nil")
    end
end

return MsgCmd_FriendApplyAcceptReply
