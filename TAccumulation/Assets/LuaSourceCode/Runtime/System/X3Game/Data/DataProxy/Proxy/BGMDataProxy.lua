---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by muchen.
--- DateTime: 2022/2/11 14:38
---@class BGMDataProxy 背景音乐数据
local BGMDataProxy = class("BGMDataProxy", BaseProxy)

---@class BGMPlayMode
BGMPlayMode = {
    Sequence = 0, --顺序播放
    Rand = 1, --随机播放
    Single = 2, --单曲循环
}

---@class BGMListDataModel
---@field listId int 列表id
---@field name string  列表名字
---@field songIds table<int> 歌曲Id 列表
---@field lastRenameTime   上次改名时间，用于CD
---初始化
---@param owner ProxyFactory
function BGMDataProxy:OnInit(owner)
    self.super.OnInit(self, owner)
    ---@type int 当前设置的背景音乐单曲Id
    self.songId = 0
    ---@type int 当前设置的背景音乐列表Id
    self.songListId = 0
    ---@type table<int,BGMListDataModel>   key 列表Id  value BGMListDataModel
    self.bgmDic = {}
    ---@type boolean 活动开关
    self.switchOff = true
    ---@type table<int,boolean>  解锁的歌曲列表  key 歌曲id  value 是否解锁 一直为true
    self.unlockSongsDic = {}
    ---@type BGMPlayMode 播放模式
    self.playModel = BGMPlayMode.Sequence
    ---@type int  最大列表数量
    self.maxBgmSongListNum = LuaCfgMgr.Get("SundryConfig", X3_CFG_CONST.MAINUIBGMLISTMAXNUM)
end
--region  服务器数据推送相关
function BGMDataProxy:OnEnterGameReply(msg)
    self.songId = msg.SongID
    self.songListId = msg.ListID
    self:InitBgmData(msg.BGMMap)
    self.switchOff = msg.SwitchOff
    self.unlockSongsDic = msg.UnlockSongs
    self.playModel = msg.Mode
end
---创建 添加bgm列表
function BGMDataProxy:AddBGMList(msg)
    local bgmListData = {}
    bgmListData.name = GameHelper.FilterSensitiveWord(msg.Name)
    bgmListData.songIds = msg.SongIDs
    bgmListData.listId = msg.ListID
    bgmListData.lastRenameTime = msg.LastRenameTime
    self.bgmDic[msg.ListID] = bgmListData
end

function BGMDataProxy:InitBgmData(bgmMap)
    for k, v in pairs(bgmMap) do
        self:AddBGMList(v)
    end
end

function BGMDataProxy:DeleteBGMList(reply,request)
    local listId=request.ListID
    if table.containskey(self.bgmDic, listId) then
        self.bgmDic[listId] = nil
    else
        Debug.LogError("刪除BGM列表错误 无该列表id", listId)
    end
    self:SetCurPlayBGM(reply.SongID,reply.ListID)
end

function BGMDataProxy:OnBGMModifyListReply(reply,request)
    if table.containskey(self.bgmDic, request.ListID) then
        self.bgmDic[request.ListID].songIds = request.SongIDs
        self.bgmDic[request.ListID].name = request.Name
        self.bgmDic[request.ListID].lastRenameTime = reply.LastRenameTime
    else
        Debug.LogError("更新BGM列表错误 无该列表id", request.ListID)
    end
    self:SetCurPlayBGM(reply.SongID,reply.ListID)
end

---设置 播放模式
function BGMDataProxy:SetBGMModel(msg)
    self.playModel = msg.Mode
end

---设置当前播放的BGM
function BGMDataProxy:SetCurPlayBGM(songId,listId)
    if self.songId~=songId then
        self.songId = songId
        EventMgr.Dispatch("SetBGMCallBack")
    end
    if self.songListId~=listId then
        self.songListId = listId
        EventMgr.Dispatch("BGMListIdChangeCallBack")
    end
end
---设置活动开关
function BGMDataProxy:SetBGMActiveSwitch(msg,request)
    self.switchOff = request.SwitchOff
end

function BGMDataProxy:SetUnlockSongs(msg)
    self.unlockSongsDic = msg.UnlockSongs
end

function BGMDataProxy:OnBGMCreateListReply(reply,request)
    local bgmListData = {}
    bgmListData.name=request.Name
    bgmListData.songIds=request.SongIDs
    bgmListData.listId=reply.ListID
    self.bgmDic[bgmListData.listId] = bgmListData
end


--endregion
--regionBGMBLL 相关接口
---获取已激活Bgm列表
function BGMDataProxy:GetBGMDataList()
    return self.unlockSongsDic
end
---是否已激活
function BGMDataProxy:IsUnlockBGM(id)
    return table.containskey(self.unlockSongsDic, id)
end
---获取 我的bgm 列表
function BGMDataProxy:GetSongListData()
    return self.bgmDic
end
---当前设置的背景音乐id
function BGMDataProxy:GetCurSongId()
    return self.songId
end
---当前设置的背景音乐列表id
function BGMDataProxy:GetCurListId()
    return self.songListId
end
---获取当前播放模式
function BGMDataProxy:GetPlayMode()
    if self.songListId == nil or self.songListId == 0 then
        return BGMPlayMode.Single
    end
    return self.playModel
end
---获取活动开关
function BGMDataProxy:GetSwitchOff()
    return self.switchOff
end
---获取歌曲 列表上限
function BGMDataProxy:GetMaxSongListNum()
    return self.maxBgmSongListNum
end
---当前应用 播放列表id
function BGMDataProxy:GetCurSongListId()
    return self.songListId
end
---获取 歌曲列表数据
function BGMDataProxy:GetSongListDataById(listId)
    return self.bgmDic[listId]
end

function BGMDataProxy:GetCurSongListData()
    return self.bgmDic[self.songListId]
end

--endregion
return BGMDataProxy