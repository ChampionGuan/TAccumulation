---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by jianxin.
--- DateTime: 2022/3/2 19:35
---

---@class FashionDataProxy:BaseProxy
local FashionDataProxy = class("FashionDataProxy", BaseProxy)

function FashionDataProxy:OnInit()
    ---@type DataProxy.FashionData
    self.fashionData = require("Runtime.System.X3Game.Data.DataProxy.Data.FashionData").new()
    self.fashionData:Init()
end

function FashionDataProxy:OnClear()

end

---@return DataProxy.FashionData
function FashionDataProxy:GetData()
    return self.fashionData
end

---进入游戏
---@param data pbcmessage.FashionData
function FashionDataProxy:EnterGame(data)
    self.fashionData:SetRoleFashionTab(data.RoleFashionMap)
    self.fashionData:SetUnlockFashionDataTab(data.FashionMap)
    self.fashionData:InitLocalFashionTab(data.TypeDressMap)
end

---@param scoreFashionMap table<int,int>
function FashionDataProxy:SetScoreFashion(scoreFashionMap)
    for k, v in pairs(scoreFashionMap) do
        self.owner:GetScoreProxy():SetScoreSuitID(k, v)
    end
end

---更新解锁的皮肤数据
---@param data pbcmessage.FashionUpdateReply
function FashionDataProxy:FashionUpdateReply(data)
    for i, v in ipairs(data.FashionList) do
        self.fashionData:SetUnlockFashionData(v)
    end
end

---更新男主日常装数据
---@param data pbcmessage.RoleDressUpdateReply
function FashionDataProxy:RoleDressUpdateReply(data)
    self.fashionData:SetRoleFashion(data.RoleFashion)
end

---更新男主日常装数据
---@param roleID int
---@param dressUp table<int,int>
function FashionDataProxy:FashionDressUpReply(roleID, dressUp, type, suitId)
    self.fashionData:SetRoleFashionDressUp(roleID, dressUp, type, suitId)
end

---更新女主皮肤数据
---@param data pbcmessage.GirlFashionChangeReply
function FashionDataProxy:GirlFashionChangeReply(data)
    self.fashionData:SetLocalFightFashionID(data.FightFashionId)
    self.fashionData:SetLocalFashionTab(data.Type, data.DressUp)
end

---更新女主皮肤数据
---@param data pbcmessage.GirlFightFashiopnUpdateReply
function FashionDataProxy:GirlFightFashionUpdateReply(data)
    self.fashionData:SetLocalFightFashionID(data.FightFashionId)
end

---更新女主皮肤数据
---@param data pbcmessage.FashionUpdateReply
function FashionDataProxy:FashionUpdateReply(data)
    for i, v in ipairs(data.FashionList) do
        self.fashionData:SetUnlockFashionData(v)
    end
end

---获取女主日常装
---@return  table<int,int>
function FashionDataProxy:GetLocalFashionTab(type)
    return self.fashionData:GetLocalFashionTab(type)
end

---获取主日常装
---@param roleID int
---@return  table<int,int>
function FashionDataProxy:GetRoleFashionData(roleID)
    return self.fashionData:GetRoleFashion(roleID)
end

---获取男主日常装
---@param roleID int
---@return  table<int,int>
function FashionDataProxy:GetRoleFashionTab(roleID, type)
    return self.fashionData:GetRoleDressUpTab(roleID, type)
end

---获取男主套装信息
---@param roleID int
---@return  int
function FashionDataProxy:GetRoleFashionSuitID(roleID, type)
    if self:GetRoleFashionData(roleID) ~= nil then
        type = type and type or DressUpType.DressUpDaily
        return self:GetRoleFashionData(roleID).TypeDressMap[type].SuitId
    end
    return 0
end

---设置男主套装信息
---@param roleID int
---@param suitID int
function FashionDataProxy:SetRoleFashionSuitID(roleID, suitID, type)
    type = type and type or DressUpType.DressUpDaily
    local dressUp = self.fashionData:GetRoleFashion(roleID).TypeDressMap[type]
    dressUp.SuitId = suitID
end

---获取当前皮肤数据
---@param fashionID int
---@return pbcmessage.Fashion
function FashionDataProxy:GetUnlockFashionData(fashionID)
    return self.fashionData:GetUnlockFashionData(fashionID)
end

---获取所有解锁数据
---@return  table<int,pbcmessage.Fashion>
function FashionDataProxy:GetAllUnlockFashionData()
    return self.fashionData:GetUnlockFashionDataTab()
end

---获取女主战斗皮肤数据
---@return int 女主战斗皮肤数据
function FashionDataProxy:GetLocalFightFashionID()
    return self.fashionData:GetLocalFightFashionID()
end

---获取score战斗套装数据
---@param scoreID int scoreID
---@return X3Data.SCore
function FashionDataProxy:GetSCoreFashion(scoreID)
    return self.owner:GetScoreProxy():GetScoreData(scoreID)
end

---设置score战斗套装数据
---@param scoreID int scoreID
---@return int
function FashionDataProxy:SetSCoreFashion(scoreID, suitID)
    self.owner:GetScoreProxy():SetScoreSuitID(scoreID, suitID)
end

---获取配置表Score 皮肤数据
---@param scoreID int
---@return FashionData.ScoreAllFashionData
function FashionDataProxy:GetCfgScoreFashionData(scoreID)
    return self.fashionData:GetCfgScoreFashionData(scoreID)
end

---获取对话表
---@return table<int cfg.FashionTalkGroup>
function FashionDataProxy:GetCfgTalkTab()
    return self.fashionData:GetCfgTalkTab()
end

---获取男主是否能换装
---@param roleID int 角色ID
---@return int
function FashionDataProxy:GetFashionSelfDress(roleID, type)
    type = type and type or DressUpType.DressUpDaily
    return self:GetRoleFashionData(roleID).TypeDressMap[type].AutoDressUp
end

---设置男主是否自动换装
---@param data pbcmessage.FashionSelfDressReply
function FashionDataProxy:SetFashionSelfDress(data, type)
    type = type and type or DressUpType.DressUpDaily
    self:GetRoleFashionData(data.Role).TypeDressMap[type].AutoDressUp = data.SelfDress
end

---获取推荐次数表数据
---@param roleID int
---@return cfg.DressCounterTalk
function FashionDataProxy:GetDressCounterTalkTab(roleID)
    return self.fashionData:GetDressCounterTalkTab(roleID)
end

return FashionDataProxy