---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by jiantao.
--- DateTime: 2023/10/16 10:48
---
---@class ReturnActivityProxy:BaseProxy
local ReturnActivityProxy = class("ReturnActivityProxy", BaseProxy)

function ReturnActivityProxy:SetData(Data)
    if Data == nil then
        return
    end
    self.returnData:SetStartTime(Data.StartTime)
    self.returnData:SetReturnID(Data.ReturnID)
    self.returnData:SetRoleID(Data.RoleID)
    self.returnData:SetLastStartTime(Data.LastStartTime)
    self.returnData:SetOpenLoginDay(Data.OpenLoginDay)
    self.returnData:SetOpenLoginLastUpdateTime(Data.OpenLoginLastUpdateTime)
    for k, v in pairs(Data.SignInRewardClaimed) do
        self.returnData:AddOrUpdateSignInRewardClaimedValue(k, v)
    end
    for k, v in pairs(Data.CardRead) do
        self.returnData:AddOrUpdateCardReadValue(k, v)
    end
    local doubleCfgs = LuaCfgMgr.GetListByCondition("ReturnDropDouble", {ReturnId = Data.ReturnID})
    for k, v in pairs(doubleCfgs) do
        local type = v.EffectSystem
        self.returnData:AddOrUpdateDoubleTimesValue(type, SelfProxyFactory.GetCustomRecordProxy():GetCustomRecordValue(DataSaveCustomType.DataSaveCustomTypeReturnStageDoubleDrop, type))
    end
end

function ReturnActivityProxy:OnPassDay()
    self.returnData:SetOpenLoginDay(self.returnData:GetOpenLoginDay() + 1)
    local doubleCfgs = LuaCfgMgr.GetListByCondition("ReturnDropDouble", {ReturnId = self.returnData:GetReturnID()})
    for k, v in pairs(doubleCfgs) do
        local type = v.EffectSystem
        self.returnData:AddOrUpdateDoubleTimesValue(type, v.Max)
    end
end

function ReturnActivityProxy:SetDoubleTime(type, time)
    self.returnData:AddOrUpdateDoubleTimesValue(type, time)
end

function ReturnActivityProxy:OnSetRoleReply(roleID)
    self.returnData:SetRoleID(roleID)
end

function ReturnActivityProxy:GetReturnActivityData()
    return self.returnData
end

function ReturnActivityProxy:SetSignInfo(day)
    self.returnData:AddOrUpdateSignInRewardClaimedValue(day, true)
    local signCfg = LuaCfgMgr.Get("ReturnSign", self.returnData:GetReturnID(), day)
    if signCfg and signCfg.IsUnlockCard == 1 then
        EventMgr.Dispatch("OnReturnCardUnlock")
    end
end

function ReturnActivityProxy:SetCardRead(roleID)
    self.returnData:AddOrUpdateCardReadValue(roleID, true)
end

---统一初始化，只会调用一次
function ReturnActivityProxy:OnInit()
    ---@type X3Data.ReturnActivityData
    self.returnData = X3DataMgr.GetOrAdd(X3DataConst.X3Data.ReturnActivityData)
end

---统一清理相关数据状态，只会调用一次
function ReturnActivityProxy:OnClear()
    table.clear(self)
    EventMgr.RemoveListenerByTarget(self)
end

return ReturnActivityProxy