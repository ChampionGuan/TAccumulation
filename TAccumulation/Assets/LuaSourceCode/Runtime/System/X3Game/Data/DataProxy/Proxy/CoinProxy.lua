---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by doudou.
--- DateTime: 2022/5/5 17:14
--- 玩家货币信息
---@class CoinProxy:BaseProxy
local CoinProxy = class("CoinProxy", BaseProxy)

---@class PlayerCoinEnum 角色货币枚举
PlayerCoinEnum = {
    Jewel = "Jewel",
    Gold = "Gold",
    Power = "Power",
    PowerTime = "PowerTime",
    StarJewel = "StarJewel",
    TestPoint = "TestPoint",  -- 活动所使用的的测试积分
}

---@class PlayerCoinEventEnum 角色货币事件枚举
local PlayerCoinEventEnum = {
    Jewel = "DiamondsChangedEventCallBack",
    Gold = "GoldChangedEventCallBack",
    Power = "SeverPowerUpdate",
    PowerTime = "SeverPowerUpdate",
    StarJewel = "StarJewelChangedEventCallBack",
    TestPoint = "TestPointChangedEventCallBack",
}

local CoinIndexEnum = {
    [X3_CFG_CONST.ITEM_TYPE_JEWEL] = "Jewel",
    [X3_CFG_CONST.ITEM_TYPE_GOLD] = "Gold",
    [X3_CFG_CONST.ITEM_TYPE_STAMINA] = "Power",
    [-X3_CFG_CONST.ITEM_TYPE_STAMINA] = "PowerTime",
    [X3_CFG_CONST.ITEM_TYPE_STARDIAMOND] = "StarJewel",
    [X3_CFG_CONST.ITEM_TYPE_TESTPOINT] = "TestPoint",
}

local CoinTypeEnum = {
    Jewel = X3_CFG_CONST.ITEM_TYPE_JEWEL,
    Gold = X3_CFG_CONST.ITEM_TYPE_GOLD,
    Power = X3_CFG_CONST.ITEM_TYPE_STAMINA,
    PowerTime = -X3_CFG_CONST.ITEM_TYPE_STAMINA,
    StarJewel = X3_CFG_CONST.ITEM_TYPE_STARDIAMOND,
    TestPoint = X3_CFG_CONST.ITEM_TYPE_TESTPOINT,
}

---@class PlayerCoin 角色货币信息
---@field Jewel int 钻石数量
---@field Gold int 金币数量
---@field Power int 体力数量
---@field StarJewel int 星钻数量

function CoinProxy:OnInit()
    -----@type pbcmessage.CoinClient
    self.data = {}
end

function CoinProxy:OnEnterGame(coin)
    self.data = {}
    for index, value in pairs(coin) do
        local saveValue =  value + (index == "PowerTime" and 1 or 0)
        self.data[index] = saveValue
        local key = CoinTypeEnum[index]
        local coin = X3DataMgr.Get(X3DataConst.X3Data.Coin, key)
        if coin == nil then
            coin = X3DataMgr.AddByPrimary(X3DataConst.X3Data.Coin, nil, key)
        end
        coin:SetValue(saveValue)
    end
end

--region GetData
---获取子元素数据
---@param enum PlayerCoinEnum 要获取的枚举值
function CoinProxy:GetItemData(enum)
    return self.data[enum] or 0
end

--引用地方较多，暂时保留 --择机换成GetItemData
function CoinProxy:GetCoin()
    return self.data
end

--region setData

function CoinProxy:CoinUpdate(coinType, Num, silent)
    local idx = CoinIndexEnum[coinType]

    if idx then
        local saveValue = Num + (idx == "PowerTime" and 1 or 0)
        self.data[idx] = saveValue
        local coin = X3DataMgr.Get(X3DataConst.X3Data.Coin, coinType)
        if coin == nil then
            coin = X3DataMgr.AddByPrimary(X3DataConst.X3Data.Coin, nil, coinType)
        end
        coin:SetValue(saveValue)

        if not silent and PlayerCoinEventEnum[idx] then
            EventMgr.Dispatch(PlayerCoinEventEnum[idx])
        end
    end
end

---设置子元素数据
---@param enum PlayerCoinEnum 要设置的枚举值
function CoinProxy:SetItemData(enum, value)
    self.data[enum] = value
    local key = CoinTypeEnum[enum]
    local coin = X3DataMgr.Get(X3DataConst.X3Data.Coin, key)
    if coin == nil then
        coin = X3DataMgr.AddByPrimary(X3DataConst.X3Data.Coin, nil, key)
    end
    coin:SetValue(value)
end

--endregion

return CoinProxy