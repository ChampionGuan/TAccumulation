---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by jianxin.
--- DateTime: 2022/3/2 19:12
---

---@class FashionData.ScoreAllFashionData
---@field fashionIDList table<int>

---@class FashionData.DressUpData
---@field dressUp table<int,int> 皮肤ID列表 key:部位ID  value: 皮肤ID

---@class FashionData.RoleFashionData
---@field dressUpTab  table<FashionData.DressUpType,FashionData.DressUpData> key:数据类型  value: 日常装数据
---@field roleID int
---@field suitID int
---@field autoDressUp bool
---@field dressUpTime int

---@class DataProxy.FashionData
local FashionData = class("FashionData")

---@class FashionData.DressUpType
DressUpType = {
    DressUpDaily = 1, -- 日常穿搭
    DressUpPhoto = 2, -- 拍照穿搭
    DressUpPhotoAR = 3, --AR大头贴
}

function FashionData:ctor()
    ---@type table<int,FashionData.RoleFashionData>  key: 男主ID vale: 男主日常装皮肤数据
    self.roleFashionTab = {}
    ---@type int 女主装备的战斗皮肤
    self.localFightFashionId = 0
    ---@type table<FashionData.DressUpType,table<int,int>> key:部位枚举 value:FashionId  女主装备的日常皮肤
    self.localFashionTab = {}
    ---@type table<int,FashionData.DressUpData>  解锁的皮肤数据
    self.unlockFashionTab = {}

    ---本地数据
    ---@type table<int,cfg.FashionTalkGroup> 对话气泡表
    self.fashionTalkTab = {}
    ---@type table<int,FashionData.ScoreAllFashionData>
    self.scoreAllFashionTab = {}
    ---@type table<int,cfg.DressCounterTalk>
    self.DressCounterTalk = {}
end

---设置所有男主日常装数据
---@param data table<int,pbcmessage.RoleFashion>
function FashionData:SetRoleFashionTab(data)
    self.roleFashionTab = data
end

---设置男主日常装数据
---@param data pbcmessage.RoleFashion
function FashionData:SetRoleFashion(data)
    self.roleFashionTab[data.RoleId] = data
end

---@param roleID int
---@param dressUpData table<int,int>
---@param type FashionData.DressUpType
function FashionData:SetRoleFashionDressUp(roleID, dressUpData, type, suitId)
    type = type and type or DressUpType.DressUpDaily
    self.roleFashionTab[roleID].TypeDressMap[type].DressUp = dressUpData
    self.roleFashionTab[roleID].TypeDressMap[type].SuitId = suitId
end

---获取所有男主日常装数据
---@return table<int,pbcmessage.RoleFashion>
function FashionData:GetRoleFashionTab()
    return self.roleFashionTab
end

---获取男主日常装数据
---@param roleID int 角色ID
---@return pbcmessage.RoleFashion
function FashionData:GetRoleFashion(roleID)
    return self.roleFashionTab[roleID]
end

---设置女主战斗皮肤数据
---@param fashionID int 皮肤ID
function FashionData:SetLocalFightFashionID(fashionID)
    self.localFightFashionId = fashionID
end

---获取女主战斗皮肤数据
---@return int 女主战斗皮肤数据
function FashionData:GetLocalFightFashionID()
    return self.localFightFashionId
end

---设置女主日常装
---@param data table<int,int>
function FashionData:InitLocalFashionTab(data)
    self.localFashionTab = data
end

function FashionData:SetLocalFashionTab(type, data)
    self.localFashionTab[type].DressUp = data
end

---获取女主日常装
---@param type FashionData.DressUpType
---@return  table<int,int>
function FashionData:GetRoleDressUpTab(roleID, type)
    type = type and type or DressUpType.DressUpDaily
    local roleFashionData = self:GetRoleFashion(roleID)
    local dressUp = {}
    if roleFashionData then
        local roleDressUp = roleFashionData.TypeDressMap[type]
        if not table.isnilorempty(roleDressUp) then
            dressUp = roleDressUp.DressUp
        end
        ---拍照数据不存在初始化，不存在拍照数据的时候就复用日常装的
        if table.isnilorempty(dressUp) then
            roleDressUp = {}
            roleDressUp.DressUp = table.clone(roleFashionData.TypeDressMap[DressUpType.DressUpDaily].DressUp)
            roleFashionData.TypeDressMap[type] = roleDressUp
            dressUp = roleDressUp.DressUp
        end
    end
    return dressUp
end

---获取女主日常装
---@param type FashionData.DressUpType
---@return  table<int,int>
function FashionData:GetLocalFashionTab(type)
    type = type and type or DressUpType.DressUpDaily
    local roleDressUp = self.localFashionTab[type]
    local dressUp = {}
    if not table.isnilorempty(roleDressUp) then
        dressUp = roleDressUp.DressUp
    end
    ---拍照数据不存在初始化，不存在拍照数据的时候就复用日常装的
    if table.isnilorempty(dressUp) then
        roleDressUp = {}
        roleDressUp.DressUp = table.clone(self.localFashionTab[DressUpType.DressUpDaily].DressUp)
        self.localFashionTab[type] = roleDressUp
        dressUp = roleDressUp.DressUp
    end
    return dressUp
end

---设置解锁皮肤数据
---@param data table<int,pbcmessage.Fashion> 解锁皮肤列表
function FashionData:SetUnlockFashionDataTab(data)
    self.unlockFashionTab = data
    if not RedPointMgr.IsInit() then
        for _, v in pairs(self.unlockFashionTab) do
            local value = RedPointMgr.GetValue(X3_CFG_CONST.RED_FASHION_SINGLE, data.Id)
            ---红点已经处理过
            if value ~= 2 then
                RedPointMgr.Save(1, X3_CFG_CONST.RED_FASHION_SINGLE, data.Id)
            end
        end
    end
end

---获取解锁皮肤数据
---@return  table<int,pbcmessage.Fashion> 解锁皮肤列表
function FashionData:GetUnlockFashionDataTab()
    return self.unlockFashionTab
end

---设置解锁皮肤数据
---@param data pbcmessage.Fashion 解锁皮肤列表
function FashionData:SetUnlockFashionData(data)
    local fashionID = data.Id
    self.unlockFashionTab[fashionID] = data
    if not RedPointMgr.IsInit() then
        local value = RedPointMgr.GetValue(X3_CFG_CONST.RED_FASHION_SINGLE, data.Id)
        ---红点已经处理过
        if value ~= 2 then
            RedPointMgr.Save(1, X3_CFG_CONST.RED_FASHION_SINGLE, data.Id)
        end
    end
end

---获取解锁皮肤数据
---@param fashionID int 皮肤ID
---@return pbcmessage.Fashion
function FashionData:GetUnlockFashionData(fashionID)
    return self.unlockFashionTab[fashionID]
end

---获取配置表Score 皮肤数据
---@param scoreID int
---@return FashionData.ScoreAllFashionData
function FashionData:GetCfgScoreFashionData(scoreID)
    return self.scoreAllFashionTab[scoreID]
end

---获取对话表
---@return table<int cfg.FashionTalkGroup>
function FashionData:GetCfgTalkTab()
    return self.fashionTalkTab
end

---获取推荐次数表数据
---@param roleID int
---@return cfg.DressCounterTalk
function FashionData:GetDressCounterTalkTab(roleID)
    return self.DressCounterTalk[roleID]
end

----本地数据

function FashionData:Init()
    self:InitFashionTalkTab()
    self:InitScoreAllFashionTab()
    self:InitDressCounterTalkTab()
    self:InitLocalDressTab()
end

---初始化 男主换装对话数据
function FashionData:InitFashionTalkTab()
    local wearTalkTab = LuaCfgMgr.GetAll("FashionTalkGroup")
    self.fashionTalkTab = {}
    for k, v in pairs(wearTalkTab) do
        if self.fashionTalkTab[v.TalkGroupID] == nil then
            self.fashionTalkTab[v.TalkGroupID] = {}
        end
        local tab = self.fashionTalkTab[v.TalkGroupID]
        tab[#tab + 1] = v
        self.fashionTalkTab[v.TalkGroupID] = tab
    end
end

---初始化 Score所有皮肤数据
function FashionData:InitScoreAllFashionTab()
    local fashionAllData = LuaCfgMgr.GetAll("FashionData")
    local ScoreFashionTab = {}
    for k, v in pairs(fashionAllData) do
        local scoreID = v.SCoreID
        if ScoreFashionTab[scoreID] == nil then
            local tab = {}
            tab.fashionIDList = {}
            ScoreFashionTab[scoreID] = tab
        end
        local fashionID = v.ID
        ScoreFashionTab[scoreID].fashionIDList[#ScoreFashionTab[scoreID].fashionIDList + 1] = fashionID
    end
    self.scoreAllFashionTab = ScoreFashionTab
end

function FashionData:InitDressCounterTalkTab()
    local DressCounterTalk = LuaCfgMgr.GetAll("DressCounterTalk")
    for k, v in pairs(DressCounterTalk) do
        if self.DressCounterTalk[v.RoleID] == nil then
            self.DressCounterTalk[v.RoleID] = {}
        end
        local tab = self.DressCounterTalk[v.RoleID]
        tab[#tab + 1] = v
    end
    for k, tab in pairs(self.DressCounterTalk) do
        table.sort(tab, function(a, b)
            return a.Times > b.Times
        end)
    end
end

function FashionData:InitLocalDressTab()
    local fashionDefaultDatas_cfg = LuaCfgMgr.GetAll("FashionDefault")
    for k, v in pairs(fashionDefaultDatas_cfg) do
        if v.Role == 0 then
            if table.isnilorempty(self.localFashionTab[DressUpType.DressUpDaily]) then
                self.localFashionTab[DressUpType.DressUpDaily] = {}
                self.localFashionTab[DressUpType.DressUpDaily].DressUp = {}
            end
            self.localFashionTab[DressUpType.DressUpDaily].DressUp[v.Part] = v.DefaultFashion
        end
    end
end

return FashionData