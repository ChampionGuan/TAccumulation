---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by deling.
--- DateTime: 2023/7/28 16:43
---
---@class ActivityCenterConst
local ActivityCenterConst = {}

---红点类型
local ACTIVITY_RP_TYPE = {
    TIPS = 0,
    NEW = 1,
    REWARD = 2,
}

---活动入口类型(名称与CMS上保持统一，即CMS上：活动入口配置)
---@class ActivityCenterConst.ActivitySortType
local ActivitySortType = {
    Banner = 0, --banner集合
    Single = 1, --单页签单活动
    MainEntry = 2, --主界面大图
}

---@class ActivityCenterConst.ActivityEntryType
local ActivityEntryType = {
    Sign = 1, --活动累计登录, 累计登录类型的活动
    Show = 2, --活动展示, 不涉及服务器数据的纯展示类型(大图)
    Task = 3, --活动任务, 包括任务板、活动累计档位置等功能结构的类型
    GamePlay = 4, --活动玩法, 指gameplay相关玩法的活动结构（入口需求+调用关卡）
    -- 入口需求：指作为活动入口需要的功能属性，比如进入消耗次数，次数恢复等
    --调用关卡：指这个活动实际对应调用哪些玩法哪些具体关卡"
    SCoreTry = 5, --搭档试用, 特指搭档试用类型活动
    ---为啥没有6，我也想知道
    ScheduleType = 7, --定时奖励-视频电话, 特指定时奖励类型活动
    PuzzleGame = 8, --拼图游戏, 特指利莫里亚-拼图
    ActivityDialogue = 9, --活动剧情, 收录活动线性剧情的类型 情人节活动
    Interaction = 10, --3D交互, 与男主进行3D交互的类型
    ActivityDropMultiple = 11, --多倍掉落活动
    ActivityTurntable = 12, --转盘活动
    HangUp = 13, -- 挂机活动
    DIYModel = 14, -- 自定义模型
    Collect = 15 , --收集活动
}
---@Class ActivityCenterConst.TaskCellState
local TaskCellState = {
    Rewards = 1, ---已完成可领奖
    JumpTo = 2, ---未完成可跳转
    NoReach = 3, ---未完成不可跳转
    Finish = 4, ---已经完成
}
---@class ActivityCenterConst.ActivityEntrySignType
local ActivityEntrySignType = {
    Normal = 1,
    NewBie = 2,
    Limoliya = 3, --利莫里亚
    ActivityFieryFantasy = 4, --情人节活动
    RoleBirthday = 5, -- 男主生日活动
}

---@class ActivityCenterConst.ActivityGamePlayType
local ActivityGamePlayType = {
    BlockTower = 1, ---叠叠乐
    KnockMole = 2, ---活动打地鼠
}

local ActivityEntryViewType = {
    FullWindow = 1, --全屏界面
    Tip = 2, --弹窗
    PV = 3, --PV
}

---@class ActivityCenterConst.LogicDic
local LogicDic = {
    [ActivityEntryType.Sign] = { [1] = "Runtime.System.X3Game.UI.UIView.ActivityMainWnd.ActivitySign",
                                 [2] = "Runtime.System.X3Game.UI.UIView.ActivityMainWnd.ActivityNewBieLogin",
                                 [3] = X3Game.Ctrl.ActivitySignCard__ActivitySignCardCtrl,},

    [ActivityEntryType.Show] = { [1] = "Runtime.System.X3Game.UI.UIView.ActivityMainWnd.ActivityTask" },

    [ActivityEntryType.Task] = { [1] = "Runtime.System.X3Game.UI.UIView.ActivityMainWnd.ActivityIntegral",
                                 [2] = "Runtime.System.X3Game.UI.UIView.ActivityMainWnd.ActivityNewBieIntegral",
                                 [3] = X3Game.Ctrl.ActivityScoreMain__UIPrefabActivityCard156008Ctrl,
                                 [4] = X3Game.Ctrl.UIPrefabActivityFieryFantasyTask__UIPrefabActivityFieryFantasyTaskCtrl,
                                 [5] = X3Game.Ctrl.Activity_RoleBirthday__UIPrefabActivityRBTaskCtrl, },

    [ActivityEntryType.GamePlay] = { [1] = "Runtime.System.X3Game.UI.UIView.ActivityMainWnd.ActivityRandom" },

    [ActivityEntryType.SCoreTry] = { [1] = "Runtime.System.X3Game.UI.UIView.ActivityMainWnd.ActivitySCoreTry" },
    [ActivityEntryType.PuzzleGame] = { [1] = X3Game.Ctrl.ActivityScoreMain__UIPrefabActivityCard156008PuzzleCtrl },
    [ActivityEntryType.ActivityDialogue] = { [1] = X3Game.Ctrl.ActivityFieryFantasy__UIPrefabActivityFieryFantasyCtrl,
                                             [2] = X3Game.Ctrl.Activity_RoleBirthday__UIPrefabActivityRBCtrl, },
    [ActivityEntryType.ActivityDropMultiple] = { [1] = X3Game.Ctrl.ActivityDropMultiple__UIPrefabActivityMultipleCtrl },
    [ActivityEntryType.ActivityTurntable] = { [1] = X3Game.Ctrl.ActivityTurntableWnd__UIPrefabActivityTurntableCtrl },
    [ActivityEntryType.HangUp] = { [1] = X3Game.Ctrl.Activity_HangUp__UIPrefabActivityRBHangUPCtrl },
    [ActivityEntryType.DIYModel] = { [1] = X3Game.Ctrl.Activity_RoleBirthday__CakeDIY__UIPrefabActivityRBDIYModelCtrl },
    [ActivityEntryType.Collect] = { [1] = X3Game.Ctrl.Activity_RoleBirthday__ActivityDIYCollect__ActivityDIYCollectCtrl }
}

---仅为真正活动，即有活动逻辑的业务使用(支持数组形式)，在活动这里仅有入口的，请在网页CMS上配置《业务红点ID》
---@class ActivityCenterConst.RedPointDic
local RedPointDic =
{
    [ActivityEntryType.ActivityTurntable] = {[1] = {
        X3_CFG_CONST.RED_TURNTABLE,
    } },
    [ActivityEntryType.SCoreTry] = {
        [1] = {
            X3_CFG_CONST.RED_ACTIVITY_SCORETRY_REWARD,
        }
    },
    [ActivityEntryType.ActivityDialogue] = {
        [1] = {X3_CFG_CONST.RED_FIERYFANTASY},
        [2] = {X3_CFG_CONST.RED_ACTIVITY_RB}, 
    },
}

---@class ActivityCenterConst.JumpType
local JumpType = {
    InGame = 0, ---游戏内界面
    OutGame = 1, ---游戏外链接
    Bili = 2, ---B站
    WeiBo = 3, ---微博
    QQ = 4,          ---QQ
    DeepLink = 5   ---OpenUrl的方式打开
}

---@class ActivityCenterConst.TimeZoneType
local TimeZoneType = {
    Same = 0, ---同时
    Server = 1 ---按服务器时间
}

---@class ActivityCenterConst.EventType
local EventType = {
    RECOVER_VIEW = "RECOVER_VIEW",
    FANTASY_DIALOGUE_END = "FANTASY_DIALOGUE_END",
    ACTIVITY_GAME_PLAY_UPDATE = "ACTIVITY_GAME_PLAY_UPDATE",
    ACTIVITY_LOADING_WHITE = "ACTIVITY_LOADING_WHITE",
    REWARD_CLAIM_REPLY = "ActivityCenterConst.EventType.REWARD_CLAIM_REPLY",
    CMS_REFRESH = "CMSDataUpdate",  ---服务器更新CMS信息时
    INIT_CHECK = "INIT_CHECK",      ---增加数据初始化完毕的事件
}

ActivityCenterConst.TimeZoneType = TimeZoneType
ActivityCenterConst.ActivityEntryType = ActivityEntryType
ActivityCenterConst.ActivitySortType = ActivitySortType
ActivityCenterConst.LogicDic = LogicDic
ActivityCenterConst.RedPointDic = RedPointDic

ActivityCenterConst.ActivityEntrySignType = ActivityEntrySignType
---@class ActivityCenterConst.ActivityEntryViewType
ActivityCenterConst.ActivityEntryViewType = ActivityEntryViewType
---@class ActivityCenterConst.ACTIVITY_RP_TYPE
ActivityCenterConst.ACTIVITY_RP_TYPE = ACTIVITY_RP_TYPE
ActivityCenterConst.JumpType = JumpType
ActivityCenterConst.TaskCellState = TaskCellState
ActivityCenterConst.ActivityGamePlayType = ActivityGamePlayType

ActivityCenterConst.EventType = EventType

---情人节自身业务事件
ActivityCenterConst.FantasyEvent = {
    RestoreMainCtrl = "RestoreMainCtrl"
}

return ActivityCenterConst