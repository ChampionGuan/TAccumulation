---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by jiaozhu.
--- DateTime: 2023/11/8 16:23

---@class CriticalLog
local CriticalLog = {}

---@type PapeGames.X3.CriticalLog
local CLS = CS.PapeGames.X3.CriticalLog

---打印日志
---@param message string
function CriticalLog.Log(message)
    if not CriticalLog.IsEnabled() then
        return
    end
    CLS.Log(message)
end

---打印格式化日志
---@param format string eg:CriticalLog.LogFormat("a=%s,b=%s", 1,2)
function CriticalLog.LogFormat(format, ...)
    if not CriticalLog.IsEnabled() then
        return
    end
    CriticalLog.Log(string.format(format, ...))
end

---设置开关
---@param enabled boolean
function CriticalLog.SetEnable(enabled)
    if enabled == nil then
        enabled = false
    end
    CLS.SetEnable(enabled)
end

---当前是否开启
---@return boolean
function CriticalLog.IsEnabled()
    return CLS.Enabled
end

---设置自动存储阈值
---@param count int
function CriticalLog.SetAutoFlushThreshold(count)
    CLS.SetAutoFlushThreshold(count or 0)
end

---当前等待存储的日志数量
---@return int
function CriticalLog.GetFlushCount()
    return CLS.ToFlushCount
end

---缓存数据存储到文件
function CriticalLog.Flush()
    CLS.Flush()
end

---获取当前文件id
---@return int
function CriticalLog.GetLogFileId()
    return CLS.LogFileId
end

---获取当前日志路径
---@return string
function CriticalLog.GetCurLogFilePath()
    return CLS.CurLogFilePath
end

---获取上次日志路径
---@return string
function CriticalLog.GetLastLogFilePath()
    local filePath = CLS.LastLogFilePath
    if string.isnilorempty(filePath) then
        return CriticalLog.GetCurLogFilePath()
    end
    return filePath
end

return CriticalLog