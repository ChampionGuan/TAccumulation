---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by jiaozhu.
--- DateTime: 2023/6/28 10:57
---
---图片组件
---@class UComponent.GIFImage:UComponent.BaseComponent
local GIFImage = class("GIFImage", Framework.BaseComponent)

---以图集的形式设置序列帧图片组，适用于1个图集有多组gif的情况，会根据gifNamePrefix和count把散图名字拼出来,设置好后会自动播放（异步）
---@param gifNamePrefix string 序列帧命名前缀
---@param count int 序列帧数量
function GIFImage:SetGIFSpritePrefixName(gifNamePrefix, count)
    self:_InvokeFunc("SetGIFSpritePrefixName", gifNamePrefix, count)
end

---设置动图总时长
---@param gifTime float 动图总时长
function GIFImage:SetGIFTime(gifTime)
    self:_InvokeFunc("SetGIFTime", gifTime)
end

---设置动图每帧的时长
---@param perFrameTime float[] 设置动图每帧的时长
function GIFImage:SetGIFPerFrameTime(perFrameTime)
    self:_InvokeFunc("SetGIFPerFrameTime", perFrameTime)
end

---设置当前显示的动图序列帧图片索引
---@param index int 索引
function GIFImage:SetGIFSpriteIndex(index)
    self:_InvokeFunc("SetGIFSpriteIndex", index)
end

---以大图的形式通过运行时分割（左下角为原点）设置序列帧图片组,设置好后会自动播放
---@param tex Texture2D 序列帧散图合成的大图
---@param row int 行数
---@param col int 列数
---@param count int 序列帧散图总数
function GIFImage:SetGIFTexture2D(tex, row, col, count)
    self:_InvokeFunc("SetGIFTexture2D", tex, row, col, count)
end

---从GifImg表中读取参数来播放动图
---@param cfgKey string GifImg的StringKey
function GIFImage:SetGIFWithCfg(cfgKey)
    local gifCfg = LuaCfgMgr.Get("GifImg", cfgKey)
    local perFrameCfg = LuaCfgMgr.GetListByCondition("GifImgFrame", { StringKey = cfgKey })
    local perFrameTime = PoolUtil.GetTable()
    local frameCount = table.nums(perFrameCfg)

    if frameCount and frameCount > 0 then
        for _, v in pairs(perFrameCfg) do
            perFrameTime[v.FrameNumber] = v.FrameTime
        end
        self:SetGIFPerFrameTime(perFrameTime)
    else
        frameCount = gifCfg.FrameNum
    end

    if gifCfg.Time then
        self:SetGIFTime(gifCfg.Time)
    end

    self:SetGIFSpritePrefixName(gifCfg.Prefix, frameCount);

    PoolUtil.ReleaseTable(perFrameTime)
end

function GIFImage:SetListener(onBegin, onComplete, onKeyFrame)
    local id = self:GetComponentID(self.UIEventType.GIFImage)
    local res = (onBegin or onComplete or onKeyFrame) ~= nil
    if res then
        if onBegin ~= nil then
            self:_RegisterEventDelegate(id, self.UIEventType.GIFImage, self.UIEventHandlerType.GIFImage_OnBegin, onBegin)
        end
        if onComplete ~= nil then
            self:_RegisterEventDelegate(id, self.UIEventType.GIFImage, self.UIEventHandlerType.GIFImage_OnComplete, onComplete)
        end
        if onKeyFrame ~= nil then
            self:_RegisterEventDelegate(id, self.UIEventType.GIFImage, self.UIEventHandlerType.GIFImage_OnKeyFrame, onKeyFrame)
        end
    end
end

return GIFImage