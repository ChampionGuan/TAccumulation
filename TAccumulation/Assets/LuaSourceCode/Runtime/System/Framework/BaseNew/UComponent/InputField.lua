---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by jiaozhu.
--- DateTime: 2023/6/5 21:02
---

---InputField组件
---@class UComponent.InputField:UComponent.Text
local InputField = class("InputField", Framework.Parser.UComponentParser:GetComponent(UComponent.Text))

---给X3InputField, TMP_InputField, InputField增加回调事件
---@param onValueChanged fun(type:string):void 内容变动事件
---@param onEndEdit fun(type:string):void 结束编辑事件
---@param onEndEditAndCheck fun(type:string, type:bool):void 结束编辑事件(包含检查结果)
---@param onClick fun(type:GameObject):void 点击输入框事件
function InputField:SetListener(onValueChanged, onEndEdit, onEndEditAndCheck, onClick)
    local id = self:GetComponentID(self.UIEventType.InputField)
    local res = (onValueChanged or onEndEdit or onEndEditAndCheck or onClick) ~= nil
    if res then
        if onValueChanged ~= nil then
            self:_RegisterEventDelegate(id, self.UIEventType.InputField, self.UIEventHandlerType.InputField_OnValueChanged, onValueChanged)
        end
        if onEndEdit ~= nil then
            self:_RegisterEventDelegate(id, self.UIEventType.InputField, self.UIEventHandlerType.InputField_OnEndEdit, onEndEdit)
        end
        if onEndEditAndCheck ~= nil then
            self:_RegisterEventDelegate(id, self.UIEventType.InputField, self.UIEventHandlerType.InputField_OnEndEditAndCheck, onEndEditAndCheck)
        end
        if onClick ~= nil then
            self:_RegisterEventDelegate(id, self.UIEventType.InputField, self.UIEventHandlerType.InputField_OnClick, onClick)
        end
    else
        self:_UnregisterEventDelegate(id, self.UIEventType.InputField)
    end

end

---激活X3InputField, TMP_InputField, InputField
---@param isActive boolean
function InputField:ActiveInputField(isActive)
    self:_InvokeFunc("ActiveInputField", isActive)
end

---设置输入框是否忽略敏感词检查
---@param ignoreSensitiveWord boolean
function InputField:SetIgnoreSensitiveWord(ignoreSensitiveWord)
    self:_InvokeFunc("SetIgnoreSensitiveWord", ignoreSensitiveWord)
end

---设置输入框是否允许全空格
---@param enableAllSpace boolean
function InputField:SetEnableAllSpace(enableAllSpace)
    self:_InvokeFunc("SetEnableAllSpace", enableAllSpace)
end

---设置输入框是否支持空
---@param enableEmpty boolean
function InputField:SetEnableEmpty(enableEmpty)
    self:_InvokeFunc("SetEnableEmpty", enableEmpty)
end

---设置输入框CD
---@param cd float
function InputField:SetEditCD(cd)
    self:_InvokeFunc("SetEditCD", cd)
end

---设置输入框字数限制
---@param characterLimit int
function InputField:SetPostCharacterLimit(characterLimit)
    self:_InvokeFunc("SetPostCharacterLimit", characterLimit)
end

---@return string
function InputField:GetValue()
    return self:GetText()
end

---设置文本内容（支持：TMP_Text,TMP_InputField,Text,InputField）
---@param text_id string | number
---@varagr 文本的格式化内容format后面的参数
function InputField:SetValue(text_id, ...)
    self:SetText(text_id, ...)
end

---@param value string | number
function InputField:SetValue(value, ...)
    local v = UITextHelper.GetUIText(value, ...)
    self:_InvokeFunc("SetValue", v or "", false)
end

return InputField