---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by jiaozhu.
--- DateTime: 2023/6/8 16:05
---

---@class Framework.Component
---@field private name string
---@field private owner Framework.BaseView
---@field private ctrl Framework.GameObjectCtrl
---@field private compType Framework.UComponent
---@field private objLinker PapeGames.X3UI.ObjLinker
---@field private handlerGet function
---@field protected UIEventType UIEventType
---@field protected UIEventHandlerType UIEventHandlerType
local Component = class("Component", nil, true)

local UIEventDelegateHelper = require("Runtime.System.Framework.GameBase.UISystem.Interface.UIEventDelegateHelper")
Component.UIEventType = UIEventDelegateHelper.UIEventType
Component.UIEventHandlerType = UIEventDelegateHelper.UIEventHandlerType

---eg:self:GetComponent(UComponentType.GameObject)
---@param compType Framework.UComponentType 组件类型 使用枚举：UComponentType.GameObject
---@param is_recursion boolean 是否需要递归查找,从children中找出一个组件
---@param no_log boolean 是否打印日志，找不到是否打印日志
---@return UnityEngine.Object
function Component:GetComponent(compType, is_recursion, no_log)
    return self:_InternalInvokeFunc("GetComponent", false, self.objLinker, self.name, compType or UComponentType.GameObject, is_recursion, no_log)
end

---@type UIEventType
---@return int
function Component:GetComponentID(eventType)
    return self:_InternalInvokeFunc("GetComponentID", false, self.name, eventType, self)
end

--region 框架内部操作函数
---@private
---@param handlerGet function
function Component:SetHandler(handlerGet)
    self.handlerGet = handlerGet
end

---@private
---@param name string
function Component:SetName(name)
    self.name = name
end

---@private
---@param objLinker PapeGames.X3UI.ObjLinker
function Component:SetLinker(objLinker)
    self.objLinker = objLinker
end

---@return PapeGames.X3UI.ObjLinker
function Component:GetLinker()
    return self.objLinker
end

---@private
---@param owner Framework.BaseView
function Component:SetOwner(owner)
    self.owner = owner
end

---@private
---@return Framework.BaseView
function Component:GetOwner()
    return self.owner
end

---@private
---@param ctrl Framework.BaseCtrl
function Component:SetCtrl(ctrl)
    self.ctrl = ctrl
end

---@private
---@return Framework.BaseCtrl
function Component:GetCtrl()
    return self.ctrl
end


--endregion

--region 私有函数

---@private
---@param compType Framework.UComponent
function Component:SetType(compType)
    self.compType = compType
end

---@private
---@return Framework.UComponent
function Component:GetType()
    return self.compType
end

---@protected
---@param func_str string
---@vararg any
function Component:_InvokeByGameObject(func_str, ...)
    return self:_InternalInvokeFunc(func_str, false, self:GetComponent(UComponentType.GameObject), ...)
end

---@protected
---@param func_str string
---@vararg any
function Component:_InvokeFunc(func_str, ...)
    local key_or_path = self.name
    local is_cs = key_or_path==nil or type(key_or_path) == "string"
    if is_cs then
        key_or_path = string.hash(key_or_path)
        return self:_InternalInvokeFunc(func_str, true, self.objLinker, key_or_path, ...)
    else
        return self:_InternalInvokeFunc(func_str, false, key_or_path, ...)
    end
end

---不依赖于自身gameObject被销毁的接口
---@protected
---@param func_str string 方法名称
---@param is_cs boolean
---@vararg any
function Component:_InternalInvokeFunc(func_str, is_cs, ...)
    local handler_f = self.handlerGet(func_str, is_cs)
    if handler_f then
        return self:_OptimizeCall(handler_f, ...)
    else
        Debug.LogErrorFormat("[Component:_InternalInvokeFunc]--failed handler is nil,:func_str=%s,is_cs=%s", func_str, is_cs)
    end
end

---@protected
---@param eventType UIEventType
---@param handlerType UIEventHandlerType
---@param id int
---@param func function
function Component:_RegisterEventDelegate(id, eventType, handlerType, func)
    self:_InternalInvokeFunc("RegisterEventDelegate", false, id, eventType, handlerType, func, self.ctrl, true)
end

---@protected
---@param eventType UIEventType
---@param handlerType UIEventHandlerType
---@param id int
---@param func function
function Component:_UnregisterEventDelegate(id, eventType, handlerType, func)
    self:_InternalInvokeFunc("UnregisterEventDelegate", false, id, eventType, handlerType, func)
end

---@private
function Component:_InternalClear()
    self.objLinker = nil
    self.name = nil
    self.handlerGet = nil
    self.owner = nil
    self.ctrl = nil
end

---@private
function Component:_OptimizeCall(func, ...)
    if not func then
        return
    end
    local handler_f = self.handlerGet("OptimizeCall")
    if handler_f then
        return handler_f(func, ...)
    end
    return func(...)
end

--region 底层调用
---@private
function Component:Destroy()
    self:OnDestroy()
    self:_InternalClear()
end

---@private
function Component:OnDestroy()

end

--endregion

return Component