---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by jiaozhu.
--- DateTime: 2023/6/13 11:46
---

---ExpandView组件
---@class UComponent.ExpandView:UComponent.LoadOrSetMenu
local ExpandView = class("ExpandView", Framework.Parser.UComponentParser:GetComponent(UComponent.LoadOrSetMenu))

---@param onGetChildCellCount fun(view:ExpandView, cellIdx:int):Int 获取二级列表数量
---@param onChildCellLoad fun(view:ExpandView, childCellIns:GameObject, childCellIdx:int, cellIdx:int) 加载二级Cell
---@param onChildCellClick fun(view:ExpandView, childCellIns:GameObject, childCellIdx:int, cellIdx:int) 二级Cell被点击
---@param onCellExpand fun(view:ExpandView, cellIdx:int, isExpand:bool) 展开关闭时回调
---@param onCellLoad fun(view:ListView, cellIns:GameObject, cellIdx:int):Vector2 加载Cell数据（需要返回Vector2）
---@param onCellClick fun(view:ListView, cellIns:GameObject, cellIdx:int) Cell被点击
---@param onCellLongPress fun(view:ListView, cellIns:GameObject, cellIdx:int, longPressIdx:int) Cell触发长按
---@param onScrollEnd fun(type:X3ScrollView) UnityAction<BaseScrollView> 滚动结束
---@param onScrolling fun(type:X3ScrollView,type:Vector2) UnityAction<BaseScrollView, Vector2> 滚动中
---@param onRefresh fun(type:X3ScrollView,type:float) UnityAction<X3ScrollView, float> 触发刷新事件
function ExpandView:SetListener(onGetChildCellCount, onChildCellLoad, onChildCellClick, onCellExpand, onCellLoad, onCellClick, onCellLongPress, onScrolling, onScrollEnd, onRefresh)
    local id = self:GetComponentID(self.UIEventType.ExpandView)
    local res = (onGetChildCellCount or onChildCellLoad or onChildCellClick or onCellExpand or onCellLoad or onCellClick or onCellLongPress or onScrolling or onScrollEnd or onRefresh) ~= nil

    if res then
        if onGetChildCellCount ~= nil then
            self:_RegisterEventDelegate(id, self.UIEventType.ExpandView, self.UIEventHandlerType.ExpandView_OnGetChildCellCount, onGetChildCellCount)
        end
        if onChildCellLoad ~= nil then
            self:_RegisterEventDelegate(id, self.UIEventType.ExpandView, self.UIEventHandlerType.ExpandView_OnChildCellLoad, onChildCellLoad)
        end
        if onChildCellClick ~= nil then
            self:_RegisterEventDelegate(id, self.UIEventType.ExpandView, self.UIEventHandlerType.ExpandView_OnChildCellClick, onChildCellClick)
        end
        if onCellExpand ~= nil then
            self:_RegisterEventDelegate(id, self.UIEventType.ExpandView, self.UIEventHandlerType.ExpandView_OnCellExpand, onCellExpand)
        end

        if onCellLoad ~= nil then
            self:_RegisterEventDelegate(id, self.UIEventType.ListView, self.UIEventHandlerType.ListView_OnCellLoad, onCellLoad)
        end
        if onCellClick ~= nil then
            self:_RegisterEventDelegate(id, self.UIEventType.ListView, self.UIEventHandlerType.ListView_OnCellClick, onCellClick)
        end
        if onCellLongPress ~= nil then
            self:_RegisterEventDelegate(id, self.UIEventType.ListView, self.UIEventHandlerType.ListView_OnCellLongPress, onCellLongPress)
        end

        if onScrolling ~= nil then
            self:_RegisterEventDelegate(id, self.UIEventType.ScrollView, self.UIEventHandlerType.ScrollView_OnScrolling, onScrolling)
        end
        if onScrollEnd ~= nil then
            self:_RegisterEventDelegate(id, self.UIEventType.ScrollView, self.UIEventHandlerType.ScrollView_OnScrollEnd, onScrollEnd)
        end
        if onRefresh ~= nil then
            self:_RegisterEventDelegate(id, self.UIEventType.ScrollView, self.UIEventHandlerType.ScrollView_OnRefresh, onRefresh)
        end
    else
        self:_UnregisterEventDelegate(id, self.UIEventType.ExpandView)
        self:_UnregisterEventDelegate(id, self.UIEventType.ListView)
        self:_UnregisterEventDelegate(id, self.UIEventType.ScrollView)
    end

end

---@param cellIdx int
---@param withAnim bool 是否播放动效
function ExpandView:Expand(cellIdx, withAnim)
    if withAnim == nil then
        withAnim = false
    end
    self:_InvokeFunc("Expand", cellIdx, withAnim)
end

---@param cellIdx int
---@param withAnim bool 是否播放动效
function ExpandView:Collapse(cellIdx, withAnim)
    if withAnim == nil then
        withAnim = false
    end
    self:_InvokeFunc("Collapse", cellIdx, withAnim)
end

return ExpandView