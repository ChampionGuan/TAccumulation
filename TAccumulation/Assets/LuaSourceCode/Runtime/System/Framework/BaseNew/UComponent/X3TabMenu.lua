---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by jianxin.
--- DateTime: 2023/9/9 15:03
---

---TabMenu组件
---@alias UComponent.TabMenu UComponent.LoadOrSetMenu | _TabMenu
---@class _X3TabMenu:UComponent.SetOrGetValue
local Base = Framework.Parser.UComponentParser:GetComponent(UComponent.SetOrGetValue)

local X3TabMenu = class("X3TabMenu", Base)
Framework.Parser.UComponentParser:BindComponentHandler(UComponent.LoadOrSetMenu, X3TabMenu)

---设置TabMenu事件回调
---@param onValueChanged fun(type:X3TabMenu,type:int,type:int) UnityAction<X3TabMenu, int(new idx), int(old idx)> 菜单选中发生变化
---@param onCellLoad fun(type:X3TabMenu,type:GameObject,type:int) UnityAction<X3TabMenu, GameObject, int(idx)> 加载一级菜单
---@param checkCellSwitch fun(type:X3TabMenu,type:int,type:int):Boolean Func<X3TabMenu,int(new idx),  int(childIdx),>> 判断是否改变TabCell的状态, 结果值为false不会切换
---@param onChildCellLoad fun(type:X3TabMenu,type:GameObject,type:int,type:int)UnityAction<X3TabMenu, GameObject, int(idx) int(childIdx)> 加载二级级菜单
---@param onGetChildCellCount fun(type:X3TabMenu,type:int):Int UnityAction<X3TabMenu, int(idx)> 加载二级级菜单
---@param onCellExpand fun(type:X3TabMenu,type:int,type:bool) UnityAction<X3TabMenu, int(idx),bool> 展开折叠事件
function X3TabMenu:SetListener(onValueChanged, onCellLoad, checkCellSwitch, onChildCellLoad, onGetChildCellCount, onCellExpand)
    local id = self:GetComponentID(self.UIEventType.X3TabMenu)
    local res = (onValueChanged or onCellLoad or checkCellSwitch or onChildCellLoad or onGetChildCellCount) ~= nil
    if res then
        if onValueChanged ~= nil then
            self:_RegisterEventDelegate(id, self.UIEventType.X3TabMenu, self.UIEventHandlerType.X3TabMenu_OnValueChanged, onValueChanged)
        end
        if onCellLoad ~= nil then
            self:_RegisterEventDelegate(id, self.UIEventType.X3TabMenu, self.UIEventHandlerType.X3TabMenu_OnCellLoad, onCellLoad)
        end
        if checkCellSwitch ~= nil then
            self:_RegisterEventDelegate(id, self.UIEventType.X3TabMenu, self.UIEventHandlerType.X3TabMenu_OnValueWillChange, checkCellSwitch)
        end
        if onChildCellLoad ~= nil then
            self:_RegisterEventDelegate(id, self.UIEventType.X3TabMenu, self.UIEventHandlerType.X3TabMenu_OnChildCellLoad, onChildCellLoad)
        end
        if onGetChildCellCount ~= nil then
            self:_RegisterEventDelegate(id, self.UIEventType.X3TabMenu, self.UIEventHandlerType.X3TabMenu_OnGetChildCellCount, onGetChildCellCount)
        end
        if onCellExpand ~= nil then
            self:_RegisterEventDelegate(id, self.UIEventType.X3TabMenu, self.UIEventHandlerType.X3TabMenu_OnCellExpand, onCellExpand)
        end
    else
        self:_UnregisterEventDelegate(id, self.UIEventType.X3TabMenu)
    end
end

---@param idx int
---@param childIdx int
function X3TabMenu:SetValue(idx, childIdx)
    local selectSign = self:GetTabMenuSelectSign(idx, childIdx)
    Base.SetValue(self, selectSign, true)
end

---@param idx int
---@param childIdx int
function X3TabMenu:SetValueWithoutNotify(idx, childIdx)
    local selectSign = self:GetTabMenuSelectSign(idx, childIdx)
    Base.SetValue(self, selectSign, false)
end

---tabMenu setValue or getValue OnValueChange 使用 用于把选中的状态转换为标记量
---@param idx int
---@param childIdx int
---@return int
function X3TabMenu:GetTabMenuSelectSign(idx, childIdx)
    return idx << 16 | childIdx
end

---标记量翻转为 idx
---@param sign int
---@return int,int
function X3TabMenu:GetTabMenuSelectIdx(sign)
    local idx = sign >> 16
    local childIdx = sign - (idx << 16)
    return idx, childIdx
end

return X3TabMenu