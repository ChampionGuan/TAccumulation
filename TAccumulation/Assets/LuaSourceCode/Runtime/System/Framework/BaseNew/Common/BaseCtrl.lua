---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by jiaozhu.
--- DateTime: 2023/6/5 15:40

local SUPER = "super"
local TEMPLATE = "__index"
local ctrlMeta
---@class Framework.BaseCtrl
---@field protected timer Framework.Timer
---@field protected logger Framework.Logger
---@field protected eventDispatcher Framework.EventDispatcher
---@field private owner table
local BaseCtrl = class("Framework.BaseCtrl", nil, true)

function BaseCtrl:ctor()
    rawset(self, SUPER, self[SUPER])
    rawset(self, TEMPLATE, self[TEMPLATE])
    setmetatable(self, ctrlMeta)
    if self:IsAutoInit() then
        self:Init()
    end
end

--region 操作函数

---销毁
function BaseCtrl:Destroy()
    self:OnDestroy()
    self:__InternalDestroy()
end

---设置owner
---@param owner table
function BaseCtrl:SetOwner(owner)
    self.owner = owner
end

---@return table
function BaseCtrl:GetOwner()
    return self.owner
end

---初始化
function BaseCtrl:Init()
    self:OnInit()
end

--endregion

--region 周期函数

---@protected
function BaseCtrl:OnInit()

end

---@protected
function BaseCtrl:OnDestroy()

end

---@protected
function BaseCtrl:OnReconnect()

end

--endregion

--region 私有函数
---@private
function BaseCtrl:__InternalDestroy()
    local timer = rawget(self, "timer")
    if timer then
        rawset(self,"timer",nil)
        Framework.Timer.ReleaseToPool(timer)
    end
    local event = rawget(self, "eventDispatcher")
    if event then
        rawset(self,"eventDispatcher",nil)
        Framework.EventDispatcher.ReleaseToPool(event)
    end
    Framework.ClearTarget(self)
end

---是否自动相应Init
---@protected
---@return boolean
function BaseCtrl:IsAutoInit()
    return true
end


--endregion

--region 私有
ctrlMeta = {
    __index = function(t, key)
        local temp = rawget(t, TEMPLATE)
        if not temp then
            return
        end
        local res = temp[key]
        if res ~= nil then
            return res
        end
        temp = rawget(t, SUPER)
        if not temp then
            return
        end
        res = temp[key]
        if res ~= nil then
            return res
        end
        if key == "timer" then
            local timer = Framework.Timer.GetFromPool()
            timer:SetOwner(t)
            rawset(t, key, timer)
        elseif key == "eventDispatcher" then
            local event = Framework.EventDispatcher.GetFromPool()
            event:SetOwner(t)
            rawset(t, key, event)
        elseif key == "logger" then
            rawset(t, key, Framework.Logger)
        end
        return rawget(t, key)
    end
}
--endregion

return BaseCtrl