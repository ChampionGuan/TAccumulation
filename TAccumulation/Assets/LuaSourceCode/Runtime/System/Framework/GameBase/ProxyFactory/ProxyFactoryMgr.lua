---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by junjun003.
--- DateTime: 2021/11/18 14:38
---

---@class ProxyFactoryMgr
ProxyFactoryMgr = ProxyFactoryMgr or {}
local proxyFactory = require("Runtime.System.Framework.GameBase.ProxyFactory.ProxyFactory")

---@type ProxyFactory 玩家数据集合
local playerProxyFactory
---@type table<int, ProxyFactory> 其他玩家数据集合 查看玩家用
local otherPlayerProxyFactory

---获取自己的数据
---@return ProxyFactory
function ProxyFactoryMgr.GetSelf()
    return playerProxyFactory
end

---获取其他玩家数据
---@param uid int
---@return ProxyFactory
function ProxyFactoryMgr.AddOtherPlayer(uid)
    if otherPlayerProxyFactory[uid] == nil then
        local otherProxyFactory = proxyFactory.new()
        otherProxyFactory:OnInit(uid)
        otherPlayerProxyFactory[uid] = otherProxyFactory
    end
    return otherPlayerProxyFactory[uid]
end

---清理其他玩家的数据
---@param uid int
function ProxyFactoryMgr.RemoveOtherPlayer(uid)
    local factory = otherPlayerProxyFactory[uid]
    if factory then
        factory:OnClear()
        otherPlayerProxyFactory[uid] = nil
    end
end

---清理所有玩家数据,
---玩家数据默认全部卸载, 保证重新登录拿的最新的
function ProxyFactoryMgr.Clear()
    for _, factory in pairs(otherPlayerProxyFactory) do
        factory:OnClear()
        otherPlayerProxyFactory[uid] = nil
    end
    playerProxyFactory:ClearAll()
end


---初始化所有玩家数据
function ProxyFactoryMgr.Init()
    playerProxyFactory:InitAll()
end

---获取其他玩家数据
---@param uid int
---@return ProxyFactory
function ProxyFactoryMgr.GetOtherPlayer(uid)
    return otherPlayerProxyFactory[uid]
end

---初始化函数
local function Init()
    playerProxyFactory = proxyFactory.new()
    playerProxyFactory:OnInit()
    otherPlayerProxyFactory = {}
end

Init()

return ProxyFactoryMgr
