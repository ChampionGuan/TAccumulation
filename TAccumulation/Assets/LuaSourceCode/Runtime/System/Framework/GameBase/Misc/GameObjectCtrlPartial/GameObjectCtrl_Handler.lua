---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by jiaozhu.
--- DateTime: 2021/12/23 11:23
--- GameObject相关操作

local TRANSFORM_TYPE = "Transform"
local GAMEOBJECT_TYPE = "GameObject"

---兼容transform:Find，如果objLinker查找不到就会通过Find查找
---@param key_or_path string  组件名称/路径名称
---@param type_str string 组件类型 （如果在不同的命名空间下有相同组件名，需要加上命名空间 ，否则只需要组件类名即可） 默认GameObject eg："Button"
---@param is_recursion boolean 是否需要递归查找
---@param no_log boolean 是否打印日志
---@return UnityEngine.Object
function GameObjectCtrl:GetComponent(key_or_path, type_str, is_recursion, no_log)
    return self:_InternalInvokeFunc("GetComponent",false,self.gameObject,key_or_path,type_str, is_recursion, no_log)
    --return self:_InvokeFunc(self.gameObject, type_str, "GetComponent", key_or_path, type_str, is_recursion, no_log)
end

---兼容transform:Find，如果objLinker查找不到就会通过Find查找
---@param key_or_path string  组件名称/路径名称
---@param is_recursion boolean 是否需要递归查找
---@param no_log boolean 是否打印日志
---@return GameObject
function GameObjectCtrl:GetGameObject(key_or_path, is_recursion, no_log)
    return self:GetComponent(key_or_path, GAMEOBJECT_TYPE, is_recursion, no_log)
end

---兼容transform:Find，如果objLinker查找不到就会通过Find查找
---@param key_or_path string  组件名称/路径名称
---@param is_recursion boolean 是否需要递归查找
---@param no_log boolean 是否打印日志
---@return Transform
function GameObjectCtrl:GetTransform(key_or_path, is_recursion, no_log)
    return self:GetComponent(key_or_path, TRANSFORM_TYPE, is_recursion, no_log)
end

---获取child的transform
---@param idx int
---@return Transform
function GameObjectCtrl:GetChild(idx)
    return self.transform and self.transform:GetChild(idx) or nil
end

---获取当前节点的child的数量
---@return int
function GameObjectCtrl:GetChildCount()
    return self.transform and self.transform.childCount or 0
end

---清理所有缓存的组件
function GameObjectCtrl:ClearComponents()
    self:_InvokeFunc(self.gameObject, GAMEOBJECT_TYPE, "ClearComponents")
end

---设置父节点
---@param parent_transform UnityEngine.Transform
function GameObjectCtrl:SetParent(parent_transform)
    self.parent = parent_transform
    self:_InvokeFunc(self.transform, TRANSFORM_TYPE, "SetParent", self.parent, false)
end

---设置名称
---@param name string
function GameObjectCtrl:SetName(name)
    if name ~= self.obj_name then
        self.obj_name = name
        self:_InvokeFunc(self.gameObject, GAMEOBJECT_TYPE, "SetName", name)
    end
end

---返回名称
---@return string
function GameObjectCtrl:GetName()
    if string.isnilorempty(self.obj_name) then
        self.obj_name = self.gameObject and self.gameObject.name or ""
    end
    return self.obj_name
end

---设置Active or Deactive
---key_or_path :string
---@param key_or_path string | UnityEngine.Object
---@param active boolean default nil
---@return boolean 是否设置成功
function GameObjectCtrl:SetActive(key_or_path, active)
    if active == nil then
        active = false
    else
        if active ~= false then
            active = true
        end
    end
    key_or_path = string.isnilorempty(key_or_path) and self:GetComponent(nil, GAMEOBJECT_TYPE) or key_or_path
    return self:_InvokeFunc(key_or_path, GAMEOBJECT_TYPE, "SetActive", active);
end

---设置Active or Deactive
---key_or_path :string
---@param key_or_path string | UnityEngine.Object
---@param active boolean default nil
---@return boolean 是否设置成功
function GameObjectCtrl:TrySetActive(key_or_path, active)
    if active == nil then
        active = false
    else
        if active ~= false then
            active = true
        end
    end
    key_or_path = string.isnilorempty(key_or_path) and self:GetComponent(nil, GAMEOBJECT_TYPE) or key_or_path
    return self:_InvokeFunc(key_or_path, GAMEOBJECT_TYPE, "TrySetActive", active);
end

---返回一个节点是否是activeSelf状态
---@param key_or_path string
---@return boolean
function GameObjectCtrl:IsActiveSelf(key_or_path)
    return self:_InvokeFunc(key_or_path, GAMEOBJECT_TYPE, "IsActiveSelf")
end

---返回一个节点是否是activeSelf状态
---@param key_or_path string
---@return boolean
function GameObjectCtrl:TryIsActiveSelf(key_or_path)
    return self:_InvokeFunc(key_or_path, GAMEOBJECT_TYPE, "TryIsActiveSelf")
end

---设置Transform相关属性
---vec3 or x,y,z
---@param key_or_path string | UnityEngine.Object
---@vararg number | UnityEngine.Vector3
function GameObjectCtrl:SetPosition(key_or_path, ...)
    self:_InvokeFunc(key_or_path, TRANSFORM_TYPE, "SetPositionXYZ", self:_InternalInvokeFunc("GetVectorXYZ", false, ...))
end

---获取坐标
---@param key_or_path string | UnityEngine.Object
function GameObjectCtrl:GetPosition(key_or_path)
    return self:_InternalInvokeFunc("GetVector", false, self:GetPositionXYZ(key_or_path))
end

---@param key_or_path string | UnityEngine.Object
---@return number,number,number
function GameObjectCtrl:GetPositionXYZ(key_or_path)
    return self:_InvokeFunc(key_or_path, GAMEOBJECT_TYPE, "GetPositionXYZ")
end

---vec3 or x,y,z
---@param key_or_path string | UnityEngine.Object
---@vararg number | UnityEngine.Vector3
function GameObjectCtrl:SetLocalPosition(key_or_path, ...)
    self:_InvokeFunc(key_or_path, TRANSFORM_TYPE, "SetLocalPositionXYZ", self:_InternalInvokeFunc("GetVectorXYZ", false, ...))
end

---获取坐标
---@param key_or_path string | UnityEngine.Object
---@return Vector3
function GameObjectCtrl:GetLocalPosition(key_or_path)
    return self:_InternalInvokeFunc("GetVector", false, self:GetLocalPositionXYZ(key_or_path))
end

---获取坐标x,y,z
---@param key_or_path string | UnityEngine.Object
---@return number,number,number
function GameObjectCtrl:GetLocalPositionXYZ(key_or_path)
    return self:_InvokeFunc(key_or_path, GAMEOBJECT_TYPE, "GetLocalPositionXYZ")
end

--vec2 or x,y,z
---@param key_or_path string | UnityEngine.Object
---@vararg number | UnityEngine.Vector3 | UnityEngine.Vector2
function GameObjectCtrl:SetScreenPosition(key_or_path, ...)
    local x, y, z = self:_InternalInvokeFunc("GetVectorXYZ", false, ...)
    self:_InvokeFunc(key_or_path, TRANSFORM_TYPE, "SetScreenPositionXY", x, y)
end

---获取屏幕坐标
---@param key_or_path string | UnityEngine.Object
---@return Vector2
function GameObjectCtrl:GetScreenPosition(key_or_path)
    return self:_InternalInvokeFunc("GetVector", false, self:GetScreenPositionXY(key_or_path))
end

---获取屏幕坐标
---@param key_or_path string | UnityEngine.Object
---@return number,number
function GameObjectCtrl:GetScreenPositionXY(key_or_path)
    return self:_InvokeFunc(key_or_path, GAMEOBJECT_TYPE, "GetScreenPositionXY")
end

---@param key_or_path string | UnityEngine.Object
---@vararg number | UnityEngine.Vector3
function GameObjectCtrl:SetScale(key_or_path, ...)
    self:SetLocalScale(key_or_path, ...)
end

---@param key_or_path string | UnityEngine.Object
---@return Vector3
function GameObjectCtrl:GetScale(key_or_path)
    return self:_InternalInvokeFunc("GetVector", false, self:GetLocalScaleXYZ(key_or_path))
end

---@param key_or_path string | UnityEngine.Object
---@return number,number,number
function GameObjectCtrl:GetScaleXYZ(key_or_path)
    return self:GetLocalScaleXYZ(key_or_path)
end

---@param key_or_path string | UnityEngine.Object
---@vararg number | UnityEngine.Vector3
function GameObjectCtrl:SetLocalScale(key_or_path, ...)
    self:_InvokeFunc(key_or_path, TRANSFORM_TYPE, "SetLocalScaleXYZ", self:_InternalInvokeFunc("GetVectorXYZ", false, ...))
end

---获取localScale
---@param key_or_path string | UnityEngine.Object
---@return number,number,number
function GameObjectCtrl:GetLocalScaleXYZ(key_or_path)
    return self:_InvokeFunc(key_or_path, GAMEOBJECT_TYPE, "GetLocalScaleXYZ")
end

--vec2 or x,y,z
---@param key_or_path string | UnityEngine.Object
---@vararg number | UnityEngine.Vector2
function GameObjectCtrl:SetSizeDelta(key_or_path, ...)
    local x, y = self:_InternalInvokeFunc("GetVectorXYZ", false, ...)
    self:_InvokeFunc(key_or_path, GAMEOBJECT_TYPE, "SetSizeDeltaXY", x, y)
end

---@param key_or_path string | UnityEngine.Object
---@return  UnityEngine.Vector2
function GameObjectCtrl:GetSizeDelta(key_or_path)
    return self:_InternalInvokeFunc("GetVector", false, self:GetSizeDeltaXY(key_or_path))
end

---@param key_or_path string | UnityEngine.Object
---@return  float, float
function GameObjectCtrl:GetSizeDeltaXY(key_or_path)
    return self:_InvokeFunc(key_or_path, GAMEOBJECT_TYPE, "GetSizeDeltaXY")
end

---设置rotation
---@param key_or_path string | UnityEngine.Object
---@vararg number | Quaternion
function GameObjectCtrl:SetRotation(key_or_path, ...)
    self:_InvokeFunc(key_or_path, GAMEOBJECT_TYPE, "SetRotationXYZW", self:_InternalInvokeFunc("GetQuaternionXYZW", false, ...))
end

---@param key_or_path string | UnityEngine.Object
---@return Quaternion
function GameObjectCtrl:GetRotation(key_or_path)
    return self:_InternalInvokeFunc("GetQuaternion", false, self:GetRotationXYZW(key_or_path))
end

---@param key_or_path string | UnityEngine.Object
---@return number,number,number,number
function GameObjectCtrl:GetRotationXYZW(key_or_path)
    return self:_InvokeFunc(key_or_path, GAMEOBJECT_TYPE, "GetRotationXYZW")
end

---设置rotation
---@param key_or_path string | UnityEngine.Object
---@vararg number | Quaternion
function GameObjectCtrl:SetLocalRotation(key_or_path, ...)
    self:_InvokeFunc(key_or_path, GAMEOBJECT_TYPE, "SetLocalRotationXYZW", self:_InternalInvokeFunc("GetQuaternionXYZW", false, ...))
end

---@param key_or_path string | UnityEngine.Object
---@return Quaternion
function GameObjectCtrl:GetLocalRotation(key_or_path)
    return self:_InternalInvokeFunc("GetQuaternion", false, self:GetLocalRotationXYZW(key_or_path))
end

---@param key_or_path string | UnityEngine.Object
---@return number,number,number,number
function GameObjectCtrl:GetLocalRotationXYZW(key_or_path)
    return self:_InvokeFunc(key_or_path, GAMEOBJECT_TYPE, "GetLocalRotationXYZW")
end

---设置欧拉角
---@param key_or_path string | UObject
---@vararg number | Vector3
function GameObjectCtrl:SetEulerAngles(key_or_path, ...)
    self:_InvokeFunc(key_or_path, GAMEOBJECT_TYPE, "SetEulerAnglesXYZ", self:_InternalInvokeFunc("GetVectorXYZ", false, ...))
end

---@param key_or_path string | UnityEngine.Object
---@return Vector3
function GameObjectCtrl:GetEulerAngles(key_or_path)
    return self:_InternalInvokeFunc("GetVector", false, self:GetEulerAnglesXYZ(key_or_path))
end

---@param key_or_path string | UnityEngine.Object
---@return number,number,number,number
function GameObjectCtrl:GetEulerAnglesXYZ(key_or_path)
    return self:_InvokeFunc(key_or_path, GAMEOBJECT_TYPE, "GetEulerAnglesXYZ")
end

---设置欧拉角
---@param key_or_path string | UObject
---@vararg number | Vector3
function GameObjectCtrl:SetLocalEulerAngles(key_or_path, ...)
    self:_InvokeFunc(key_or_path, GAMEOBJECT_TYPE, "SetLocalEulerAnglesXYZ", self:_InternalInvokeFunc("GetVectorXYZ", false, ...))
end

---@param key_or_path string | UnityEngine.Object
---@return Vector3
function GameObjectCtrl:GetLocalEulerAngles(key_or_path)
    return self:_InternalInvokeFunc("GetVector", false, self:GetLocalEulerAnglesXYZ(key_or_path))
end

---@param key_or_path string | UnityEngine.Object
---@return number,number,number
function GameObjectCtrl:GetLocalEulerAnglesXYZ(key_or_path)
    return self:_InvokeFunc(key_or_path, GAMEOBJECT_TYPE, "GetLocalEulerAnglesXYZ")
end

---设置GameObject Layer
---@param layerNameOrId string | number
---@param includeChildren boolean 是否包含子节点
function GameObjectCtrl:SetLayer(key_or_path, layerNameOrId, includeChildren)
    includeChildren = includeChildren or false
    self:_InvokeFunc(key_or_path, GAMEOBJECT_TYPE, "SetLayer", layerNameOrId, includeChildren)
end

---获取layer
function GameObjectCtrl:GetLayer(key_or_path)
    return self:_InvokeFunc(key_or_path, GAMEOBJECT_TYPE, "GetLayer")
end

---设置组件Enable
---@param key_or_path string
---@param type_str string
---@param enabled bool
function GameObjectCtrl:SetEnable(key_or_path, type_str, enabled)
    type_str = type_str or GAMEOBJECT_TYPE
    self:_InvokeFunc(key_or_path, GAMEOBJECT_TYPE, "SetEnable", type_str, enabled)
end

