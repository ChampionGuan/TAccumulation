---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by jiaozhu.
--- DateTime: 2021/12/24 14:12
--- 用于和外界交互的逻辑

local ADAPTER_STR = "OCX"
local TAG_MAP = {"XYZW","XYZ","XY"}

local cs_handler_search_map = {}
local lua_handler_search_map = {}
local lua_handler_map = {}
local cs_handler_map = {}

---设置查找的handler
---@param search table
function GameObjectCtrl.AddSearchHandler(search, is_lua)
    local map = is_lua and lua_handler_search_map or cs_handler_search_map
    if search then
        table.insert(map, search)
    end
end

---根据方法名称获取处理函数
---@param func_name string
---@param is_cs boolean
function GameObjectCtrl.GetHandler(func_name, is_cs)
    local handler_f,is_new
    if is_cs then
        handler_f = cs_handler_map[func_name]
        if not handler_f then
            local cs_func_name = string.concat(func_name, ADAPTER_STR)
            for k, v in ipairs(cs_handler_search_map) do
                handler_f = v[cs_func_name]
                if handler_f then
                    is_new = true
                    break
                end
            end
        end
    else
        handler_f = lua_handler_map[func_name]
        if not handler_f then
            for k, v in ipairs(lua_handler_search_map) do
                handler_f = v[func_name]
                if handler_f then
                    is_new = true
                    break
                end
            end
            if not handler_f then
                for k,v in ipairs(TAG_MAP) do
                    if string.find(func_name,v,1,true) then
                        local s = string.replace(func_name,v,"")
                        handler_f = GameObjectCtrl.GetHandler(s, is_cs)
                        if handler_f then
                            is_new = true
                        end
                        break
                    end
                end
            end
        end
    end
    if is_new then
        GameObjectCtrl.AddHandler(func_name,handler_f,is_cs)
    end
    return handler_f
end

---注入操作函數
---@param func_name string
---@param func function
---@param is_cs boolean
function GameObjectCtrl.AddHandler(func_name,func,is_cs)
    if not func_name or not func then
        return
    end
    local map = is_cs and cs_handler_map or lua_handler_map
    map[func_name] = func
end

---key_or_path是否以OCX开头
---@param key_or_path string
---@return bool
function GameObjectCtrl.IsOCX(key_or_path)
    return (not string.find(key_or_path, "/", 1, true)) and string.startswith(key_or_path, ADAPTER_STR)
end

---清理绑定的相关信息数据
---@param target table
function GameObjectCtrl.ClearTarget(target)
    local handler_f = GameObjectCtrl.GetHandler("ClearTarget")
    if handler_f then
        return handler_f(target)
    end
end

---优化调用
function GameObjectCtrl.OptimizeCall(func,...)
    if not func then return end
    local handler_f = GameObjectCtrl.GetHandler("OptimizeCall")
    if handler_f then
        return handler_f(func,...)
    end
    return func(...)
end 