---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by jiaozhu.
--- DateTime: 2021/12/23 16:30
---ListView,GridListView,ScrollView,ExpandListView

local cs_ui_util = CS.X3Game.UIUtility

---设置ListView的回调
---@param obj UObject
---@param onCellLoad fun(view:ListView, cellIns:GameObject, cellIdx:int):Vector2 加载Cell数据（需要返回Vector2）
---@param onCellClick fun(view:ListView, cellIns:GameObject, cellIdx:int) Cell被点击
---@param onCellLongPress fun(view:ListView, cellIns:GameObject, cellIdx:int, longPressIdx:int) Cell触发长按
---@param onCellCentered fun(view:ListView, cellIns:GameObject, cellIdx:int) Cell处于ViewPort中间
function UIUtil.SetListViewListener(obj, onCellLoad, onCellClick, onCellLongPress, onCellCentered)
    if obj ~= nil then
        local id = UIUtil.GetComponentID(obj,UIUtil.UIEventType.ListView)
        if onCellLoad~=nil then
            UIUtil.UIEventDelegateHelper.RegisterEventDelegate(id,UIUtil.UIEventType.ListView,UIUtil.UIEventHandlerType.ListView_OnCellLoad,onCellLoad)
        end
        if onCellClick~=nil then
            UIUtil.UIEventDelegateHelper.RegisterEventDelegate(id,UIUtil.UIEventType.ListView,UIUtil.UIEventHandlerType.ListView_OnCellClick,onCellClick)
        end
        if onCellLongPress~=nil then
            UIUtil.UIEventDelegateHelper.RegisterEventDelegate(id,UIUtil.UIEventType.ListView,UIUtil.UIEventHandlerType.ListView_OnCellLongPress,onCellLongPress)
        end
        if onCellCentered~=nil then
            UIUtil.UIEventDelegateHelper.RegisterEventDelegate(id,UIUtil.UIEventType.ListView,UIUtil.UIEventHandlerType.ListView_OnCellCentered,onCellCentered)
        end
        --cs_ui_util.SetListViewListener(obj, onCellLoad, onCellClick, onCellLongPress, onCellCentered)
    end
end

function UIUtil.SetListViewOnCellPrefabIdxListener(obj, onCellPrefabIdx)
    if obj ~= nil then
        cs_ui_util.SetListViewOnCellPrefabIdxListener(obj, onCellPrefabIdx)
    end
end

function UIUtil.AddListViewListener(obj, onCellLoad, onCellClick, onCellLongPress, onCellCentered)
    UIUtil.SetListViewListener(obj, onCellLoad, onCellClick, onCellLongPress, onCellCentered)
end

---设置ExpandView的回调
---@param obj UObject
---@param onGetChildCellCount fun(view:ExpandView, cellIdx:int):Int 获取二级列表数量
---@param onChildCellLoad fun(view:ExpandView, childCellIns:GameObject, childCellIdx:int, cellIdx:int) 加载二级Cell
---@param onChildCellClick fun(view:ExpandView, childCellIns:GameObject, childCellIdx:int, cellIdx:int) 二级Cell被点击
---@param onChildCellLongPress fun(view:ExpandView, childCellIns:GameObject, childCellIdx:int, longPressIdx:int, cellIdx:int) 二级Cell触发长按
function UIUtil.SetExpandViewListener(obj, onGetChildCellCount, onChildCellLoad, onChildCellClick, onChildCellLongPress)
    if obj ~= nil then
        --cs_ui_util.SetExpandViewListener(obj, onGetChildCellCount, onChildCellLoad, onChildCellClick, onChildCellLongPress)
        local id = UIUtil.GetComponentID(obj,UIUtil.UIEventType.ExpandView)
        if onGetChildCellCount~=nil then
            UIUtil.UIEventDelegateHelper.RegisterEventDelegate(id,UIUtil.UIEventType.ExpandView,UIUtil.UIEventHandlerType.ExpandView_OnGetChildCellCount,onGetChildCellCount)
        end
        if onChildCellLoad~=nil then
            UIUtil.UIEventDelegateHelper.RegisterEventDelegate(id,UIUtil.UIEventType.ExpandView,UIUtil.UIEventHandlerType.ExpandView_OnChildCellLoad,onChildCellLoad)
        end
        if onChildCellClick~=nil then
            UIUtil.UIEventDelegateHelper.RegisterEventDelegate(id,UIUtil.UIEventType.ExpandView,UIUtil.UIEventHandlerType.ExpandView_OnChildCellClick,onChildCellClick)
        end
        if onChildCellLongPress~=nil then
            UIUtil.UIEventDelegateHelper.RegisterEventDelegate(id,UIUtil.UIEventType.ExpandView,UIUtil.UIEventHandlerType.ExpandView_OnChildCellLongPress,onChildCellLongPress)
        end
    end
end

---设置X3Scrollview事件回调
---@param obj UObject
---@param onScrollEnd fun(view:X3ScrollView) 滚动结束
---@param onScrolling fun(view:X3ScrollView, scrollDelta:Vector2) 滚动中
---@param onRefresh fun(view:X3ScrollView, offset:float) 触发刷新事件
function UIUtil.AddScrollViewListener(obj, onScrollEnd, onScrolling, onRefresh)
    if obj ~= nil then
        cs_ui_util.AddX3ScrollViewListener(obj, onScrollEnd, onScrolling, onRefresh)
    end
end

---设置X3Scrollview事件回调
---@param obj UObject
---@param onScrollEnd fun(view:X3ScrollView) 滚动结束
---@param onScrolling fun(view:X3ScrollView, scrollDelta:Vector2) 滚动中
---@param onRefresh fun(view:X3ScrollView, offset:float) 触发刷新事件
function UIUtil.AddX3ScrollViewListener(obj, onScrollEnd, onScrolling, onRefresh)
    if obj ~= nil then
        cs_ui_util.AddX3ScrollViewListener(obj, onScrollEnd, onScrolling, onRefresh)
    end
end

---设置滑动回调
---@param scroll UObject
---@param call fun(type:Vector2)
function UIUtil.AddScrollListener(scroll, call)
    if scroll == nil then
        return
    end
    cs_ui_util.AddScrollListener(scroll, call)
end

---将ScrollView滚动到normalizedPosition
---normalizedPosition: 滚动到右上角为(1, 1)，左下角为(0, 0)
---@param obj UObject
---@param normalizedPosition Vector2
---@param duration float 滚动时间（秒）
---@param easing int PapeGames.X3.EasingFunction.Ease 缓动
---@param onComplete fun(type:X3ScrollView) System.Action<X3ScrollView> 滚动完毕的回调
function UIUtil.ScrollTo(obj, normalizedPosition, duration, easing, onComplete)
    easing = easing or CS.PapeGames.X3.EasingFunction.Ease.EaseInSine
    cs_ui_util.ScrollTo(obj, normalizedPosition, duration, easing, onComplete)
end

---将ScrollView滚动到cell
---normalizedPosition: 滚动到右上角为(1, 1)，左下角为(0, 0)
---@param obj UObject
---@param cellIdx int cell的idx
---@param duration float 滚动时间（秒）
---@param easing int PapeGames.X3.EasingFunction.Ease 缓动
---@param onComplete fun(type:X3ScrollView) System.Action<X3ScrollView> 滚动完毕的回调
function UIUtil.ScrollToCell(obj, cellIdx, duration, easing, onComplete)
    cs_ui_util.ScrollToCell(obj, cellIdx, duration, easing, onComplete)
end

---将ScrollView滚动到localPoint
---localPoint为以Content左下角为原点的坐标
---@param obj UObject
---@param localPoint Vector2
---@param duration float 滚动时间（秒）
---@param easing int PapeGames.X3.EasingFunction.Ease 缓动
---@param onComplete fun(type:X3ScrollView) System.Action<X3ScrollView> 滚动完毕的回调
function UIUtil.ScrollToLocalPoint(obj, localPoint, duration, easing, onComplete)
    easing = easing or CS.PapeGames.X3.EasingFunction.Ease.EaseInSine
    cs_ui_util.ScrollToLocalPoint(obj, localPoint, duration, easing, onComplete)
end

---将ScrollView滚动到Content下的RT位置
---RT为Content下的子（支持递归）对象，滚动的结果是RT处于ScrollView的中心位置
---@param obj UObject
---@param rt Transform
---@param duration float 滚动时间（秒）
---@param easing int PapeGames.X3.EasingFunction.Ease 缓动
---@param onComplete fun(type:X3ScrollView) 滚动完毕的回调
function UIUtil.ScrollToTarget(obj, rt, duration, easing, onComplete)
    easing = easing or CS.PapeGames.X3.EasingFunction.Ease.EaseInSine
    cs_ui_util.ScrollToTarget(obj, rt, duration, easing, onComplete)
end

---设置ListView选中cell
---@param obj UObject
---@param cellIdx int
---@param sendClickEvent boolean 
function UIUtil.SelectCell(obj, cellIdx, sendClickEvent)
    if sendClickEvent==nil then sendClickEvent = false end
    cs_ui_util.SelectCell(obj, cellIdx, sendClickEvent)
end

---设置GridView的回调
---@param obj UObject
---@param onCellLoad fun(view:ListView, cellIns:GameObject, cellIdx:int):Vector2 加载Cell数据（需要返回Vector2）
---@param onCellClick fun(view:ListView, cellIns:GameObject, cellIdx:int) Cell被点击
---@param onCellLongPress fun(view:ListView, cellIns:GameObject, cellIdx:int, longPressIdx:int) Cell触发长按
---@param onCellCentered fun(view:ListView, cellIns:GameObject, cellIdx:int) Cell处于ViewPort中间
function UIUtil.SetGridViewListener(obj, onCellLoad, onCellClick, onCellLongPress, onCellCentered)
    if obj ~= nil then
        UIUtil.SetListViewListener(obj, onCellLoad, onCellClick, onCellLongPress, onCellCentered)
        --cs_ui_util.SetListViewListener(obj, onCellLoad, onCellClick, onCellLongPress, onCellCentered)
    end
end

function UIUtil.AddGridViewListener(obj, onCellLoad, onCellClick, onCellLongPress, onCellCentered)
    UIUtil.SetListViewListener(obj, onCellLoad, onCellClick, onCellLongPress, onCellCentered)
end

---设置ListView的OnWillSnap的回调
---@param obj UObject
---@param onWillSnap fun(view:ListView):bool ListView即将执行Snap，如果返回true则ListView内部不再执行snap逻辑
function UIUtil.SetListViewOnWillSnapListener(obj, onWillSnap)
    if obj ~= nil then
        cs_ui_util.SetListViewOnWillSnapListener(obj, onWillSnap)
    end
end

---设置GroupView的回调
---@param obj UObject
---@param onCellLoad fun(view:GroupView, cellIns:GameObject, cellIdx:int)
function UIUtil.SetGroupViewListener(obj, onCellLoad)
    if obj ~= nil then
        cs_ui_util.SetGroupViewListener(obj, onCellLoad)
    end
end