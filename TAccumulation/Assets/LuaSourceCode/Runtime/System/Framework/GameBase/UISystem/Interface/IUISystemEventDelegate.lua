---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by jiaozhu.
--- DateTime: 2022/8/22 11:07
---@class IUISystemEventDelegate
local IUISystemEventDelegate = {}
---@type UIEventDelegateHelper
local UIEventDelegateHelper = require("Runtime.System.Framework.GameBase.UISystem.Interface.UIEventDelegateHelper")
local UIEventType = UIEventDelegateHelper.UIEventType
local UIEventHandlerType = UIEventDelegateHelper.UIEventHandlerType

--region Button
---@param sender PapeGames.X3UI.ClickHandler
---@param senderInsID int
---@param hitCount int 连点次数
function IUISystemEventDelegate:Button_OnClick(sender, senderInsID, hitCount)
    UIEventDelegateHelper.Invoke(senderInsID, UIEventType.Button, UIEventHandlerType.Button_OnClick, sender, hitCount)
end

---@param sender PapeGames.X3UI.ClickHandler
---@param senderInsID int
function IUISystemEventDelegate:Button_OnTouchDown(sender, senderInsID)
    UIEventDelegateHelper.Invoke(senderInsID, UIEventType.Button, UIEventHandlerType.Button_OnTouchDown, sender)
end

---@param sender PapeGames.X3UI.ClickHandler
---@param senderInsID int
function IUISystemEventDelegate:Button_OnTouchUp(sender, senderInsID)
    UIEventDelegateHelper.Invoke(senderInsID, UIEventType.Button, UIEventHandlerType.Button_OnTouchUp, sender)
end

---@param sender PapeGames.X3UI.ClickHandler
---@param senderInsID int
function IUISystemEventDelegate:Button_OnTouchExit(sender, senderInsID)
    UIEventDelegateHelper.Invoke(senderInsID, UIEventType.Button, UIEventHandlerType.Button_OnTouchExit, sender)
end
--endregion

--region LongPress
---@param sender PapeGames.X3UI.LongPressHandler
---@param senderInsID int
---@param longPressIdx int
function IUISystemEventDelegate:LongPressHandler_OnLongPress(sender, senderInsID, longPressIdx)
    UIEventDelegateHelper.Invoke(senderInsID, UIEventType.LongPressHandler, UIEventHandlerType.LongPressHandler_OnLongPress, sender, longPressIdx)
end
--endregion

--region SwitchButton
---@param sender PapeGames.X3UI.SwitchButton
---@param senderInsID int
---@param selected boolean
function IUISystemEventDelegate:SwitchButton_OnValueChanged(sender, senderInsID, selected)
    UIEventDelegateHelper.Invoke(senderInsID, UIEventType.SwitchButton, UIEventHandlerType.SwitchButton_OnValueChanged, sender, selected)
end
--endregion

--region TabMenu
---@param sender PapeGames.X3UI.TabMenu
---@param senderInsID int
---@param newValue int
---@param oldValue int
function IUISystemEventDelegate:TabMenu_OnValueChanged(sender, senderInsID, newValue, oldValue)
    UIEventDelegateHelper.Invoke(senderInsID, UIEventType.TabMenu, UIEventHandlerType.TabMenu_OnValueChanged, sender, newValue, oldValue)
end

---@param sender PapeGames.X3UI.TabMenu
---@param senderInsID int
---@param cellIns GameObject
---@param cellIdx int
function IUISystemEventDelegate:TabMenu_OnCellLoad(sender, senderInsID, cellIns, cellIdx)
    UIEventDelegateHelper.Invoke(senderInsID, UIEventType.TabMenu, UIEventHandlerType.TabMenu_OnCellLoad, sender, cellIns, cellIdx)
end

---@param sender PapeGames.X3UI.TabMenu
---@param senderInsID int
---@param newValue int
---@param oldValue int
function IUISystemEventDelegate:TabMenu_OnValueWillChange(sender, senderInsID, newValue, oldValue)
    local res, canChange = UIEventDelegateHelper.Invoke(senderInsID, UIEventType.TabMenu, UIEventHandlerType.TabMenu_OnValueWillChange,sender, newValue, oldValue)
    return res, canChange or false
end
--endregion

--region Dropdown
---@param sender UObject
---@param senderInsID int
---@param newValue int
---@param oldValue int
function IUISystemEventDelegate:Dropdown_OnValueChanged(sender, senderInsID, newValue, oldValue)
    UIEventDelegateHelper.Invoke(senderInsID, UIEventType.Dropdown, UIEventHandlerType.Dropdown_OnValueChanged, sender, newValue, oldValue)
end

---@param sender UObject
---@param senderInsID int
---@param cellIns GameObject
---@param cellIdx int
function IUISystemEventDelegate:Dropdown_OnCellLoad(sender, senderInsID, cellIns, cellIdx)
    UIEventDelegateHelper.Invoke(senderInsID, UIEventType.Dropdown, UIEventHandlerType.Dropdown_OnCellLoad, sender, cellIns, cellIdx)
end

---@param sender UObject
---@param senderInsID int
---@param newValue int
---@param oldValue int
function IUISystemEventDelegate:Dropdown_OnValueWillChange(sender, senderInsID, newValue, oldValue)
    local res, canChange = UIEventDelegateHelper.Invoke(senderInsID, UIEventType.Dropdown, UIEventHandlerType.Dropdown_OnValueWillChange, sender, newValue, oldValue)
    if canChange == nil then
        canChange = true
    end
    return res, canChange
end
--endregion

--region InputField
---@param sender UObject
---@param senderInsID int
---@param text string
function IUISystemEventDelegate:InputField_OnValueChanged(sender, senderInsID, text)
    UIEventDelegateHelper.Invoke(senderInsID, UIEventType.InputField, UIEventHandlerType.InputField_OnValueChanged, text)
end

---@param sender UObject
---@param senderInsID int
function IUISystemEventDelegate:InputField_OnClick(sender, senderInsID)
    return UIEventDelegateHelper.Invoke(senderInsID, UIEventType.InputField, UIEventHandlerType.InputField_OnClick, sender)
end

---@param sender UObject
---@param senderInsID int
---@param text string
function IUISystemEventDelegate:InputField_OnEndEdit(sender, senderInsID, text)
    return UIEventDelegateHelper.Invoke(senderInsID, UIEventType.InputField, UIEventHandlerType.InputField_OnEndEdit, text)
end

---@param sender UObject
---@param senderInsID int
---@param text string
---@param success bool
function IUISystemEventDelegate:InputField_OnEndEditAndCheck(sender, senderInsID, text, success)
    return UIEventDelegateHelper.Invoke(senderInsID, UIEventType.InputField, UIEventHandlerType.InputField_OnEndEditAndCheck, text, success)
end
--endregion

--region ListView
---@param sender PapeGames.X3UI.GridListView
---@param senderInsID int
---@param cellIns GameObject
---@param cellIdx int
---@return boolean,Vector2
function IUISystemEventDelegate:ListView_OnCellLoad(sender, senderInsID, cellIns, cellIdx)
    local res, cellSize = UIEventDelegateHelper.Invoke(senderInsID, UIEventType.ListView, UIEventHandlerType.ListView_OnCellLoad, sender, cellIns, cellIdx)
    if not cellSize then
        cellSize = Vector2.zero_readonly
    end
    return res, cellSize
end

---@param sender PapeGames.X3UI.GridListView
---@param senderInsID int
---@param cellIns GameObject
---@param cellIdx int
function IUISystemEventDelegate:ListView_OnCellClick(sender, senderInsID, cellIns, cellIdx)
    UIEventDelegateHelper.Invoke(senderInsID, UIEventType.ListView, UIEventHandlerType.ListView_OnCellClick, sender, cellIns, cellIdx)
end

---@param sender PapeGames.X3UI.GridListView
---@param senderInsID int
---@param cellIns GameObject
---@param cellIdx int
---@param longPressIdx int
function IUISystemEventDelegate:ListView_OnCellLongPress(sender, senderInsID, cellIns, cellIdx, longPressIdx)
    UIEventDelegateHelper.Invoke(senderInsID, UIEventType.ListView, UIEventHandlerType.ListView_OnCellLongPress, sender, cellIns, cellIdx, longPressIdx)
end

---@param sender PapeGames.X3UI.GridListView
---@param senderInsID int
---@param cellIns GameObject
---@param cellIdx int
function IUISystemEventDelegate:ListView_OnCellCentered(sender, senderInsID, cellIns, cellIdx)
    UIEventDelegateHelper.Invoke(senderInsID, UIEventType.ListView, UIEventHandlerType.ListView_OnCellCentered, sender, cellIns, cellIdx)
end

--endregion

--region ExpandView
---@param sender PapeGames.X3UI.ExpandView
---@param senderInsID int
---@param cellIns GameObject
---@return bool,int
function IUISystemEventDelegate:ExpandView_OnGetChildCellCount(sender, senderInsID, cellIns)
    local res, childCellCount = UIEventDelegateHelper.Invoke(senderInsID, UIEventType.ExpandView, UIEventHandlerType.ExpandView_OnGetChildCellCount, sender, cellIns)
    return res, (childCellCount or 0)
end

---@param sender PapeGames.X3UI.ExpandView
---@param senderInsID int
---@param cellIns GameObject
---@param cellIdx int
---@param childCellIdx int
function IUISystemEventDelegate:ExpandView_OnChildCellLoad(sender, senderInsID, cellIns, childCellIdx, cellIdx)
    UIEventDelegateHelper.Invoke(senderInsID, UIEventType.ExpandView, UIEventHandlerType.ExpandView_OnChildCellLoad, sender, cellIns, childCellIdx, cellIdx)
end

---@param sender PapeGames.X3UI.ExpandView
---@param senderInsID int
---@param cellIns GameObject
---@param cellIdx int
---@param childCellIdx int
function IUISystemEventDelegate:ExpandView_OnChildCellClick(sender, senderInsID, cellIns, childCellIdx, cellIdx)
    UIEventDelegateHelper.Invoke(senderInsID, UIEventType.ExpandView, UIEventHandlerType.ExpandView_OnChildCellClick, sender, cellIns, childCellIdx, cellIdx)
end

---@param sender PapeGames.X3UI.ExpandView
---@param senderInsID int
---@param cellIns GameObject
---@param cellIdx int
---@param childCellIdx int
---@param longPressIdx int
function IUISystemEventDelegate:ExpandView_OnChildCellLongPress(sender, senderInsID, cellIns, childCellIdx, longPressIdx, cellIdx)
    UIEventDelegateHelper.Invoke(senderInsID, UIEventType.ExpandView, UIEventHandlerType.ExpandView_OnChildCellLongPress, sender, cellIns, childCellIdx, longPressIdx, cellIdx)
end

function IUISystemEventDelegate:ExpandView_OnCellExpand(sender, senderInsID, cellIdx, isExpand)
    UIEventDelegateHelper.Invoke(senderInsID, UIEventType.ExpandView, UIEventHandlerType.ExpandView_OnCellExpand, sender, cellIdx, isExpand)
end
--endregion 

--region ScrollView
---@param sender PapeGames.X3UI.X3ScrollView
---@param senderInsID int
---@param scrollDeltaX float
---@param scrollDeltaY float
function IUISystemEventDelegate:ScrollView_OnScrolling(sender, senderInsID, scrollDeltaX, scrollDeltaY)
    UIEventDelegateHelper.Invoke(senderInsID, UIEventType.ScrollView, UIEventHandlerType.ScrollView_OnScrolling, sender, scrollDeltaX, scrollDeltaY)
end

---@param sender PapeGames.X3UI.X3ScrollView
---@param senderInsID int
function IUISystemEventDelegate:ScrollView_OnScrollEnd(sender, senderInsID)
    UIEventDelegateHelper.Invoke(senderInsID, UIEventType.ScrollView, UIEventHandlerType.ScrollView_OnScrollEnd, sender)
end

---@param sender PapeGames.X3UI.X3ScrollView
---@param senderInsID int
---@param offset float
function IUISystemEventDelegate:ScrollView_OnRefresh(sender, senderInsID, offset)
    UIEventDelegateHelper.Invoke(senderInsID, UIEventType.ScrollView, UIEventHandlerType.ScrollView_OnRefresh, sender, offset)
end

--endregion

--region ToggleButton
---@param sender PapeGames.X3UI.ToggleButton
---@param senderInsID int
---@param isOn boolean
function IUISystemEventDelegate:ToggleButton_OnValueChanged(sender, senderInsID, isOn)
    UIEventDelegateHelper.Invoke(senderInsID, UIEventType.ToggleButton, UIEventHandlerType.ToggleButton_OnValueChanged, sender, isOn)
end
--endregion

--region ToggleButtonGroup
---@param sender PapeGames.X3UI.ToggleButton
---@param senderInsID int
---@param newValue int
---@param oldValue int
function IUISystemEventDelegate:ToggleButtonGroup_OnValueChanged(sender, senderInsID, newValue, oldValue)
    UIEventDelegateHelper.Invoke(senderInsID, UIEventType.ToggleButtonGroup, UIEventHandlerType.ToggleButtonGroup_OnValueChanged, sender, newValue, oldValue)
end
--endregion

--region DragHandler
---@param sender PapeGames.X3UI.DragHandler
---@param senderInsID int
---@param deltaX float
---@param deltaY float
function IUISystemEventDelegate:DragHandler_OnDrag(sender, senderInsID, deltaX, deltaY)
    UIEventDelegateHelper.Invoke(senderInsID, UIEventType.DragHandler, UIEventHandlerType.DragHandler_OnDrag, sender, deltaX, deltaY)
end

---@param sender PapeGames.X3UI.DragHandler
---@param senderInsID int
---@param deltaX float
---@param deltaY float
function IUISystemEventDelegate:DragHandler_OnPointerDown(sender, senderInsID, deltaX, deltaY)
    UIEventDelegateHelper.Invoke(senderInsID, UIEventType.DragHandler, UIEventHandlerType.DragHandler_OnPointerDown, sender, deltaX, deltaY)
end

---@param sender PapeGames.X3UI.DragHandler
---@param senderInsID int
---@param deltaX float
---@param deltaY float
function IUISystemEventDelegate:DragHandler_OnPointerUp(sender, senderInsID, deltaX, deltaY)
    UIEventDelegateHelper.Invoke(senderInsID, UIEventType.DragHandler, UIEventHandlerType.DragHandler_OnPointerUp, sender, deltaX, deltaY)
end
--endregion

--region MilestoneSlider
---@param sender X3Game.MilestoneSlider
---@param senderInsID int
---@param childItem GameObject
---@param childIdx int
function IUISystemEventDelegate:MilestoneSlider_OnCellLoad(sender, senderInsID, childItem, childIdx)
    UIEventDelegateHelper.Invoke(senderInsID, UIEventType.MilestoneSlider, UIEventHandlerType.MilestoneSlider_OnCellLoad, sender, childItem, childIdx)
end

---@param sender X3Game.MilestoneSlider
---@param senderInsID int
---@param childItem GameObject
---@param childIdx int
function IUISystemEventDelegate:MilestoneSlider_OnMilestoneEnter(sender, senderInsID, childItem, childIdx)
    UIEventDelegateHelper.Invoke(senderInsID, UIEventType.MilestoneSlider, UIEventHandlerType.MilestoneSlider_OnMilestoneEnter, sender, childItem, childIdx)
end
--endregion

--region Slider
---@param sender UnityEngine.UI.Slider
---@param senderInsID int
---@param newValue float
---@param oldValue float
function IUISystemEventDelegate:Slider_OnValueChanged(sender, senderInsID, newValue, oldValue)
    UIEventDelegateHelper.Invoke(senderInsID, UIEventType.Slider, UIEventHandlerType.Slider_OnValueChanged, sender, newValue, oldValue)
end
--endregion


--region TransformSizeChangingDispatcher
---@param sender PapeGames.X3UI.TransformSizeChangingDispatcher
---@param senderInsID int
---@param sizeX float
---@param sizeY float
function IUISystemEventDelegate:TransformSizeChangingDispatcher_OnSizeChanged(sender, senderInsID, sizeX, sizeY)
    UIEventDelegateHelper.Invoke(senderInsID, UIEventType.TransformSizeChangingDispatcher, UIEventHandlerType.TransformSizeChangingDispatcher_OnSizeChanged, sender, sizeX, sizeY)
end
--endregion

--region Joystick
---@param sender PapeGames.X3UI.X3Joystick
---@param senderInsID int
---@param eventData UnityEngine.EventSystems.PointerEventData
function IUISystemEventDelegate:X3Joystick_OnJoystickDown(sender, senderInsID, eventData)
    UIEventDelegateHelper.Invoke(senderInsID, UIEventType.Joystick, UIEventHandlerType.Joystick_OnJoystickDown, eventData)
end

---@param sender PapeGames.X3UI.X3Joystick
---@param senderInsID int
---@param eventData UnityEngine.EventSystems.PointerEventData
function IUISystemEventDelegate:X3Joystick_OnJoystickUp(sender, senderInsID, eventData)
    UIEventDelegateHelper.Invoke(senderInsID, UIEventType.Joystick, UIEventHandlerType.Joystick_OnJoystickUp, eventData)
end

---@param sender PapeGames.X3UI.X3Joystick
---@param senderInsID int
---@param dirX float
---@param dirY float
function IUISystemEventDelegate:X3Joystick_OnJoystickDrag(sender, senderInsID, dirX, dirY)
    UIEventDelegateHelper.Invoke(senderInsID, UIEventType.Joystick, UIEventHandlerType.Joystick_OnJoystickDrag, dirX, dirY)
end

---@param sender PapeGames.X3UI.X3Joystick
---@param senderInsID int
---@param dirX float
---@param dirY float
function IUISystemEventDelegate:X3Joystick_OnJoystickUpdate(sender, senderInsID, dirX, dirY)
    UIEventDelegateHelper.Invoke(senderInsID, UIEventType.Joystick, UIEventHandlerType.Joystick_OnJoystickUpdate, dirX, dirY)
end

---@param sender PapeGames.X3UI.X3Joystick
---@param senderInsID int
---@param dirX float
---@param dirY float
function IUISystemEventDelegate:X3Joystick_OnJoystickFixUpdate(sender, senderInsID, dirX, dirY)
    UIEventDelegateHelper.Invoke(senderInsID, UIEventType.Joystick, UIEventHandlerType.Joystick_OnJoystickFixUpdate, dirX, dirY)
end

---@param sender PapeGames.X3UI.X3Joystick
---@param senderInsID int
---@param dirX float
---@param dirY float
function IUISystemEventDelegate:X3Joystick_OnJoystickLateUpdate(sender, senderInsID, dirX, dirY)
    UIEventDelegateHelper.Invoke(senderInsID, UIEventType.Joystick, UIEventHandlerType.Joystick_OnJoystickLateUpdate, dirX, dirY)
end

--endregion

---region X3TabMenu

---@param sender PapeGames.X3UI.X3TabMenu
---@param senderInsID int
---@param cellIdx int
---@param childIdx int
---@return bool,bool
function IUISystemEventDelegate:X3TabMenu_OnValueWillChange(sender, senderInsID, cellIdx, childIdx)
    local res, canChange = UIEventDelegateHelper.Invoke(senderInsID, UIEventType.X3TabMenu, UIEventHandlerType.X3TabMenu_OnValueWillChange, sender, cellIdx, childIdx)
    if canChange == nil then
        canChange = true
    end
    return res, canChange
end

---@param sender PapeGames.X3UI.X3TabMenu
---@param senderInsID int
---@param newValue int
---@param oldValue int
function IUISystemEventDelegate:X3TabMenu_OnValueChanged(sender, senderInsID, newValue, oldValue)
    UIEventDelegateHelper.Invoke(senderInsID, UIEventType.X3TabMenu, UIEventHandlerType.X3TabMenu_OnValueChanged, sender, newValue, oldValue)
end

---@param sender PapeGames.X3UI.X3TabMenu
---@param senderInsID int
---@param cellIns GameObject
---@param cellIdx int
function IUISystemEventDelegate:X3TabMenu_OnCellLoad(sender, senderInsID, cellIns, cellIdx)
    UIEventDelegateHelper.Invoke(senderInsID, UIEventType.X3TabMenu, UIEventHandlerType.X3TabMenu_OnCellLoad, sender, cellIns, cellIdx)
end

---@param sender PapeGames.X3UI.X3TabMenu
---@param senderInsID int
---@param cellIns GameObject
---@param cellIdx int
---@param childIdx int
function IUISystemEventDelegate:X3TabMenu_OnChildCellLoad(sender, senderInsID, cellIns, cellIdx, childIdx)
    UIEventDelegateHelper.Invoke(senderInsID, UIEventType.X3TabMenu, UIEventHandlerType.X3TabMenu_OnChildCellLoad, sender, cellIns, cellIdx, childIdx)
end

---@param sender PapeGames.X3UI.X3TabMenu
---@param senderInsID int
---@param cellIdx int
---@return bool,int
function IUISystemEventDelegate:X3TabMenu_OnGetChildCellCount(sender, senderInsID, cellIdx)
    local res, childCellCount = UIEventDelegateHelper.Invoke(senderInsID, UIEventType.X3TabMenu, UIEventHandlerType.X3TabMenu_OnGetChildCellCount, sender, cellIdx)
    return res, (childCellCount or 0)
end

---@param sender PapeGames.X3UI.X3TabMenu
---@param senderInsID int
---@param cellIdx int
---@param isExpand bool
function IUISystemEventDelegate:X3TabMenu_OnCellExpand(sender, senderInsID, cellIdx, isExpand)
    UIEventDelegateHelper.Invoke(senderInsID, UIEventType.X3TabMenu, UIEventHandlerType.X3TabMenu_OnCellExpand, sender, cellIdx, isExpand)
end

---endregion

--region GroupView
---@param sender PapeGames.X3UI.GroupView
---@param senderInsID int
---@param cellIns GameObject
---@param cellIdx int
function IUISystemEventDelegate:GroupView_OnCellLoad(sender, senderInsID, cellIns, cellIdx)
    UIEventDelegateHelper.Invoke(senderInsID, UIEventType.GroupView, UIEventHandlerType.GroupView_OnCellLoad, sender, cellIns, cellIdx)
end
--endregion

--region GIFImage
function IUISystemEventDelegate:GIFImage_OnBegin(sender, senderInsID)
    UIEventDelegateHelper.Invoke(senderInsID, UIEventType.GIFImage, UIEventHandlerType.GIFImage_OnBegin, sender)
end

function IUISystemEventDelegate:GIFImage_OnComplete(sender, senderInsID)
    UIEventDelegateHelper.Invoke(senderInsID, UIEventType.GIFImage, UIEventHandlerType.GIFImage_OnComplete, sender)
end

function IUISystemEventDelegate:GIFImage_OnKeyFrame(sender, senderInsID, spriteIndex)
    UIEventDelegateHelper.Invoke(senderInsID, UIEventType.GIFImage, UIEventHandlerType.GIFImage_OnKeyFrame, sender, spriteIndex)
end

--endregion

---@param sender UObject
---@param senderInsID int
function IUISystemEventDelegate:OnDestroy(sender, senderInsID)
    UIEventDelegateHelper.UnregisterEventDelegateById(senderInsID)
end

return IUISystemEventDelegate