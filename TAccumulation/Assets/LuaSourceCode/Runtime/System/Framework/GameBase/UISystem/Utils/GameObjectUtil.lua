---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by jiaozhu.
--- DateTime: 2021/12/23 11:35
--- 所有GameObject相关属性操作
local LuaCompHelper = require("Runtime.System.Framework.GameBase.Helper.LuaCompHelper")
---@class GameObjectUtil
GameObjectUtil = {}

---@type X3Game.UIUtility
local cs_ui_util = CS.X3Game.UIUtility

---从节点上获取组件
---@param obj UObject 根节点
---@param name string ocx名称或者是路径
---@param type_str string | int default GameObject
---@param is_recursion boolean 是否需要递归查找
---@param no_log boolean 是否打印日志
---@return UObject
function GameObjectUtil.GetComponent(obj, name, type_str, is_recursion, no_log)
    if not obj and not no_log then
        Debug.LogError("GameObjectUtil.GetComponent ---failed", obj, name, type_str)
        return nil
    end
    if type_str == nil then
        type_str = "GameObject"
    end

    name = name and name or ""
    return LuaCompHelper.GetComponent(obj, name, type_str, is_recursion, no_log)
end

---清理获取的组件
---@param obj GameObject
function GameObjectUtil.ClearComponents(obj)
    LuaCompHelper.RemoveCache(obj)
end

---清理所有缓存数据
function GameObjectUtil.Clear()
    LuaCompHelper.ClearAllCache()
end

---设置GameObject Active or Deactive
---@param obj UObject
---@param active boolean
---@param isIncludeChild boolean 是否把一级子节点也隐藏，默认false
function GameObjectUtil.SetActive(obj, active, isIncludeChild)
    if obj then
        if active == nil then
            active = false
        else
            if active ~= false then
                active = true
            end
        end
        return cs_ui_util.SetActive(obj, active, isIncludeChild or false)
    end
    return false
end

---检测某个物体是否是activeSelf状态
---@param obj UObject
function GameObjectUtil.IsActiveSelf(obj)
    return obj and cs_ui_util.IsActiveSelf(obj)
end

---设置Transform的世界坐标
---@param obj UObject
---@vararg float | Vector3
function GameObjectUtil.SetForward(obj, ...)
    if obj ~= nil then
        GameObjectTransformUtility.SetForwardXYZ(obj, GameUtil.GetVectorXYZ(...))
    end
end

---@return x,y,z
function GameObjectUtil.GetOffsetXYZ(angleX, angleY, angleZ, offSetX, offSetY, offSetZ)
    return GameObjectTransformUtility.GetOffsetXYZ(angleX, angleY, angleZ, offSetX, offSetY, offSetZ)
end

---设置Transform的世界坐标
---@param obj UObject
---@vararg float | Vector3
function GameObjectUtil.SetPosition(obj, ...)
    if obj ~= nil then
        GameObjectTransformUtility.SetPositionXYZ(obj, GameUtil.GetVectorXYZ(...))
    end
end

---@param obj UObject
---@return Vector3
function GameObjectUtil.GetPosition(obj)
    return GameUtil.GetVector(GameObjectUtil.GetPositionXYZ(obj))
end

---@param obj UObject
---@return number,number,number
function GameObjectUtil.GetPositionXYZ(obj)
    return GameObjectTransformUtility.GetPositionXYZ(obj)
end

---设置Transform的本地坐标
---@param obj UObject
---@vararg float | Vector3  x,y,z or Vector
function GameObjectUtil.SetLocalPosition(obj, ...)
    if obj ~= nil then
        GameObjectTransformUtility.SetLocalPositionXYZ(obj, GameUtil.GetVectorXYZ(...))
    end
end

---获取local position
---@return Vector3
function GameObjectUtil.GetLocalPosition(obj)
    return GameUtil.GetVector(GameObjectUtil.GetLocalPositionXYZ(obj))
end

---@param obj UObject
---@return number,number,number
function GameObjectUtil.GetLocalPositionXYZ(obj)
    return GameObjectTransformUtility.GetLocalPositionXYZ(obj)
end

---设置RT的ScreenPosition
---@param obj UObject
---@vararg float | Vector3  ... xyz or Vector2
function GameObjectUtil.SetScreenPosition(obj, ...)
    if obj ~= nil then
        local x, y = GameUtil.GetVectorXYZ(...)
        cs_ui_util.SetScreenPositionXY(obj, x, y)
    end
end

---@param obj UObject
---@return Vector2
function GameObjectUtil.GetScreenPosition(obj)
    return GameUtil.GetVector(GameObjectUtil.GetScreenPositionXY(obj))
end

---@param obj UObject
---@return number,number
function GameObjectUtil.GetScreenPositionXY(obj)
    if obj ~= nil then
        return cs_ui_util.GetScreenPositionXY(obj)
    end
    return 0, 0
end

---@private 获取CanvasScaler的缩放比例 (基于当前的CanvasScaler的MatchMode是Expand)
---@return number
local function __getCurrentCanvasScale()
    local canvasScaler = GameObjectUtil.GetComponent(UIMgr.GetRootCanvas(), nil, "CanvasScaler")
    local referenceResolutionWidth = canvasScaler.referenceResolution.x
    local referenceResolutionHeight = canvasScaler.referenceResolution.y

    local screenRect = RectTransformUtil.GetScreenRect()
    local screenWidth = screenRect.width
    local screenHeight = screenRect.height

    return math.min(screenWidth / referenceResolutionWidth, screenHeight / referenceResolutionHeight)
end

---@public 获取屏幕坐标 (考虑特殊分辨率设备下CanvasScaler缩放因子的影响)
---@param obj UObject
---@return number, number 返回 x, y 坐标
function GameObjectUtil.GetScreenPosXYWithCanvasAdjustment(obj)
    local curCanvasScale = __getCurrentCanvasScale()
    local x, y = GameObjectUtil.GetScreenPositionXY(obj)
    return x / curCanvasScale, y / curCanvasScale
end

---@public 设置屏幕坐标 (考虑特殊分辨率设备下CanvasScaler缩放因子的影响)
---@param obj UObject
function GameObjectUtil.SetScreenPosXYWithCanvasAdjustment(obj, x, y)
    local curCanvasScale = __getCurrentCanvasScale()
    GameObjectUtil.SetScreenPosition(obj, Vector2(x * curCanvasScale, y * curCanvasScale))
end

---设置sideDelta
---@param obj UObject
---@vararg number | Vector2
function GameObjectUtil.SetSizeDelta(obj, ...)
    if obj ~= nil then
        local x, y = GameUtil.GetVectorXYZ(...)
        cs_ui_util.SetSizeDeltaXY(obj, x, y)
    end
end

function GameObjectUtil.SetSizeDeltaXY(obj, x, y)
    if obj ~= nil then
        cs_ui_util.SetSizeDeltaXY(obj, x, y)
    end
end

---@param obj UObject
---@return Vector2
function GameObjectUtil.GetSizeDelta(obj)
    return GameUtil.GetVector(GameObjectUtil.GetSizeDeltaXY(obj))
end

---@param obj UObject
---@return number,number,number
function GameObjectUtil.GetSizeDeltaXY(obj)
    if obj ~= nil then
        return cs_ui_util.GetSizeDeltaXY(obj)
    end
    return 0, 0
end

---@param obj UObject
---@vararg number | Vector2
function GameObjectUtil.SetAnchoredPosition(obj, ...)
    if obj then
        local x, y, z = GameUtil.GetVectorXYZ(...)
        cs_ui_util.SetAnchoredPositionXY(obj, x, y)
    end
end

---获取anchoredpos
---@param obj UObject
---@return Vector2
function GameObjectUtil.GetAnchoredPosition(obj)
    return GameUtil.GetVector(GameObjectUtil.GetAnchoredPositionXY(obj))
end

---@param obj UObject
---@vararg number | Vector2
function GameObjectUtil.SetAnchoredPosition3D(obj, ...)
    if obj then
        local x, y, z = GameUtil.GetVectorXYZ(...)
        cs_ui_util.SetAnchoredPosition3DXYZ(obj, x, y, z)
    end
end

---获取anchoredpos
---@param obj UObject
---@return number,number,number
function GameObjectUtil.GetAnchoredPositionXY(obj)
    if obj then
        return cs_ui_util.GetAnchoredPositionXY(obj)
    end
    return 0, 0
end

---设置RT的ScreenPosition
---@param obj UObject
---@param pos Vector3
---@param camera UnityEngine.Camera
function GameObjectUtil.SetScreenPositionWithWorldPosition(obj, pos, camera)
    if obj ~= nil then
        cs_ui_util.SetScreenPositionWithWorldPosition(obj, pos, camera)
    end
end

---设置LocalScale
---@param obj UObject
---@vararg float | Vector3 ... xyz or Vector3
function GameObjectUtil.SetScale(obj, ...)
    if obj ~= nil then
        GameObjectTransformUtility.SetLocalScaleXYZ(obj, GameUtil.GetVectorXYZ(...))
    end
end

---@param obj UObject
---@return Vector3
function GameObjectUtil.GetScale(obj)
    return GameObjectUtil.GetLocalScale(obj)
end

---@param obj UObject
---@return number,number,number
function GameObjectUtil.GetScaleXYZ(obj)
    return GameObjectUtil.GetLocalScaleXYZ(obj)
end

---设置LocalScale
---@param obj UObject
---@vararg float | Vector3  ... xyz or Vector3
function GameObjectUtil.SetLocalScale(obj, ...)
    if obj ~= nil then
        GameObjectTransformUtility.SetLocalScaleXYZ(obj, GameUtil.GetVectorXYZ(...))
    end
end

---@param obj UObject
---@return Vector3
function GameObjectUtil.GetLocalScale(obj)
    return GameUtil.GetVector(GameObjectUtil.GetLocalScaleXYZ(obj))
end

---@param obj UObject
---@return number,number,number
function GameObjectUtil.GetLocalScaleXYZ(obj)
    if obj then
        return GameObjectTransformUtility.GetLocalScaleXYZ(obj)
    end
    return 0, 0, 0
end

---@param obj UObject
---@vararg number | Quaternion
function GameObjectUtil.SetRotation(obj, ...)
    if obj then
        GameObjectTransformUtility.SetRotationXYZW(obj, GameUtil.GetQuaternionXYZW(...))
    end
end

---@param obj UObject
---@vararg number | Quaternion
function GameObjectUtil.SetLocalRotation(obj, ...)
    if obj then
        GameObjectTransformUtility.SetLocalRotationXYZW(obj, GameUtil.GetQuaternionXYZW(...))
    end
end

---@param obj UObject
---@vararg Quaternion
function GameObjectUtil.GetRotation(obj)
    if obj then
        return GameUtil.GetQuaternion(GameObjectUtil.GetRotationXYZW(obj))
    end
    return GameUtil.GetQuaternion(0, 0, 0, 0)
end

---@param obj UObject
---@return number,number,number,number
function GameObjectUtil.GetRotationXYZW(obj)
    if obj then
        return GameObjectTransformUtility.GetRotationXYZW(obj)
    end
    return 0, 0, 0, 0
end

---@param obj UObject
---@vararg Quaternion
function GameObjectUtil.GetLocalRotation(obj)
    if obj then
        return GameUtil.GetQuaternion(GameObjectUtil.GetLocalRotationXYZW(obj))
    end
    return GameUtil.GetQuaternion(0, 0, 0, 0)
end

---@param obj UObject
---@return number,number,number,number
function GameObjectUtil.GetLocalRotationXYZW(obj)
    if obj then
        return GameObjectTransformUtility.GetLocalRotationXYZW(obj)
    end
    return 0, 0, 0, 0
end

---设置欧拉角
---@param obj UObject
---@vararg number | Vector3
function GameObjectUtil.SetEulerAngles(obj, ...)
    if obj then
        GameObjectTransformUtility.SetEulerAnglesXYZ(obj, GameUtil.GetVectorXYZ(...))
    end
end

---设置欧拉角
---@param obj UObject
---@vararg number | Vector3
function GameObjectUtil.SetLocalEulerAngles(obj, ...)
    if obj then
        GameObjectTransformUtility.SetLocalEulerAnglesXYZ(obj, GameUtil.GetVectorXYZ(...))
    end
end

---@param obj UObject
---@return Vector3
function GameObjectUtil.GetEulerAngles(obj)
    if obj then
        return GameUtil.GetVector(GameObjectUtil.GetEulerAnglesXYZ(obj))
    end
end

---@param obj UObject
---@return Vector3
function GameObjectUtil.GetLocalEulerAngles(obj)
    if obj then
        return GameUtil.GetVector(GameObjectUtil.GetLocalEulerAnglesXYZ(obj))
    end
end

---获取Transform.eulerAngles
---@param obj UObject
---@return float,float,float
function GameObjectUtil.GetEulerAnglesXYZ(obj)
    if obj ~= nil then
        return GameObjectTransformUtility.GetEulerAnglesXYZ(obj)
    end
    return 0, 0, 0
end

---获取Transform.localEulerAngles
---@param obj UObject
---@return float,float,float
function GameObjectUtil.GetLocalEulerAnglesXYZ(obj)
    if obj ~= nil then
        return GameObjectTransformUtility.GetLocalEulerAnglesXYZ(obj)
    end
    return 0, 0, 0
end

---设置GameObject Layer
---@param obj UObject
---@param layerNameOrId string | number  LayerName or LayerId
---@param includeChildren boolean 是否包含子节点
function GameObjectUtil.SetLayer(obj, layerNameOrId, includeChildren)
    includeChildren = includeChildren or false
    if obj ~= nil then
        cs_ui_util.SetLayer(obj, layerNameOrId, includeChildren)
    end
end

---获取layer
---@param obj UObject
---@return int
function GameObjectUtil.GetLayer(obj)
    if obj ~= nil then
        return cs_ui_util.GetLayer(obj)
    end
end

---设置父子节点
---@param child UObject
---@param parent UObject
---@param worldPositionStays boolean
function GameObjectUtil.SetParent(child, parent, worldPositionStays)
    if child ~= nil then
        if worldPositionStays == nil then
            worldPositionStays = false
        end
        GameObjectTransformUtility.SetParent(child, parent, worldPositionStays)
    end
end

---设置名称
---@param obj GameObject
---@param name string
function GameObjectUtil.SetName(obj, name)
    if obj then
        if obj.name ~= name then
            obj.name = name
        end
    end
end

---重置transformlocalPosition,localScale,LocalEuler
---@param obj UObject
---@return boolean
function GameObjectUtil.ResetTransform(obj)
    if obj then
        return GameObjectTransformUtility.ResetLocalTSR(obj)
    end
    return false
end

---检测C#对象是否被释放
---@param go UnityEngine.Object
---@return boolean
function GameObjectUtil.IsNull(go)
    return go == nil or CS.XLuaHelper.IsNull(go)
end

---销毁GameObject对象
---@param go UnityEngine.GameObject
function GameObjectUtil.Destroy(go)
    if go ~= nil then
        CS.UnityEngine.GameObject.Destroy(go)
    end
end

---销毁GameObject对象
---@param go UnityEngine.GameObject
function GameObjectUtil.DestroyImmediate(go)
    if go ~= nil then
        CS.UnityEngine.GameObject.DestroyImmediate(go)
    end
end

---设置gameObject 切换场景不销毁逻辑
---@param go UnityEngine.GameObject
function GameObjectUtil.DontDestroyOnLoad(go)
    if go ~= nil and Application.IsPlaying() then
        CS.UnityEngine.GameObject.DontDestroyOnLoad(go)
    end
end

---@param go UnityEngine.GameObject
---@param type UnityEngine.Component
---@return UnityEngine.Component
function GameObjectUtil.EnsureCSComponent(go, type)
    if not go then
        return nil
    end
    local t = go:GetComponent(type)
    if not GameObjectUtil.IsNull(t) then
        return t
    end
    return go:AddComponent(type)
end

---销毁GameObject对象上的cs组件
---@param cs_type System.Type
function GameObjectUtil.RemoveCSComponent(go, cs_type)
    if not GameObjectUtil.IsNull(go) then
        go:RemoveComponent(cs_type)
    end
end

---@public Instantiate
---@param gameObject UnityEngine.GameObject
---@param parent UnityEngine.Transform
---@param worldPositionStays boolean
---@return GameObject
function GameObjectUtil.InstantiateGameObject(gameObject, parent, worldPositionStays)
    if gameObject == nil then
        Debug.LogError("GameObjectUtil.InstantiateGameObject: gameObject is nil.")
        return
    end

    if parent == nil then
        return CS.UnityEngine.GameObject.Instantiate(gameObject)
    end

    if worldPositionStays == nil then
        return CS.UnityEngine.GameObject.Instantiate(gameObject, parent)
    end

    return CS.UnityEngine.GameObject.Instantiate(gameObject, parent, worldPositionStays)
end

---@param name string
---@param parent Transform
---@param is_world boolean
---@return GameObject
function GameObjectUtil.CreateGameObject(name, parent, is_world)
    name = name or "_default_"
    local obj = CS.UnityEngine.GameObject(name)
    if parent then
        local trans = GameObjectUtil.GetComponent(obj, nil, "Transform")
        if trans then
            GameObjectUtil.SetParent(trans, parent, is_world)
        end
    end
    return obj
end

---设置GameObject Active or Deactive
---@param obj UObject
---@param active boolean
---@param isIncludeChild boolean 是否把一级子节点也隐藏，默认false
function GameObjectUtil.TrySetActive(obj, active, isIncludeChild)
    if obj then
        if active ~= nil and active ~= false then
            active = true
        end
        return cs_ui_util.TrySetActive(obj, active or false, isIncludeChild or false)
    end
    return false
end

---检测某个物体是否是activeSelf状态
---@param obj UObject
function GameObjectUtil.TryIsActiveSelf(obj)
    return obj and cs_ui_util.TryIsActiveSelf(obj)
end

---设置GameObject Active or Deactive
---@param obj UObject
---@param type_str string
---@param enabled boolean
function GameObjectUtil.SetEnable(obj, type_str, enabled)
    if obj then
        return cs_ui_util.SetEnable(obj, type_str, enabled)
    end
    return false
end

---@param obj UObject
---@vararg float | Vector2  ... xyz or Vector2
function GameObjectUtil.SetAnchorMin(obj, ...)
    if obj ~= nil then
        local x, y = GameUtil.GetVectorXYZ(...)
        cs_ui_util.SetAnchorMinXY(obj, x, y)
    end
end

---@param obj UObject
---@return Vector2
function GameObjectUtil.GetAnchorMin(obj)
    return GameUtil.GetVector(GameObjectUtil.GetAnchorMinXY(obj))
end

---@param obj UObject
---@return number , number
function GameObjectUtil.GetAnchorMinXY(obj)
    if obj then
        return cs_ui_util.GetAnchorMinXY(obj)
    end
    return 0, 0
end

---@param obj UObject
---@vararg float | Vector2  ... xyz or Vector2
function GameObjectUtil.SetAnchorMax(obj, ...)
    if obj ~= nil then
        local x, y = GameUtil.GetVectorXYZ(...)
        cs_ui_util.SetAnchorMaxXY(obj, x, y)
    end
end

---@param obj UObject
---@return Vector2
function GameObjectUtil.GetAnchorMax(obj)
    return GameUtil.GetVector(GameObjectUtil.GetAnchorMaxXY(obj))
end

---@param obj UObject
---@return number , number
function GameObjectUtil.GetAnchorMaxXY(obj)
    if obj then
        return cs_ui_util.GetAnchorMaxXY(obj)
    end
    return 0, 0
end