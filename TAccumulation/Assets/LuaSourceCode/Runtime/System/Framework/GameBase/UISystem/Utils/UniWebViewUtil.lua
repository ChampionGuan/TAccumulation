---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by deling.
--- DateTime: 2022/3/30 21:55
---

--客户端需要打开网页时
---@class UniWebViewUtil
UniWebViewUtil = {}

UniWebViewUtil.webView = nil
UniWebViewUtil.webViewGo = nil

---@public 通过Id打开网址
---@param urlId number
function UniWebViewUtil.OpenUrlById(urlId)
    local webURL = urlId and LuaCfgMgr.Get("URL", urlId) or nil
    if webURL and webURL.URLJump then
        UniWebViewUtil.OpenUrlView(webURL.URLJump, true)
    else
        UICommonUtil.ShowMessage(UITextConst.UI_TEXT_5820) ---无效链接
    end
end
---打开网页
---@field url string 要打开的网页地址
---@field fullScreen bool 是否全屏打开网页
---@field data table 传入的差异参数 closeCb 关闭回调 clickCb 点击回调 clickCb 点击回调 bgName 需要显示的背景图片名
---@field ConfigEntryId int 资源位ID，目前问卷用
function UniWebViewUtil.OpenUrlView(url, fullScreen, data, ConfigEntryId)
    if (not fullScreen) then
        UIMgr.Open(UIConf.UniWebViewWnd, data)
    else
        ---目前SDK的CB在界面打开和关闭时均会触发
        --先用傻瓜方式处理下-需要再找寻别的方式
        url = string.gsub(url, string.char(226, 128, 139), "")

        if(not UNITY_EDITOR) then
            UniWebViewUtil.OpenSdkView(url,nil, ConfigEntryId)
        else
            Application.OpenURL(url);
        end
    end
end

---加载网页组件(窗口)
---@field go GameObject 需要附加组件的GO
---@field url string 要打开的网页地址
function UniWebViewUtil.LoadUrl(go, url)
    --新的进来应该直接销毁
    --UniWebViewUtil.OnCloseWebView()
    local webView = go:AddComponent(typeof(CS.UniWebView))
    UniWebViewUtil.webView = webView
    UniWebViewUtil.webViewGo = go
    local rectTrans = GameObjectUtil.GetComponent(go, "", "RectTransform")
    webView.ReferenceRectTransform = rectTrans

    --webView:SetBackButtonEnabled(true)
    webView:SetBouncesEnabled(false)
    webView:SetHorizontalScrollBarEnabled(false)
    webView:SetVerticalScrollBarEnabled(false)
    webView:ScrollTo(0, 0, false)
    webView:Load(url)
    webView:CleanCache()
    webView:Show()
end

---全屏打开网页
---@field go GameObject 需要附加组件的GO
---@field url string 要打开的网页地址
function UniWebViewUtil.OpenFullScreenWithUrl(go, url)
    --新的进来应该直接销毁
    UniWebViewUtil.OnCloseWebView()
    --Debug.LogError("OpenFullScreenWithUrl ---", url)
    ---平台版本
    --SDKMgr.OpenWebView(url, tostring(1), tostring(2), "", function(result)
    --    Debug.LogError("OpenFullScreenWithUrl ", result)
    --    Debug.LogTable(result)
    --end)


    ----插件版本
    local webView = go:AddComponent(typeof(CS.UniWebView))
    UniWebViewUtil.webView = webView
    UniWebViewUtil.webViewGo = go

    webView:SetShowToolbar(
            true, --// Show or hide?         true  = show
            false, --// With animation?       false = no animation
            true, --// Is it on top?         true  = top
            true  --// Should adjust insets? true  = avoid overlapping to web view
    );
    webView.Frame = CS.UnityEngine.Rect(0, 0, CS.UnityEngine.Screen.width, CS.UnityEngine.Screen.height);
    webView:OnShouldClose("+", function()
        UIMgr.Close(UIConf.UniWebViewWnd)
        return true
    end)
    --webView:SetToolbarDoneButtonText("完成");
    webView:SetBackButtonEnabled(true)
    webView:ScrollTo(0, 0, false)
    webView:Load(url)
    webView:CleanCache()
    webView:Show()
end

function UniWebViewUtil.OpenSdkView(url, closeCb, ConfigEntryId)
    local extraStr = ""
    if ConfigEntryId ~= nil then
        local extraTable = {
            time_zone = TimerMgr.GetTimeZone(),
            entry_strategy_id = ConfigEntryId
        }
        extraStr = JsonUtil.Encode(extraTable)
    end

    SDKMgr.OpenWebView(url, tostring(1), tostring(2), extraStr, function(result)
        --Debug.LogError("OpenFullScreenWithUrl ", result)
        --Debug.LogTable(result)
        --if(closeCb) then
        --    closeCb(result)
        --end
    end)

end

---网页被关闭时
function UniWebViewUtil.OnCloseWebView()
    --Debug.LogError("OnCloseWebView ", UniWebViewUtil.webView)
    if (not GameObjectUtil.IsNull(UniWebViewUtil.webViewGo)) and UniWebViewUtil.webView then
        UniWebViewUtil.webView:CleanCache()
        GameObjectUtil.RemoveCSComponent(UniWebViewUtil.webViewGo, typeof(CS.UniWebView))
        UniWebViewUtil.webView = nil
        UniWebViewUtil.webViewGo = nil
    end
end