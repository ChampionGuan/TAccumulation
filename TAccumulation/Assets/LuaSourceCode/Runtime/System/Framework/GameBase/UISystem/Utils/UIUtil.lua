---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by jiaozhu.
--- DateTime: 2021/12/23 12:07
--- 所有ui操作的通用入口
---
---@class UIUtil
UIUtil = {}

local cs_ui_util = CS.X3Game.UIUtility
local UIEventDelegateHelper = require("Runtime.System.Framework.GameBase.UISystem.Interface.UIEventDelegateHelper")
---@type UIEventType
UIUtil.UIEventType = UIEventDelegateHelper.UIEventType
---@type UIEventHandlerType
UIUtil.UIEventHandlerType = UIEventDelegateHelper.UIEventHandlerType
---@type UIEventDelegateHelper
UIUtil.UIEventDelegateHelper = UIEventDelegateHelper

local SoundFXHandlerUtil = CS.X3Game.GameHelper.SoundFXHandlerUtil

---设置Image,Text等的颜色
---@param obj UObject
---@param colorOrHtmlStr string 颜色字符串(#ff0000)或Color对象
function UIUtil.SetColor(obj, colorOrHtmlStr)
    if (obj ~= nil) then
        cs_ui_util.SetColor(obj, colorOrHtmlStr)
    end
end

---设置Value
---@param obj UObject
---@param value int | boolean | float | string
function UIUtil.SetValue(obj, value)
    if obj ~= nil then
        cs_ui_util.SetValue(obj, value)
    end
end

---设置Value不需要通知
---@param obj UObject
---@param value int | boolean | float | string
function UIUtil.SetValueWithoutNotify(obj, value)
    if obj ~= nil then
        cs_ui_util.SetValue(obj, value, false)
    end
end

---@param obj UObject
---@param dftValue any 默认值（执行失败时返回此值）
---@return int | boolean | float | string
function UIUtil.GetValue(obj, dftValue)
    if dftValue == nil then
        dftValue = 0
    end
    if obj ~= nil then
        return cs_ui_util.GetValue(obj)
    end
    return dftValue
end

---@param obj UObject
---@param dftValue any 默认值（执行失败时返回此值）
---@return int | boolean | float | string
function UIUtil.GetBoolValue(obj, dftValue)
    if dftValue == nil then
        dftValue = false
    end
    if obj ~= nil then
        local i, b = UIUtil.GetValue(obj)
        return b
    end
    return dftValue
end

---@param obj UObject
---@param dftValue any 默认值（执行失败时返回此值）
---@return int | boolean | float | string
function UIUtil.GetFloatValue(obj, dftValue)
    if dftValue == nil then
        dftValue = 0
    end
    if obj ~= nil then
        local i, b, f = UIUtil.GetValue(obj)
        return f
    end
    return dftValue
end

---@param obj UObject
---@param dftValue any 默认值（执行失败时返回此值）
---@return int | boolean | float | string
function UIUtil.GetStringValue(obj, dftValue)
    if dftValue == nil then
        dftValue = ""
    end
    if obj ~= nil then
        local i, b, f, s = UIUtil.GetValue(obj)
        return s
    end
    return dftValue
end

---设置TabMenu, X3DropDown, TMP_Dropdown, Dropdown的菜单
---@param obj UObject
---@param menus table<string> eg:{'txt1','txt2'}
---@return boolean
function UIUtil.SetMenus(obj, menus)
    if obj ~= nil and menus ~= nil then
        cs_ui_util.SetMenus(obj, menus)
    end
end

---@param obj UObject
---@param value float
---@param duration float 时长
---@param notify boolean 是否执行回调
---@param onComplete fun(type:UnityEngine.UI.Slider)
---@param ease int
function UIUtil.SetMilestoneSliderValueAnim(obj, value, duration, notify, onComplete, ease)
    if obj ~= nil then
        LuaUtil.OptimizeCall(cs_ui_util.SetMilestoneSliderValueAnim, obj, value, duration, notify, onComplete, ease)
    end
end

---设置Canvas/ParticleLayer的SortingOrder
---@param obj UObject
---@param sortingOrder int
function UIUtil.SetSortingOrder(obj, sortingOrder)
    if obj ~= nil then
        cs_ui_util.SetSortingOrder(obj, sortingOrder)
    end
end

---设置Canvas/ParticleLayer的SetSortingLayerId
---@param obj UObject
---@param sortingLayerId int
function UIUtil.SetSortingLayerId(obj, sortingLayerId)
    if obj ~= nil then
        cs_ui_util.SetSortingLayerId(obj, sortingLayerId)
    end
end

---@param slider UObject
---@param call fun(type:float)
function UIUtil.AddSliderListener(slider, call)
    if slider == nil then
        return
    end
    cs_ui_util.AddSliderListener(slider, call)
end

---@param slider UObject
---@param onCellLoad fun(type:MilestoneSlider,GameObject,int)
---@param onMilestoneEnter fun(type:MilestoneSlider,GameObject,int)
function UIUtil.AddMilestoneSliderListener(slider, onCellLoad, onMilestoneEnter)
    if slider == nil then
        return
    end
    cs_ui_util.AddMilestoneSliderListener(slider, onCellLoad, onMilestoneEnter)
end

---添加DropDown的valuechanged回调
---新版 X3DropDown
---@param obj UObject
---@param onValueChanged fun(type:X3DropDown,int,int)
---@param onCellLoad fun(type:X3DropDown,GameObject,int)
function UIUtil.AddDropDownListener(obj, onValueChanged, onCellLoad)
    if obj then
        cs_ui_util.AddDropDownListener(obj, onValueChanged, onCellLoad)
    end
end

---添加DropDown的valuechanged回调
---支持DropDown/TMP_Dropdown
---Todo:适配原来的组件，后续迭代完成后删除
---@param obj UObject
---@param onValueChanged fun(type:int) System.Action<int>
function UIUtil.AddTMPDropDownListener(obj, onValueChanged)
    if obj then
        cs_ui_util.AddTMPDropDownListener(obj, onValueChanged)
    end
end

---添加DragHandler的onDrag回调
---支持DragHandler
---@param obj UObject
---@param onDrag fun(type:PointerEventData,type:float,type:float)
---@param onPointerDown fun(type:PointerEventData,type:float,type:float)
---@param onPointerUp fun(type:PointerEventData,type:float,type:float)
function UIUtil.AddDragListener(obj, onDrag, onPointerDown, onPointerUp)
    if obj then
        cs_ui_util.AddDragListener(obj, onDrag, onPointerDown, onPointerUp)
    end
end

---移除Drag回调
---@param obj UObject
function UIUtil.RemoveDragListener(obj)
    if obj then
        cs_ui_util.RemoveDragListener(obj)
    end
end

---强制节点下的所有Layout刷新
---@param obj UObject
---@param includeChildren boolean 是否包含子节点的Layout
function UIUtil.ForceLayoutRebuild(obj, includeChildren)
    if obj then
        includeChildren = includeChildren or false
        cs_ui_util.ForceLayoutRebuild(obj, includeChildren)
    end
end

---设置模型renderingLayerMask
---@param obj GameObject
---@param isEnabled boolean
function UIUtil.SetRenderingLayerMaskEnabled(obj, isEnabled)
    if obj then
        cs_ui_util.SetRenderingLayerMaskEnabled(obj, isEnabled or false)
    end
end
---设置模型renderingLayerMask
---@param obj GameObject
---@param layerMask int
function UIUtil.SetRenderingLayerMask(obj, layerMask)
    if obj then
        cs_ui_util.SetRenderingLayerMask(obj, layerMask or 0)
    end
end

---[Experiment]某个UObject(GameObject or Monobehavior)是否正在被动画控制
---@param obj UObject
---@return boolean
function UIUtil.IsAnimating(obj, handlerNames)
    if not obj then
        return false
    end
    local ret = cs_ui_util.IsAnimating(obj, handlerNames)
    return ret
end

---播放SoundFXHandler音效
---@param obj UObject
---@param keyOrIdx string|int 音效Key或序号
function UIUtil.PlaySoundFX(obj, keyOrIdx)
    if not obj or (not keyOrIdx) then
        return
    end
    if type(keyOrIdx) == "string" then
        if string.isnilorempty(keyOrIdx) then
            return
        else
            keyOrIdx = string.hash(keyOrIdx)
            SoundFXHandlerUtil.PlayHash(obj, keyOrIdx)
            return
        end
    end
    SoundFXHandlerUtil.Play(obj, keyOrIdx)
end

---停止SoundFXHandler音效
---@param obj UObject
---@param keyOrIdx string|int 音效Key或序号
function UIUtil.StopSoundFX(obj, keyOrIdx)
    if not obj or (not keyOrIdx) then
        return
    end
    if type(keyOrIdx) == "string" then
        if string.isnilorempty(keyOrIdx) then
            return
        else
            keyOrIdx = string.hash(keyOrIdx)
            SoundFXHandlerUtil.StopHash(obj, keyOrIdx)
            return
        end
    end
    SoundFXHandlerUtil.Stop(obj, keyOrIdx)
end

---手动停止X3Animator播放的动画状态
---@param obj UObject
function UIUtil.StopAnim(obj)
    cs_ui_util.StopAnim(obj)
end

---调用GridView/ListView/ExpandView/TabMenu的Load()
---@param obj UObject
---@param dataCount int 数据数量
---@param withLoadAnim boolean 是否伴随Load动画
function UIUtil.LoadGridListView(obj, dataCount, withLoadAnim)
    if dataCount == nil then
        dataCount = -1
    end
    if withLoadAnim == nil then
        withLoadAnim = true
    end
    cs_ui_util.LoadGridListView(obj, dataCount, withLoadAnim)
end

---@param obj UObject
---@param dataCount int 数量
---@param withAnim boolean 是否需要动画 默认是true
---@param refresh boolean 是否重新刷新 默认是true
function UIUtil.Load(obj, dataCount, withAnim, refresh)
    if withAnim == nil then
        withAnim = true
    end
    if refresh == nil then
        refresh = true
    end
    if obj ~= nil then
        cs_ui_util.Load(obj, dataCount, withAnim, refresh)
    end
end

---@param obj UObject
---@param dataCount int 数量
---@param withAnim boolean 是否需要动画 默认是true
---@param refresh boolean 是否重新刷新 默认是true
function UIUtil.LoadImmediately(obj, dataCount, withAnim, refresh)
    if withAnim == nil then
        withAnim = true
    end
    if refresh == nil then
        refresh = true
    end
    if obj ~= nil then
        cs_ui_util.LoadImmediately(obj, dataCount, withAnim, refresh)
    end
end

---调用GridView/ListView/ExpandView的Refresh()
---@param obj UObject
---@param cellIdx int Cell序号(0=第一个Cell，-1=刷新当前显示中的所有Cell)
function UIUtil.RefreshGridListView(obj, cellIdx)
    if cellIdx == nil then
        cellIdx = -1
    end
    cs_ui_util.RefreshGridListView(obj, cellIdx)
end

---设置是否可以点击
---@param obj UObject
---@param isEnable boolean
function UIUtil.SetTouchEnable(obj, isEnable)
    if obj ~= nil then
        cs_ui_util.SetTouchEnable(obj, isEnable or false)
    end
end

---@param sprite_name string
---@param obj GameObject
---@return Sprite
function UIUtil.GetSprite(sprite_name, obj)
    local sprite_path, atlas_path, is_path = GameUtil.GetSpriteAndAtlasNames(sprite_name)
    return cs_ui_util.GetSprite(sprite_path, atlas_path, is_path, obj)
end

---设置回调侦听RectTransform尺寸变化事件
---@param obj UObject
---@param onSizeChanged fun(sender:RectTransform, size:Vector2)
---@return bool
function UIUtil.SetSizeChangedListener(obj, onSizeChanged)
    if obj then
        cs_ui_util.SetSizeChangedListener(obj, onSizeChanged)
    end
end

---移除回调侦听RectTransform尺寸变化事件
---@param obj UObject
---@param onSizeChanged fun(sender:RectTransform, size:Vector2)
---@return bool
function UIUtil.RemoveSizeChangedListener(obj, onSizeChanged)
    if obj then
        cs_ui_util.RemoveSizeChangedListener(obj, onSizeChanged)
    end
end

---@param obj UObject
---@param progress float
function UIUtil.SetBarProgress(obj, progress)
    if obj then
        cs_ui_util.SetBarProgress(obj, progress)
    end
end

---@param eventType UIEventType
---@param keyOrObj string | UObject
---@param target GameObjectUtil
---@return int
function UIUtil.GetComponentID(keyOrObj, eventType, target)
    return UIEventDelegateHelper.GetComponentID(keyOrObj, eventType, target)
end

---@param ins GameObject
function UIUtil.ClearTextComp(ins)
    if ins then
        cs_ui_util.ClearUITextComp(ins)
    end
end

function UIUtil.SetGlobalEventDragClose(dragClose)
    cs_ui_util.SetGlobalEventDragClose(dragClose)
end
