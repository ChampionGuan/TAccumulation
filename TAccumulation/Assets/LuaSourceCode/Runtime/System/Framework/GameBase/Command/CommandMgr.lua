---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Tungway.
--- DateTime: 11/3/2020 4:11 PM
---
---@class CommandMgr
local CommandMgr = class("CommandMgr")

---@type string 协议Command自动注册
local AUTO_MSG_COMMAND_PATH = "Runtime.System.X3Game.Data.Command.Register.AutoGenerated.MsgCmdRegister"
---@type string 逻辑Command自动注册
local AUTO_LOGIC_COMMAND_PATH = "Runtime.System.X3Game.Data.Command.Register.AutoGenerated.LogicCmdRegister"
---@type string 额外Command注册
local EXTRA_COMMAND_PATH = "Runtime.System.X3Game.Data.Command.Register.ExtraCmdRegister"
---@type table<string, string> command映射
local commandDict = {}
---@type boolean 是否初始化
local inited = false
---@type table<string, SimpleCommand> command实例缓存，减少GC
local commandInsPool = {}
---@type fun 初始化函数
local Init
---@type fun<string>
local GetCommand

---发送一个Notification，触发一个Command执行
---@param notifyName string
---@return boolean true=成功执行一个Command，false=失败，没有任何Command执行
function CommandMgr.Notify(notifyName, ...)
    local cmd = GetCommand(notifyName)
    if cmd ~= nil then
        cmd:Execute(...)
        table.clear(cmd)
        cmd = nil
        return true
    else
        return false
    end
end

---Cmd是否已经注册过了
---param notifyName string
---@return boolean
function CommandMgr.CmdRegistered(notifyName)
    return commandDict[notifyName] and true or false
end

---获取一个Command
---@param notifyName string
---@return SimpleCommand
GetCommand = function(notifyName)
    local cmdFilePath = commandDict[notifyName]
    local cmd = nil
    if cmdFilePath ~= nil then
        cmd = commandInsPool[cmdFilePath]
        if cmd == nil then
            local cmdFile = require(cmdFilePath)
            if UNITY_EDITOR then
                if cmdFile == true then
                    Debug.LogError(string.concat("对应的cmd文件 return 错误，请检查文件，需要return一个table:", cmdFilePath))
                    return
                end
            end
            if cmdFile then
                cmd = cmdFile.new()
                commandInsPool[cmdFilePath] = cmd
                LuaUtil.UnLoadLua(cmdFilePath)
            else
                Debug.LogWarning(string.concat("未找到对应的Cmd文件:", cmdFilePath))
            end
        end
    end
    return cmd
end

---初始化逻辑
Init = function()
    if (inited) then
        return
    end

    local msgCommandDict = require(AUTO_MSG_COMMAND_PATH)
    for k, v in pairs(msgCommandDict) do
        commandDict[k] = v
    end
    LuaUtil.UnLoadLua(AUTO_MSG_COMMAND_PATH)

    local logicCommandDict = require(AUTO_LOGIC_COMMAND_PATH)
    for k, v in pairs(logicCommandDict) do
        commandDict[k] = v
    end
    LuaUtil.UnLoadLua(AUTO_LOGIC_COMMAND_PATH)

    local extraCommandDict = require(EXTRA_COMMAND_PATH)
    for k, v in pairs(extraCommandDict) do
        commandDict[k] = v
    end
    LuaUtil.UnLoadLua(EXTRA_COMMAND_PATH)
    table.clear(commandInsPool)
    inited = true
end

Init()

return CommandMgr