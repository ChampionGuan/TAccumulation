---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by canglan.
--- DateTime: 2021/11/18 11:04
---

local SlotBase = require("Runtime.Battle.Behavior.UI.Slot.SlotBase")

---@class AttackSlot:SlotBase
local AttackSlot = XECS.class("AttackSlot", SlotBase)
AttackSlot.Type = BattleSlotBehaviorType.AttackSlot

local PlayerBtnType = CS.X3Battle.PlayerBtnType

function AttackSlot:ctor()
    SlotBase.ctor(self)
    self._curFrame = 2

    ---@type UnityEngine.Transform
    self._iceBreak = nil
    ---@type PapeGames.X3UI.StyleEnum
    self._iceBreakStyleEnum = nil
    ---@type UnityEngine.ParticleSystem
    self._iceBreakClickEffect = nil
    ---@type UnityEngine.ParticleSystem
    self._iceBreakLoopEffect = nil
    self._disableIndex = 0
    self._activeIndex = 1
end

function AttackSlot:Awake()
    SlotBase.Awake(self)
    self._transform = self:GetComponent("OCX_AttackSkill", "Transform")
    self._headImgTrans = self:GetComponent("OCX_Attack_img_head", "Transform")
    self._effect = self:GetComponent("OCX_Attack_fx_ui_battle_click", "ParticleSystem")
    self._longPressOutEffect = self:GetComponent("OCX_Attack_fx_ui_battle_click_out", "ParticleSystem")
    self._longLoopEffect = self:GetComponent("OCX_Attack_fx_ui_battle_click_loop", "ParticleSystem")
    self._styleEnum = self._transform:GetComponent("StyleEnum")

    self._showNormalMessage = false
    self._finalConditionMessage = 0
    --破冰按钮
    self._iceBreak = self:GetComponent("OCX_btn_IceBreak","Transform")
    self._iceBreakStyleEnum = self:GetComponent("OCX_btn_IceBreak","StyleEnum")
    self._iceBreakClickEffect = self:GetComponent("OCX_IceBreak_clickgather", "ParticleSystem")
    self._iceBreakLoopEffect = self:GetComponent("OCX_IceBreak_click", "ParticleSystem")
    self._isFrozen = false

    self._btnType = PlayerBtnType.Attack

    self:SetActive(self._iceBreak,true)
    self:SetNodeVisible(self._iceBreak,false)
    self:Register()
end

function AttackSlot:Register()
    SlotBase.Register(self)
    --目前破冰逻辑用的是普攻
    self:AddButtonListener(self._iceBreak, nil, g_BattleClient:SafeHandler(self, self._OnPointerDown), g_BattleClient:SafeHandler(self, self._OnPointerUp))
    g_BattleClient:AddListener(EventType.PlayerFrozen, self, self.OnPlayerFrozenChange, "SlotBase.OnEnergyCostChange")
end

function AttackSlot:Unregister()
    g_BattleClient:RemoveListener(EventType.PlayerFrozen, self, self.OnPlayerFrozenChange)
    SlotBase.Unregister(self)
end

function AttackSlot:UpdateBtnState()
    if not self:UpdateSkillDisable() then
        self:_TransSlotState(self._activeIndex)
    end
end

--如果与其他显隐冲突的话需要做成stateEnum
function AttackSlot:OnPlayerFrozenChange(_,eventData)
    if eventData.effectType == 0 then
        if eventData.isEnterFrozen == true then
            self:SetNodeVisible(self._transform, false)
            self:SetNodeVisible(self._iceBreak, true)
            self._iceBreakStyleEnum.IsOn = false
            self._iceBreakLoopEffect:Play()--临时修复
            self._isFrozen = true
            UIUtil.PlaySoundFX(self._iceBreak, 0)
        else
            self:SetNodeVisible(self._transform, true)
            self:SetNodeVisible(self._iceBreak, false)
            self._iceBreakStyleEnum.IsOn = false
            self._isFrozen = false
            UIUtil.PlaySoundFX(self._iceBreak, 2)
        end
        return
    end
    if eventData.effectType == 1 then
        self._iceBreakStyleEnum.IsOn = true
    end
    if eventData.effectType == 2 then
        self._iceBreakClickEffect:Play()
    end

end

---@param state Int
function AttackSlot:TryPlaySkill(state)
    SlotBase.TryPlaySkill(self, state, false, false)
--    播放破冰音效
    if state == 1 and self._isFrozen == true then
        UIUtil.PlaySoundFX(self._iceBreak, 1)
    end
end

function AttackSlot:OnDestroy()
    self._iceBreak = nil
    self._iceBreakStyleEnum = nil
    self._iceBreakClickEffect = nil
    self._iceBreakLoopEffect = nil
    SlotBase.OnDestroy(self)
end

function AttackSlot:SetGoActive(active)
    self:SetNodeVisible(self._transform, active)
    if self._isFrozen == true then
        self:SetNodeVisible(self._iceBreak, active)
    end
end

return AttackSlot