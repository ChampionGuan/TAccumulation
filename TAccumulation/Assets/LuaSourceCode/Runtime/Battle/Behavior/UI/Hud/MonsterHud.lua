---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by liuwei
--- DateTime: 2021/11/10 11:00
---
---
local HudBase = require("Runtime.Battle.Behavior.UI.Hud.HudBase")
local BuffHud = require("Runtime.Battle.Behavior.UI.Hud.BuffHud")
local AttrType = CS.X3Battle.AttrType
local ActorLifeStateType = CS.X3Battle.ActorLifeStateType
local csGameObject = CS.UnityEngine.GameObject
local csBattleUtil = CS.X3Battle.BattleUtil
local csTime = CS.UnityEngine.Time

---@class MonsterHud:HudBase
local MonsterHud = XECS.class("MonsterHud", HudBase)
MonsterHud.Type = BattleHudBehaviorType.MonsterHud

---@class MonsterCore
---@field transName string
---@field trans UnityEngine.Transform
---@field cur UnityEngine.Transform

---@class MonsterCoreData
---@field core MonsterCore
---@field trans UnityEngine.Transform
---@field trans UnityEngine.Transform

---@class MonsterHudData
---@field role X3Battle.Actor
---@field config X3Battle.ActorCfg
---@field actorWeak X3Battle.ActorWeak
---@field attrOwner X3Battle.AttributeOwner
---@field weakMax float
---@field trans  UnityEngine.Transform
---@field obj UnityEngine.GameObject
---@field style PapeGames.X3UI.StyleEnum
---@field active bool
---@field hp HpInfo
---@field buffParent UnityEngine.Transform
---@field buffUiParent UnityEngine.Transform
---@field buffHud BuffHud

local cMaxCore = 4

function MonsterHud:ctor()
    HudBase.ctor(self)
    ---@type float @男女主爆发技或者怪物虚弱状态结束后，继续停止血条动画的时间
    self._hpPauseTime = nil
    ---@type MonsterHudData[]
    self._usedPool = nil
    ---@type MonsterHudData[]
    self._unusedPool = nil
    ---@type GameObject
    self._hudObj = nil
    ---@type float
    self._hpX = nil
    ---@type float
    self._hpWidth = nil
    ---@type int @ 每个小怪的最大芯核UI数
    self._coreMaxNum = 5
    self._coreIconOffset = 30

    self._newCanvas = nil

    self._csBattleUI = CS.X3Battle.Battle.Instance.ui
end

function MonsterHud:Awake()
    self._fabeTimeRatio = TbUtil.battleConsts.HPPreviewMonsterTimeRatio
    HudBase.Awake(self)

    local hudTrans = self:GetComponent("OCX_monsterHud", "Transform")
    hudTrans:GetOrAddComponent(typeof(CS.UnityEngine.CanvasGroup))
    if not GameObjectUtil.IsNull(hudTrans) then
        self._hudObj = hudTrans.gameObject
        self:SetNodeVisible(hudTrans, false)
    end

    self:SetActive("OCX_monster_hp_img_next", true)
    self:SetActive("OCX_monster_hp_text_num", true)

    ---self._transform = self:GetComponent("OCX_MonsterHudParent", "Transform")

    --移到单独的canvas下
    self._monsterHUDCanvas = CS.UnityEngine.GameObject.Find("MonsterHUDCanvas")
    if self._monsterHUDCanvas == nil then
        self._monsterHUDCanvas = GameObjectUtil.CreateGameObject("MonsterHUDCanvas")
    end
    self._transform = self._monsterHUDCanvas.transform
    self._prototype = self:GetComponent("OCX_MonsterHudParent", "Transform")
    self:SetNodeVisible(self._prototype, true)
    self._transform = GameObjectUtil.InstantiateGameObject(self._prototype.gameObject, self._transform.transform).transform
    self:SetNodeVisible(self._prototype, false)
    self._transform.position = Vector3(0, 0, 0)

    --修改Canvas所在gameObj到NoPPLayer
    self._monsterHUDCanvas.layer = 15

    self._monsterHUDCanvas.transform.localScale = Vector3(0.01, 0.01, 0.01)

    self.battleUI = self._battleUI

    local hpX, _, _ = self:GetLocalPositionXYZ("OCX_monster_hp_img_anchor")
    self._hpX = hpX
    local hpWidth, _ = self:GetSizeDeltaXY("OCX_monster_hp_img_cur")
    self._hpWidth = hpWidth

    self._usedPool = {}
    self._unusedPool = {}

    self:Register()
end

function MonsterHud:Start()
    HudBase.Start(self)
    self._hpPauseTime = 1
    self._paused = false
    local headHudCount = csBattleUtil.GetHeadHudCount()
    for _ = 1, headHudCount do
        local hudData = self:_CreateHudData()
        table.insert(self._unusedPool, hudData)
    end
    self._csBattleUI:SetNoPPEnable(true)
end

function MonsterHud:_OnUpdate()
    for _, v in ipairs(self._usedPool) do
        self:EvaluateFabe(v.hp, v.role)
        self:_UpdateAttr(v)
        self:_UpdateHudCore(v)
    end
    HudBase._OnUpdate(self)
end

---新增Hud数据
---@param role Role
function MonsterHud:_AddHudData(role)
    if role.config.HPVisible == 0 then
        return
    end
    if not self:_GetHudData(role) then
        local hudData = self:_TryGetHudData()
        hudData.active = true
        self:SetNodeVisible(hudData.trans, not self._battleUI.isArtEditor)
        hudData.role = role
        hudData.style.IsOn = not csBattleUtil.IsEnemyOfPlayer(role)
        hudData.config = role.config
        hudData.attrOwner = role.attributeOwner
        hudData.actorWeak = role.actorWeak
        hudData.weakMax = hudData.actorWeak.ShieldMax
        hudData.buffHud:Init(hudData.role)

        hudData.hp.maxNum = hudData.role.monsterCfg.HPNum
        if not hudData.hp.maxNum or hudData.hp.maxNum <= 0 then
            hudData.hp.maxNum = 1
        end
        if hudData.hp.maxNum == 1 then
            self:SetNodeVisible(hudData.curNextTrans, false)
            self:SetNodeVisible(hudData.hp.numTextTrans, false)
        else
            self:SetNodeVisible(hudData.hp.curNextTrans, true)
            self:SetNodeVisible(hudData.hp.numTextTrans, true)
        end

        for i = 1, hudData.weakMax do
            local coreData = hudData.core.corePool[i]
            self:SetNodeVisible(coreData.trans, true)
            coreData.transActive = false
            coreData.coreLightTrans = coreData.trans:Find("OCX_mostercorelight")
            coreData.lightActive = true
            --小怪复用时重新设置
            self:SetNodeVisible(coreData.coreLightTrans, true)
        end
        --self:SetNodeVisible(hudData.hp.trans, true)
        self:SetPerHpReciprocal(hudData.attrOwner, hudData.hp)
        self:SetHp(hudData.hp, true, hudData.attrOwner:GetAttrValue(AttrType.HP))
        self.battleUI._csUi:AddHud(hudData.trans, hudData.scaleTrans, role)
        if hudData.role.actorWeak.EquipWeak == 0 then
            self:SetNodeVisible(hudData.core.trans, false)
        else
            self:SetNodeVisible(hudData.core.trans, true)
            self:_UpdateHudCore(hudData)
        end
    end
end

---删除Hud数据
---@param role Role
function MonsterHud:_DelHudData(role)
    for k, v in ipairs(self._usedPool) do
        if v.role == role then
            self:_ResetHudData(v)
            table.remove(self._usedPool, k)
            table.insert(self._unusedPool, v)
            break
        end
    end
end

---重置Hud数据
---@param hudData MonsterHudData
function MonsterHud:_ResetHudData(hudData)
    if not GameObjectUtil.IsNull(hudData.trans) then
        self.battleUI._csUi:RemoveHud(hudData.trans)
    end
    hudData.role = nil
    hudData.config = nil
    hudData.attrOwner = nil
    hudData.actorWeak = nil
    hudData.active = false
    self:SetNodeVisible(hudData.trans, hudData.active)

    hudData.hp.ready = true
    hudData.hp.effect = false
    self:InitHp(hudData.hp)

    for i = 1,cMaxCore do
        local coreData = hudData.core.corePool[i]
        self:SetNodeVisible(coreData.trans, false)
        coreData.transActive = true
        coreData.lightActive = false
    end

end

---获取Hud数据
---@param role Role
---@return MonsterHudData
function MonsterHud:_GetHudData(role)
    for _, v in ipairs(self._usedPool) do
        if v.role == role then
            return v
        end
    end
end

function MonsterHud:_CreateHudData()
    if GameObjectUtil.IsNull(self._hudObj) then
        return
    end
    ---@type MonsterHudData
    local hudData = {}
    hudData.obj = GameObjectUtil.InstantiateGameObject(self._hudObj, self._transform)
    hudData.trans = hudData.obj.transform
    hudData.style = hudData.trans:GetComponent("StyleEnum")
    hudData.scaleTrans = hudData.trans:Find("monsterHud")
    --对每个血条添加独立的Canvas
    local newCanvas = hudData.scaleTrans.gameObject:GetOrAddComponent(typeof(CS.UnityEngine.Canvas))
    newCanvas.worldCamera = CS.PapeGames.X3.CameraUtility.MainCamera
    newCanvas.additionalShaderChannels = newCanvas.additionalShaderChannels|CS.UnityEngine.AdditionalCanvasShaderChannels.TexCoord1
    newCanvas.additionalShaderChannels = newCanvas.additionalShaderChannels|CS.UnityEngine.AdditionalCanvasShaderChannels.TexCoord2

    hudData.hp = {}
    hudData.hp.trans = hudData.scaleTrans:Find("monster_hp")
    if not GameObjectUtil.IsNull(hudData.hp.trans) then
        hudData.hp.obj = hudData.hp.trans.gameObject
        hudData.hp.fading = hudData.hp.trans:Find("X3Mask_Fading/OCX_monster_hp_img_fading")
        hudData.hp.cur = hudData.hp.trans:Find("OCX_monster_hp_img_cur")
        hudData.hp.anchorPicTrans = hudData.hp.trans:Find("Mask/OCX_monster_hp_img_anchor")
        hudData.hp.curNextTrans = hudData.hp.trans:Find("OCX_monster_hp_img_next")
        hudData.hp.numTextTrans = hudData.scaleTrans:Find("OCX_monster_hp_text_num")
        hudData.hp.numText = hudData.hp.numTextTrans:GetComponent("TextMeshProUGUI")
    end
    hudData.hp.x = self._hpX
    hudData.hp.width = self._hpWidth

    hudData.core = {}
    hudData.core.corePool = {}
    hudData.core.transName = "OCX_MonsterCore"
    hudData.core.coreBreakActive = false
    hudData.core.anchorPicTrans = self:GetComponent("OCX_mostercore_break_img_anchor", "Transform")
    local coreX, _, _ = self:GetLocalPositionXYZ(hudData.core.anchorPicTrans)
    hudData.core.x = coreX
    local coreWidth, _ = self:GetSizeDeltaXY("OCX_mostercore_break_img_cur")
    hudData.core.width = coreWidth
    if not GameObjectUtil.IsNull(hudData.hp.trans) then
        hudData.core.trans = hudData.hp.trans:Find(hudData.core.transName)
        if not GameObjectUtil.IsNull(hudData.core.trans) then
            hudData.core.coreTrans = hudData.hp.trans:Find("OCX_mostercore_bg")
            self:SetNodeVisible(hudData.core.coreTrans, false)
            hudData.core.coreBreak = hudData.hp.trans:Find("OCX_mostercore_break")
            if not GameObjectUtil.IsNull(hudData.core.coreBreak) then
                hudData.core.coreBreakCur = hudData.core.coreBreak:Find("OCX_mostercore_break_img_cur")
            end
        end
    end

    --预创建core最大值4
    for i = 1,cMaxCore do
        local coreData = {}
        local coreObj = GameObjectUtil.InstantiateGameObject(hudData.core.coreTrans.gameObject, hudData.core.trans)
        coreData.obj = coreObj
        coreData.trans = coreObj.transform
        self:SetNodeVisible(coreObj.trans, false)
        coreData.transActive = true
        coreData.coreLightTrans = coreData.trans:Find("OCX_mostercorelight")
        coreData.lightActive = false
        table.insert(hudData.core.corePool, coreData)
    end

    self:SetNodeVisible(hudData.core.coreBreak, false)

    if not GameObjectUtil.IsNull(hudData.scaleTrans) then
        hudData.buffParent = hudData.scaleTrans:Find("monster_pnl_buff")
        hudData.buffUiParent = hudData.scaleTrans:Find("monster_pos_buff")
    end
    hudData.buffHud = self:AddBehavior(BuffHud.new())
    hudData.buffHud:SetParent(hudData.buffParent)
    hudData.buffHud:SetLayer(15)
    self:SetNodeVisible(hudData.trans, true)
    --最后再设置layer
    hudData.scaleTrans.gameObject.layer = 15
    return hudData
end

function MonsterHud:SetUnusedPoolHide()
    for _, hudData in ipairs(self._unusedPool) do
        self:SetNodeVisible(hudData.trans, false)
    end
end

---创建Hud数据
---@return MonsterHudData
function MonsterHud:_TryGetHudData()
    for k, v in ipairs(self._unusedPool) do
        self:_ResetHudData(v)
        table.remove(self._unusedPool, k)
        table.insert(self._usedPool, v)
        return v
    end
    local hudData = self:_CreateHudData()
    self:_ResetHudData(hudData)
    table.insert(self._usedPool, hudData)
    return hudData
end

---@param state bool
function MonsterHud:SetGoActiveByInsId(insId, state)
    for _, v in ipairs(self._usedPool) do
        if v.role.insID == insId then
            v.active = state
            self:SetNodeVisible(v.trans, v.active)
            return
        end
    end
end

---@param state bool
function MonsterHud:SetGoActive(state)
    for _, v in ipairs(self._usedPool) do
        v.active = state
        self:SetNodeVisible(v.trans, v.active)
    end
end

function MonsterHud:PauseHudAnimation(paused)
    if self._paused == paused then
        return
    end
    self._paused = paused
    for _, hudData in ipairs(self._usedPool) do
        hudData.hp.paused = self._paused
        if not self._paused then
            hudData.hp.endStopHpAnimTime = csTime.unscaledTime + self._hpPauseTime
        end
    end
end

---@param hudData MonsterHudData
function MonsterHud:_UpdateHudCore(hudData)
    if hudData.role.actorWeak.EquipWeak == 0 then
        return
    end
    local currCore = hudData.attrOwner:GetAttrValue(AttrType.WeakPoint)
    for i = 1, hudData.weakMax do
        --排序是从左往右
        local coreData = hudData.core.corePool[i]
        if coreData ~= nil then
            if not coreData.transActive and currCore ~= 0 then
                self:SetNodeVisible(coreData.trans, true)
                coreData.transActive = true
            end
            if i > currCore then
                if coreData.lightActive then
                    self:SetNodeVisible(coreData.coreLightTrans, false)
                    coreData.lightActive = false
                    self:PlayCustomMotion(coreData.trans, 1)
                end
            else
                if not coreData.lightActive then
                    self:SetNodeVisible(coreData.coreLightTrans, true)
                    self:PlayCustomMotion(coreData.trans, 0)
                    coreData.lightActive = true
                end
            end
        end
    end
end

function MonsterHud:_SetLeftWeakTime(hudData)
    if hudData.actorWeak.weak then
        if not hudData.core.coreBreakActive then
            hudData.core.coreBreakActive = true
            self:SetNodeVisible(hudData.core.coreBreak, true)
            ---临时写法，待UE资源补齐
            self:SetNodeVisible(hudData.core.trans, false)
            ---self:PlayMotion(hudData.core.trans, 0)
        end

        if hudData.actorWeak.recoverTotalTime > 0 then
            self:SetBarProgress(hudData.core.coreBreakCur, hudData.actorWeak.recoverTime / hudData.actorWeak.recoverTotalTime)
            local anchorX = hudData.core.x + hudData.core.width * (hudData.actorWeak.recoverTime / hudData.actorWeak.recoverTotalTime)
            csBattleUtil.SetLocalPosX(hudData.core.anchorPicTrans, anchorX)
        else
            Debug.LogError("hudData.recoverTotalTime <= 0")
        end

    else
        if hudData.core.coreBreakActive then
            hudData.core.coreBreakActive = false
            self:SetNodeVisible(hudData.core.coreBreak, false)
            ---临时写法，待UE资源补齐
            self:SetNodeVisible(hudData.core.trans, true)
            ---self:PlayMotion(hudData.core.trans, 1)
        end
    end
end

---获得Hud数据对应role的虚弱状态
---@param hudData MonsterHudData
function MonsterHud:_GetWeak(hudData)
    if hudData.config.DisableWeakUI then
        return false
    end
    if hudData.actorWeak.weak then
        return true
    end
    return false
end

function MonsterHud:Register()
    HudBase.Register(self)
    g_BattleClient:AddListener(EventType.ActorHealthChange, self, self._OnActorHealthChange, "MonsterHud._OnActorHealthChange")
    g_BattleClient:AddListener(EventType.MaxHpChange, self, self._OnMaxHpChange, "MonsterHud._OnMaxHpChange")
    g_BattleClient:AddListener(EventType.WeakFull, self, self._OnWeakFull, "MonsterHud._OnWeakFull")
    g_BattleClient:AddListener(EventType.CoreMaxChange, self, self._OnCoreMaxChange, "MonsterHud._OnCoreMaxChange")
end

function MonsterHud:_UpdateAttr(hudData)
    self:_SetLeftWeakTime(hudData)
end

---@param data EventWeakFull
function MonsterHud:_OnWeakFull(_, data)
    local hudData = self:_GetHudData(data.actor)
    if not hudData then
        return
    end
    local sound = data.WeakSound
    if sound and sound ~= "" then
        GameSoundMgr.PlaySound(sound)
    end
end

---@param actor X3Battle.Actor
function MonsterHud:ActorChange(actor, state)
    if self._battleUI.isArtEditor then
        return
    end
    if not actor:IsHeadHud() then
        return
    end
    if state == ActorLifeStateType.Born then
        self:_AddHudData(actor)
    elseif state == ActorLifeStateType.Dead then
        self:_DelHudData(actor)
    end
    self:UpdateNoPPEnable()
end

function MonsterHud:UpdateNoPPEnable()
    --有血条就true，没血条就false
    if #self._usedPool > 0 then
        self._csBattleUI:SetNoPPEnable(true)
    else
        self._csBattleUI:SetNoPPEnable(false)
    end
end

function MonsterHud:_OnMaxHpChange(_, data)
    local actor = data.actor
    local hudData = self:_GetHudData(actor)
    if hudData then
        self:SetPerHpReciprocal(hudData.attrOwner, hudData.hp)
        self:SetHp(hudData.hp, false, hudData.hp.curHp)
    end
end

function MonsterHud:_OnActorHealthChange(_, data)
    local actor = data.actor
    local hudData = self:_GetHudData(actor)
    if hudData then
        Profiler.BeginSample("MonsterHud:SetHp")
        self:SetHp(hudData.hp, false, data.currentValue)
        Profiler.EndSample("MonsterHud:SetHp")
    end
end

---美术自定义战斗下隐藏hud数据集合对应的UI
function MonsterHud:SetArtEditorState()
    self:SetGoActive(false)
    self._requiredUpdate = false
end

function MonsterHud:Unregister()
    g_BattleClient:RemoveListener(EventType.ActorHealthChange, self, self._OnActorHealthChange)
    g_BattleClient:RemoveListener(EventType.MaxHpChange, self, self._OnMaxHpChange)
    g_BattleClient:RemoveListener(EventType.WeakFull, self, self._OnWeakFull)
    g_BattleClient:RemoveListener(EventType.CoreMaxChange, self, self._OnCoreMaxChange)
    HudBase.Unregister(self)
end

function MonsterHud:OnDestroy()
    self:Unregister()
    for _, v in ipairs(self._usedPool) do
        if not GameObjectUtil.IsNull(v.trans) then
            self.battleUI._csUi:RemoveHud(v.trans)
        end
        csGameObject.Destroy(v.obj)
        v.obj = nil
    end
    for _, v in ipairs(self._unusedPool) do
        csGameObject.Destroy(v.obj)
        v.obj = nil
    end
    csGameObject.Destroy(self._monsterHUDCanvas)
    self._monsterHUDCanvas = nil
    self.battleUI = nil
    self._usedPool = nil
    self._unusedPool = nil
    self._hpPauseTime = nil
    self._hudObj = nil
    self._hpX = nil
    self._hpWidth = nil
    self._postUpdateDelegate = nil
    self._csBattleUI:SetNoPPEnable(false)
    --怪物血条被单独拿出来了，现在是动态创建的了
    ---csGameObject.Destroy(self._transform.gameObject)
    HudBase.OnDestroy(self)
end

function MonsterHud:_OnCoreMaxChange(_, data)
    local hudData = self:_GetHudData(data.actor)
    if not hudData then
        return
    end
    --最大值增加了
    if hudData.actorWeak.ShieldMax > hudData.weakMax then
        for i = hudData.weakMax + 1, hudData.actorWeak.ShieldMax do
            local coreData = hudData.core.corePool[i]
            self:SetNodeVisible(coreData.trans, true)
            coreData.transActive = true
            coreData.coreLightTrans = coreData.trans:Find("OCX_mostercorelight")
            coreData.lightActive = false
        end
    else
        --最大值减小了
        for i = hudData.weakMax, hudData.actorWeak.ShieldMax + 1, -1 do
            local coreData = hudData.core.corePool[i]
            self:SetNodeVisible(coreData.trans, false)
            coreData.transActive = false
            coreData.lightActive = false
        end
    end
    hudData.weakMax = hudData.actorWeak.ShieldMax

end

--TODO:临时代码，记得删除
---function MonsterHud:SetNodeVisible(node, visible)
---    self:SetActive(node,visible)
---end

return MonsterHud