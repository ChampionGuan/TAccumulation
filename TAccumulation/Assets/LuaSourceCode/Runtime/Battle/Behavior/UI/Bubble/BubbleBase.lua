---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by canglan.
--- DateTime: 2021/11/18 11:04
---

---@class BubbleHudData
---@field width float
---@field aimFlag bool
---@field cacheAimFlag bool
---@field second float
---@field start float

local UIBehaviorBase = require("Runtime.Battle.Behavior.UI.UIBehaviorBase")

---@class BubbleBase:UIBehaviorBase
local BubbleBase = XECS.class("BubbleBase", UIBehaviorBase)
local csTime = CS.UnityEngine.Time
local csBattleUtil = CS.X3Battle.BattleUtil

function BubbleBase:ctor()
    UIBehaviorBase.ctor(self)
    ---@type string
    self._messageName = nil
    ---@type string
    self._bubbleName = nil
    ---@type string
    self._contentName = nil
    ---@type X3Battle.Actor
    self._actor = nil
    ---@type Transform
    self._actorTrans = nil
    ---@type Transform
    self._dialogTrans = nil
    ---@type float
    self._fadeTime = nil
    ---@type BubbleHudData
    self._bubbleHudData = nil
end

function BubbleBase:Awake()
    UIBehaviorBase.Awake(self)

    self._bubbleHudData = {}
    local x,_ = self:GetSizeDeltaXY(self._bubbleTrans)
    self._bubbleHudData.width = x
    self._bubbleHudData.aimFlag = false
    self._bubbleHudData.cacheAimFlag = false
    self._bubbleHudData.second = 0

    self._rootObj = UIMgr.GetUIRoot().gameObject

    self._messageTrans = self:GetComponent(self._messageName, "Transform")
    self._bubbleTrans = self:GetComponent(self._bubbleName, "Transform")
    self._contentTrans = self:GetComponent(self._contentName, "Transform")
    self:SetNodeVisible(self._messageTrans, false)

    self:Register()
end

function BubbleBase:Start()
    UIBehaviorBase.Start(self)
    self._fadeTime = 0.5
end

function BubbleBase:_OnUpdate()
    self:_UpdatePosition()
end

---@param
function BubbleBase:SetAimFlag(active)
    if self._bubbleHudData.cacheAimFlag then
        self._bubbleHudData.aimFlag = active
        self:SetNodeVisible(self._messageTrans, active)
    end
end

function BubbleBase:SetCacheAimFlag(active)
    self._bubbleHudData.cacheAimFlag = active
end

function BubbleBase:_UpdatePosition()
    if not self._actor then
        return
    end
    if not self._bubbleHudData.aimFlag then
        return
    end
    local curTime = csTime.unscaledTime
    if curTime > self._bubbleHudData.second then
        self._bubbleHudData.aimFlag = false
        self._bubbleHudData.cacheAimFlag = false
        self:SetNodeVisible(self._messageTrans, false)
        return
    end
    local bubbleInTime = curTime - self._bubbleHudData.start
    local bubbleOutTime = self._bubbleHudData.second - curTime
    if bubbleInTime < self._fadeTime then
        self:SetAlpha(self._messageTrans, bubbleInTime / self._fadeTime)
    elseif bubbleOutTime < self._fadeTime then
        self:SetAlpha(self._messageTrans, bubbleOutTime / self._fadeTime)
    end
    csBattleUtil.UpdateBubble(self._messageTrans, self._bubbleTrans, self._bubbleHudData.width, self._actorTrans, self._dialogTrans, self._battleUI.rootTrans, 1, 1.5)
end

---@param data EventDialogueBubble
function BubbleBase:_ResetData(data)
    self._bubbleHudData.start = csTime.unscaledTime
    self._bubbleHudData.second = self._bubbleHudData.start + data.showTime
    self._bubbleHudData.aimFlag = true
    self._bubbleHudData.cacheAimFlag = true
    self:SetText(self._contentTrans, UITextHelper.GetUIText(data.textID))
    ---UIUtil.ForceLayoutRebuild(self._bubbleHudData.obj, true)
    local x,_ = self:GetSizeDeltaXY(self._bubbleTrans)
    self._bubbleHudData.width = x
    self:SetNodeVisible(self._messageTrans, true)
end

function BubbleBase:Register()
    UIBehaviorBase.Register(self)
    g_BattleClient:AddListener(EventType.DialogueBubble, self, self._OnActorBubble, "BubbleBase._OnActorBubble")
end

---@param data EventDialogueBubble
function BubbleBase:_OnActorBubble(_, data)
    if self:PowerSkillIsCast() then
        return
    end
    if data.actor ~= self._actor then
        return
    end
    local word = UITextHelper.GetUIText(data.textID)
    if not word or word == "" or word == "0" then
        return
    end
    self:_ResetData(data)
    self:_UpdatePosition()
end

function BubbleBase:Unregister()
    g_BattleClient:RemoveListener(EventType.DialogueBubble, self, self._OnActorBubble)
    UIBehaviorBase.Unregister(self)
end

function BubbleBase:OnDestroy()
    self:Unregister()
    self._messageName = nil
    self._bubbleName = nil
    self._contentName = nil
    self._messageTrans = nil
    self._bubbleTrans = nil
    self._contentTrans = nil
    self._actor = nil
    self._actorTrans = nil
    self._dialogTrans = nil
    self._fadeTime = nil
    self._bubbleHudData = nil
    self._rootObj = nil
    UIBehaviorBase.OnDestroy(self)
end

return BubbleBase