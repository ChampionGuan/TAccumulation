---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by canglan.
--- DateTime: 2021/11/18 11:04
---

local Behavior = require("Runtime.Battle.Common.Behavior")
local MonsterHud = require("Runtime.Battle.Behavior.UI.Hud.MonsterHud")
local BossHud = require("Runtime.Battle.Behavior.UI.Hud.BossHud")
local FemaleHud = require("Runtime.Battle.Behavior.UI.Hud.FemaleHud")
local MaleHud = require("Runtime.Battle.Behavior.UI.Hud.MaleHud")

---@class HudMgr:Behavior
local HudMgr = XECS.class("HudMgr", Behavior)
HudMgr.Type = BattleUIBehaviorType.HudMgr

function HudMgr:ctor()
    Behavior.ctor(self)
    ---@type BattleUI
    self.battleUI = nil
    ---@type FemaleHud
    self._femaleHud = nil
    ---@type MaleHud
    self._maleHud = nil
    ---@type MonsterHud
    self._monsterHud = nil
    ---@type BossHud
    self._bossHud = nil
end

function HudMgr:Awake()
    self.battleUI = self.owner

    self._femaleHud = self:AddBehavior(FemaleHud.new())
    self._maleHud = self:AddBehavior(MaleHud.new())
    self._monsterHud = self:AddBehavior(MonsterHud.new())
    self._bossHud = self:AddBehavior(BossHud.new())
    HudMgr.super.Awake(self)
end

---@param active bool
function HudMgr:SetEnergyGoActive(active)
    self._femaleHud:SetEnergyUI(active)
end

---@param active bool
function HudMgr:SetLeftGoActive(active)
    self._femaleHud:SetGoActive(active)
    self._femaleHud:SetEnergyUI(active)
    self._maleHud:SetGoActive(active)
end

---@param active bool
function HudMgr:SetMaleHudGoActive(active)
    self._maleHud:SetGoActive(active)
end


---@param active bool
function HudMgr:SetRightGoActive(active)
    self._monsterHud:SetGoActive(active)
    self._bossHud:SetGoActive(active)
end

function HudMgr:SetEnemyById(insId, active)
    self._monsterHud:SetGoActiveByInsId(insId, active)
    self._bossHud:SetGoActiveByInsId(insId, active)
end

function HudMgr:LeftIsNearDead()
    local state = self._femaleHud:IsNearDead()--- or self._maleHud:IsNearDead()
    return state
end

function HudMgr:ActorChange(actor, state)
    self._femaleHud:ActorChange(actor, state)
    self._maleHud:ActorChange(actor, state)
    self._monsterHud:ActorChange(actor, state)
    self._bossHud:ActorChange(actor, state)
end

function HudMgr:HideAllMonsterHuds()
    self._monsterHud:SetUnusedPoolHide()
end

function HudMgr:PauseHudAnimation(paused)
    self._monsterHud:PauseHudAnimation(paused)
    self._bossHud:PauseHudAnimation(paused)
end

function HudMgr:SetArtEditorState()
    self._femaleHud:SetArtEditorState()
    self._maleHud:SetArtEditorState()
    self._monsterHud:SetArtEditorState()
    self._bossHud:SetArtEditorState()
end

function HudMgr:OnDestroy()
    self.battleUI = nil
    self._femaleHud = nil
    self._maleHud = nil
    self._monsterHud = nil
    self._bossHud = nil
    Behavior.OnDestroy(self)
end

return HudMgr