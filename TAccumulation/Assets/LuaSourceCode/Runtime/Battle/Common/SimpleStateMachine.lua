---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by chaoguan.
--- DateTime: 2024/1/30 18:14
---

---@class SimpleStateMachine
---@field currState BaseState
local SimpleStateMachine = XECS.class("SimpleStateMachine")

function SimpleStateMachine:ctor()
end

---@param newState BaseState
function SimpleStateMachine:Switch(newState, ...)
    if self.__switchingFlag then
        self.__switchingFlag = 2
        self.__pendingState = newState
        return
    end

    local prevState = self.currState
    if prevState and not prevState:CanExit(newState) then
        return
    end

    if newState and not newState:CanEnter(prevState) then
        return
    end

    self.__switchingFlag = 1
    if prevState then
        prevState:OnExit(newState)
        prevState.stateMachine = nil
    end

    self.currState = newState
    if newState then
        newState.stateMachine = self
        newState:OnEnter(prevState, ...)
    end

    if self.__switchingFlag == 2 then
        local nextState = self.__pendingState
        self.__switchingFlag = nil
        self.__pendingState = nil
        self:Switch(nextState)
    else
        self.__switchingFlag = nil
    end
end

function SimpleStateMachine:Update()
    if self.currState then
        self.currState:OnUpdate()
    end
end

---@class BaseState
---@field context any
---@field stateMachine SimpleStateMachine
local BaseState = XECS.class("BaseState")

function BaseState:ctor(context)
    self.context = context
end

function BaseState:CanEnter(prevState)
    return true
end

function BaseState:OnEnter(prevState, ...)
end

function BaseState:CanExit(nextState)
    return true
end

function BaseState:OnExit(nextState)
end

function BaseState:OnUpdate()
end

return { SimpleStateMachine = SimpleStateMachine, BaseState = BaseState }