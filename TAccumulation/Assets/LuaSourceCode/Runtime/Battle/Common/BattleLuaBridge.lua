---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by zhaoguan.
--- DateTime: 2022/6/11 15:45
---

require("Runtime.Battle.BattleLauncher")
local BattleServer = require("Runtime.Battle.Common.BattleServerProxy")
local BattleClient = require("Runtime.Battle.BattleClient")
local CharacterMgr = require("Runtime.System.X3Game.Modules.Character.CharacterMgr")
local CharacterUtil = require("Runtime.System.X3Game.Modules.Character.CharacterUtil")
local csAttrType = CS.X3Battle.AttrType
local CSRes = CS.PapeGames.X3.Res
local CSPreloadBatchMgr = CS.X3Game.PreloadBatchMgr
local GameObject = CS.UnityEngine.GameObject
local RoleType = CS.X3Battle.RoleType

--- C#端引导事件触发的方法
local _guideEventCallback = nil

---@class BattleCSharpCallLua
---@field battle Lua.BattleClient
local BattleLuaBridge = XECS.class("BattleLuaBridge")
BattleLuaBridge.Instance = BattleLuaBridge
BattleLuaBridge.server = BattleServer

function BattleLuaBridge:OnGameReboot()
end

function BattleLuaBridge:CreateBattle()
    self.battle = BattleClient.new()
    return self.battle
end

function BattleLuaBridge:DestroyBattle()
    self.battle = nil
end

---触发事件
---@param eventType EventType
---@param eventArg table 事件参数
function BattleLuaBridge:FireEvent(eventType, eventArg)
    Profiler.BeginSample("BattleLuaBridge:FireEvent()")
    self.battle.eventMgr:FireEvent(eventType, eventArg)
    Profiler.EndSample("BattleLuaBridge:FireEvent()")
end

---优化后，统一触发多个事件
---@param eventTypeList list<EventType>
---@param eventList list<ECEventDataBase> 事件参数
function BattleLuaBridge:FireEventList(eventTypeList, eventList)
    Profiler.BeginSample("BattleLuaBridge:FireEventList()")
    local count = eventTypeList.Count
    for i = 0, count - 1 do
        self.battle.eventMgr:FireEvent(eventTypeList[i], eventList[i])
    end
    Profiler.EndSample("BattleLuaBridge:FireEventList()")
end

function BattleLuaBridge:SetSkillSlot(actor, btnType, skillSlot)
    g_BattleClient.ui:SetSkillSlot(actor, btnType, skillSlot)
end

---打开战斗结算面板，由关卡flow发起
function BattleLuaBridge:ShowStatisticsUI()
    g_battleLauncher.settlementState:ShowStatisticsUI()
end

---手动踢回登录界面
function BattleLuaBridge:DoDisconnection()
    GameStateMgr.Switch(GameState.Logout)
end

---获取套装对应的裸模和部件列表
function BattleLuaBridge:GetCharacterBaseKey2PartKeys(scoreID, suitID, brokenSuit)
    ---@type FashionBLL
    local bll = BllMgr.GetFashionBLL()
    local baseKey, partKeys, _ = nil, nil, nil
    if brokenSuit then
        baseKey, partKeys, _, _ = bll:GetDirPartParamWithScoreID2FormationSuitID(scoreID, suitID, true)
    else
        baseKey, partKeys, _, _ = bll:GetPartParamWithScoreID2FormationSuitID(scoreID, suitID, true)
    end
    if scoreID == 0 then
        local usedHair = BllMgr.GetFaceBLL():GetHair(suitID)
        partKeys = CharacterUtil.ReplaceParts(partKeys, { usedHair })
    end
    return baseKey, partKeys
end

---获取套装爆衫皮肤对应的裸模和部件列表
---@param scoreID int
---@param suitID int
function BattleLuaBridge:GetCharacterBaseKey2DirPartKeys(scoreID, suitID)
    ---@type FashionBLL
    local bll = BllMgr.GetFashionBLL()
    local baseRoleKey, partRoleKeys, _, _ = bll:GetDirPartParamWithScoreID2FormationSuitID(scoreID, suitID, true)
    if scoreID == 0 then
        local usedHair = BllMgr.GetFaceBLL():GetHair(suitID)
        partKeys = CharacterUtil.ReplaceParts(partKeys, { usedHair })
    end
    return baseKey, partKeys
end

function BattleLuaBridge:UnloadAsset(levelID, fullPath)
    CSPreloadBatchMgr.UnloadAsset(PreloadBatchType.Battle, levelID, fullPath);
end

function BattleLuaBridge:SetGlobalLOD(lodLevel)
    CharacterMgr.SetGlobalLOD(lodLevel)
end

function BattleLuaBridge:GetUIText(textID)
    return UITextHelper.GetUIText(textID)
end

function BattleLuaBridge:GetInvalidText()
    return UITextHelper.GetUIText(UITextConst.UI_TEXT_20001)
end

function BattleLuaBridge:ActiveScoreVoices(dialogueIds, boyScoreID)
    local scoreData = BllMgr.GetScoreBLL():GetScoreData(boyScoreID)
    if scoreData ~= nil then
        BllMgr.GetLovePointBLL():Send_ActiveVoicesRequest(boyScoreID, dialogueIds)
    end
end

function BattleLuaBridge:ScreenFabe(isWhite, isIn, onCompleteAction)
    CS.X3Battle.BattleResMgr.isDynamicBottomLoadErring = false
    local onComplete
    if isIn then
        onComplete = function()
            if onCompleteAction ~= nil then
                onCompleteAction()
            end
        end
    else
        onComplete = function()
            if onCompleteAction ~= nil then
                onCompleteAction()
            end
        end
    end
    if isWhite then
        if isIn then
            UICommonUtil.WhiteScreenIn(onComplete)
        else
            UICommonUtil.WhiteScreenOut(onComplete)
        end
    else
        if isIn then
            UICommonUtil.BlackScreenIn(onComplete)
        else
            UICommonUtil.BlackScreenOut(onComplete)
        end
    end
    CS.X3Battle.BattleResMgr.isDynamicBottomLoadErring = true
end

function BattleLuaBridge:CloseScreenFabe()
    UICommonUtil.CloseScreen()
end

---根据lod和PartKey获取对应的AssetPath
function BattleLuaBridge:GetCharacterPartAssetPath(partKey, lod)
    return CharacterUtil.GetPartAssetPath(partKey, lod)
end

---获取裸模对应的AssetPath
function BattleLuaBridge:GetCharacterBaseAssetPath(baseKey)
    return CharacterUtil.GetRoleBaseAssetPath(baseKey)
end

function BattleLuaBridge:GetWeaponPartIDs(weaponID)
    local partCfgIDs
    if type(weaponID) == "number" then
        local cfg = LuaCfgMgr.Get("MyWeaponSkin", weaponID)
        if not cfg then
            Debug.LogWarningFormat("武器ID：%s,部件数据不存在", weaponID)
        else
            partCfgIDs = cfg.BattlePartConfigID
        end
    end
    return partCfgIDs
end

function BattleLuaBridge:GetFemaleUltraSuitID(girlSuitID, boySuitID, boyScoreID)
    local cfg = LuaCfgMgr.Get("FormationSuit", girlSuitID)

    -- 如果查找到的ScoreID与当前战场男主皮肤对应的ScoreID一致, 那么就使用当前女主所穿戴的皮肤
    if cfg and cfg.CoupleSCoreID == boyScoreID then
        return girlSuitID
    end

    -- 否则：查看当前男主SuitID对应的情侣装SuitID，将女主当前SuitID替换成配置的情侣装SuitID
    local boyCfg = LuaCfgMgr.Get("FormationSuit", boySuitID)
    if boyCfg and boyCfg.CoupleSuitID > 0 then
        return boyCfg.CoupleSuitID
    end

    return girlSuitID
end

function BattleLuaBridge:GetAttrMin()
    local attr_cfg = LuaCfgMgr.GetAll("Property")
    local attr_types, attr_values = {}, {}
    ---@param cfg cfg.Property
    for _, cfg in pairs(attr_cfg) do
        table.insert(attr_types, csAttrType.__CastFrom(cfg.Id))
        table.insert(attr_values, cfg.MinValue)
    end
    return attr_types, attr_values
end

function BattleLuaBridge:SendGuideEvent(eventName)
    if not _guideEventCallback then
        return
    end

    -- DONE: 每次战斗发送引导事件前增加一个保底发送的清理引导事件.
    BattleUtil.SendCleanGuideEvent()

    -- DONE: 已经保底发送过CleanGuide了, 可以不用在发送了.
    if eventName == NoviceGuideDefine.Event.CLEAN_GUIDE then
        return
    end

    local msgId = X3_CFG_CONST[eventName]
    if msgId then
        EventMgr.Dispatch(Const.Event.CLIENT_TO_GUIDE, msgId)
    else
        EventMgr.Dispatch(Const.Event.CLIENT_TO_GUIDE, eventName)
    end
end

function BattleLuaBridge:TryRegisterGuideEvent(eventCallback)
    if _guideEventCallback then
        ---Debug.LogErrorFormat("FSM注册新手事件：注册失败，原因：事件已经注册过了，请移除后再注册！")
        return
    end
    _guideEventCallback = eventCallback;
    EventMgr.AddListener(Const.Event.GUIDE_TO_CLIENT, BattleLuaBridge.OnGuideEvent, self)
end

function BattleLuaBridge:TryUnregisterGuideEvent()
    if not _guideEventCallback then
        return
    end

    EventMgr.RemoveListener(Const.Event.GUIDE_TO_CLIENT, BattleLuaBridge.OnGuideEvent, self)
    _guideEventCallback = nil
    self:FireEvent(EventType.GuideEnd)
end

function BattleLuaBridge:OnGuideEvent(eventName)
    if not eventName then
        return
    end

    if not string.find(eventName, BattleConst.GuideBattleEventPrefix, 1, true) then
        return
    end

    _guideEventCallback(eventName)
end

function BattleLuaBridge:GetScenePath(sceneName)
    if sceneName == nil then
        Debug.LogError("请传入正确的场景名称，不允许场景名称为nil！！")
        return
    end
    ---@type cfg.SceneInfo
    local sceneInfo = LuaCfgMgr.Get("SceneInfo", sceneName)
    if sceneInfo then
        return sceneInfo.ScenePath
    end
    Debug.LogErrorFormat("从 SceneInfo 中获取名为：%s 的ScenePath失败：", sceneName)
end

function BattleLuaBridge:GetSpriteAndAtlasName(spriteName)
    local sprite_name, atlas_name, is_path = GameUtil.GetSpriteAndAtlasNames(spriteName)
    if is_path then
        return { sprite_name, is_path }
    else
        return { atlas_name, is_path }
    end
end

function BattleLuaBridge:GetSuitHeadIconName(suitId)
    local cfg_FormationSuit = LuaCfgMgr.Get("FormationSuit", suitId)
    if cfg_FormationSuit then
        return cfg_FormationSuit.HeadIcon
    else
        return ""
    end
end

function BattleLuaBridge:GetSuitBodyIconName(suitId)
    local cfg_FormationSuit = LuaCfgMgr.Get("FormationSuit", suitId)
    if cfg_FormationSuit then
        return cfg_FormationSuit.BattleRoleIconBanner
    else
        return ""
    end
end

---更新槽位按钮状态
function BattleLuaBridge:UpdateBtnState()
    g_BattleClient.ui:UpdateBtnState()
end

---设置主UI显示模式
function BattleLuaBridge:SetBattleWndMode(wndMode)
    g_BattleClient.ui:SetUIMode(wndMode)
end

function BattleLuaBridge:SetAffixVisible(visible, id)
    g_BattleClient.ui:SetAffixVisible(visible, id)
end

function BattleLuaBridge:SetAffixTimeColor(type)
    g_BattleClient.ui:SetAffixTimeColor(type)
end

function BattleLuaBridge:AddAmmunition(count)
    g_BattleClient.ui:AddAmmunition(count)
end

function BattleLuaBridge:SetUiTipVisible(visible, id)
    local guideConfig = BattleUtil.GetBattleGuide(id)
    if not guideConfig then
        return
    end
    if visible then
        if UIMgr.IsOpened("BattleTipsWnd") then
            self:FireEvent(EventType.UpdateGuideTip, guideConfig)
        else
            UIMgr.Open("BattleTipsWnd", guideConfig)
        end
    else
        if UIMgr.IsOpened("BattleTipsWnd") then
            self:FireEvent(EventType.HideGuideTip, guideConfig)
        end
    end
end

function BattleLuaBridge:ShowTagTaskUI(closeAction)
    if UIMgr.IsOpened("BattleInfoPopup", false) then
        local onComplete = function()
            CriticalLog.Log("[战斗][关卡前流程][BattleLuaBridge.ShowTagTaskUI()] 关闭TagUI!");
            if closeAction ~= nil then
                closeAction()
                closeAction = nil
            end
        end

        CriticalLog.Log("[战斗][关卡前流程][BattleLuaBridge.ShowTagTaskUI()] 显示TagUI!");
        local battleInfoPopup = UIMgr.GetViewByTag("BattleInfoPopup")
        battleInfoPopup:InitData(onComplete)
    else
        Debug.LogErrorFormat("BattleInfoPopup 没有预分析 levelId=%d：", g_BattleClient.csBattle.arg.levelID)
        if closeAction then
            closeAction()
        end
    end
end

function BattleLuaBridge:ShowBattleInterActorPopup(desc, btnDescList, closeAction)
    if not UIMgr.IsOpened("BattleInterActorPopup", false) then
        UIMgr.Open(UIConf.BattleInterActorPopup, closeAction)
    end

    local battleInterActorPopup = UIMgr.GetViewByTag("BattleInterActorPopup")
    battleInterActorPopup:InitData(desc, btnDescList)
end

function BattleLuaBridge:CloseBattleInterActorPopup()
    if UIMgr.IsOpened("BattleInterActorPopup", false) then
        UIMgr.Close(UIConf.BattleInterActorPopup)
    end
end

function BattleLuaBridge:ShowMultiLevelUI(closeAction)
    --不是深空试炼关卡的话直接结束
    local stageCfg = LuaCfgMgr.Get("CommonStageEntry", g_BattleClient.csBattle.arg.commonStageId)
    if not stageCfg or stageCfg.Type ~= Define.EStageType.SoulTrial then
        if closeAction then
            closeAction()
        end
        return
    end
    if UIMgr.IsOpened("BattleSoulTrialLayer", false) then
        local onComplete = function()
            CriticalLog.Log("[战斗][关卡前流程][BattleLuaBridge.ShowMultiLevelUI()] 关闭连战UI!");
            if closeAction ~= nil then
                closeAction()
                closeAction = nil
            end
        end
        CriticalLog.Log("[战斗][关卡前流程][BattleLuaBridge.ShowMultiLevelUI()] 显示连战UI!");
        local battleSoulTrialLayer = UIMgr.GetViewByTag("BattleSoulTrialLayer")
        battleSoulTrialLayer:InitData(onComplete)
    else
        Debug.LogErrorFormat("BattleSoulTrialLayer 没有预分析 levelId=%d：", g_BattleClient.csBattle.arg.levelID)
        if closeAction then
            closeAction()
        end
    end
end

function BattleLuaBridge:ShowBossIntroductionUiTip(bossId, durationTime)
    if UIMgr.IsOpened("BattleMonsterInf") then
        local battleMonsterInf = UIMgr.GetViewByTag("BattleMonsterInf")
        battleMonsterInf:InitData(bossId, durationTime)
    else
        UIMgr.Open("BattleMonsterInf", bossId, durationTime)
        Debug.LogErrorFormat("BattleMonsterInf 没有预分析 bossId=%d：", bossId)
    end
end

function BattleLuaBridge:ShowBreakTipUI(durationTime)
    if UIMgr.IsOpened("BattleMainTips") then
        local battleMainTips = UIMgr.GetViewByTag("BattleMainTips")
        battleMainTips:InitData(durationTime)
    else
        Debug.LogError("BattleMainTips 没有预分析")
    end
end

---by 沧澜 ui预加载
function BattleLuaBridge:PreLoadUIs()
    g_BattleClient.ui:Preload()
end

----设置怪物3d血条隐藏
function BattleLuaBridge:HideAllMonsterHuds()
    g_BattleClient.ui:HideAllMonsterHuds()
end

---女主模型应用捏脸数据
function BattleLuaBridge:ApplyFaceData(suitId, character)
    ---@type cfg.RoleBaseModel
    local suitInfo = LuaCfgMgr.Get("FormationSuit", suitId)
    if CharacterMgr.NeedFaceData(character) then
        if suitInfo then
            BllMgr.GetFaceBLL():SetHost(character, suitInfo.Type, suitInfo.FaceHair)
        else
            BllMgr.GetFaceBLL():SetHost(character)
        end
    end
end

--- 获取Music对应的EventName
function BattleLuaBridge:GetMusicEventName(musicName)
    local cfg = LuaCfgMgr.Get('MusicFunctionBGMStateConnect', musicName)
    if cfg then
        return cfg.EventName
    end
end

---@param levelIDs list
function BattleLuaBridge:GetLevelIDFromCommonStageTab()
    local levelIDs = {}
    ---@type cfg.CommonStageEntry[]
    local cfgs = LuaCfgMgr.GetAll('CommonStageEntry')
    for i, v in pairs(cfgs) do
        -- 战斗关
        if v.SubType == 2 then
            -- 战斗关
            if not table.containsvalue(levelIDs, v.BattleLevelID) then
                table.insert(levelIDs, v.BattleLevelID)
            end
        end
    end
    return levelIDs
end

function BattleLuaBridge:GetCommonStageIDs(levelId)
    local commonStageIDs = {}
    ---@type cfg.CommonStageEntry[]
    local cfgs = LuaCfgMgr.GetAll('CommonStageEntry')
    for i, v in pairs(cfgs) do
        if v.BattleLevelID == levelId then
            if not table.containsvalue(commonStageIDs, v.ID) then
                table.insert(commonStageIDs, v.ID)
            end
        end
    end
    return commonStageIDs
end

---获取设备等级
--- 1，2，3，4数字越大设备越好
---小米9等级为2
function BattleLuaBridge:GetRecommendGQLevel()
    local level = BllMgr.GetSystemSettingBLL():GetRecommendGQLevel()
    return level
end

---获取关卡是否通关
function BattleLuaBridge:GetStageIsWin(stageId)
    local level = BllMgr.GetChapterAndStageBLL():StageIsUnLockById(stageId)
    return level
end

---获取服务器区ID
function BattleLuaBridge:GetZoneID()
    if GrpcMgr == nil then
        Debug.LogError("获取GetZoneID失败")
        return 0
    end

    local Id = GrpcMgr.GetMetaData("ZoneID")
    return Id
end

---上传OSS文件
---@param channelId  string 场景id
---@param filePath string   上传文件路径
---@param ext string 文件后缀名
---@param category string 分类名 用于目录分层，最多分两层。示例：test/test1
---@param fileName string 文件名 可以由系统自动生成，自定义文件名时ext参数失效
---@param callBack function(result) https://developer.papegames.com/docs/sdk/sdk_oss
function BattleLuaBridge:UpOssFile(channelId, filePath, ext, category, fileName)
    local callback = function(result)
        Debug.Log("oss msg = ", result.msg)
    end
    Debug.LogWarningFormat("channelId：%s filePath：%s ext：%s category：%s fileName：%s ", channelId, filePath,
            ext, category, fileName)
    SDKMgr.OSSUpLoad(channelId, filePath, ext, category, fileName, callback)
end

---获取玩家UID
function BattleLuaBridge:GePlayerID()
    if SelfProxyFactory == nil then
        Debug.LogError("获取PlayerID失败")
        return 0
    end
    return SelfProxyFactory.GetPlayerInfoProxy():GetUid()
end

---获取是否联网
function BattleLuaBridge:GetIsConnect()
    return GrpcMgr.IsConnected()
end

---判断GroupID
function BattleLuaBridge:ConditionGroupId(groupID)
    return ConditionCheckUtil.CheckConditionByCommonConditionGroupId(groupID)
end

---获取GameStateMgr的当前状态
function BattleLuaBridge:GetGameStateMgrState()
    return GameStateMgr.GetCurStateName()
end

---自动化测试代码使用
---关闭关卡tag界面
function BattleLuaBridge:CloseLevelPopUI()
    if UIMgr.IsOpened("BattleInfoPopup") then
        local battleInfoPopup = UIMgr.GetViewByTag("BattleInfoPopup")
        battleInfoPopup:_OnTimeEnd()
    end
end

function BattleLuaBridge:PlayVirabrate(amplitude, frequency, time)
    Profiler.BeginSample("PlayVirabrate")
    VibratorUtil.Play(amplitude, frequency, time)
    Profiler.EndSample("PlayVirabrate")
end

----------仅编辑器使用!!!!!!!!!!!!!!!------------------
function BattleLuaBridge:SetAtkBtnState(state)
    if not g_BattleClient.ui._slotMgr._attackSlot then
        return
    end
    if state == 1 then
        g_BattleClient.ui._slotMgr._attackSlot:_OnPointerDown()
    else
        g_BattleClient.ui._slotMgr._attackSlot:_OnPointerUp()
    end
end

function BattleLuaBridge:SetBoyActiveBtnState(state)
    if not g_BattleClient.ui._slotMgr._boyActiveSlot then
        return
    end
    if state == 1 then
        g_BattleClient.ui._slotMgr._boyActiveSlot:_OnPointerDown()
    else
        g_BattleClient.ui._slotMgr._boyActiveSlot:_OnPointerUp()
    end
end

function BattleLuaBridge:SetActiveBtnState(state)
    if not g_BattleClient.ui._slotMgr._activeSlot then
        return
    end
    if state == 1 then
        g_BattleClient.ui._slotMgr._activeSlot:_OnPointerDown()
    else
        g_BattleClient.ui._slotMgr._activeSlot:_OnPointerUp()
    end
end

function BattleLuaBridge:SetDodgeBtnState(state)
    if not g_BattleClient.ui._slotMgr._dodgeSlot then
        return
    end
    if state == 1 then
        g_BattleClient.ui._slotMgr._dodgeSlot:_OnPointerDown()
    else
        g_BattleClient.ui._slotMgr._dodgeSlot:_OnPointerUp()
    end
end

function BattleLuaBridge:SetCoopBtnState(state)
    if not g_BattleClient.ui._slotMgr._coopSlot then
        return
    end
    if state == 1 then
        g_BattleClient.ui._slotMgr._coopSlot:_OnPointerDown()
    else
        g_BattleClient.ui._slotMgr._coopSlot:_OnPointerUp()
    end
end

function BattleLuaBridge:SetPowerBtnState(state)
    if not g_BattleClient.ui._slotMgr._powerSlot then
        return
    end
    if state == 1 then
        g_BattleClient.ui._slotMgr._powerSlot:_OnPointerDown()
    else
        g_BattleClient.ui._slotMgr._powerSlot:_OnPointerUp()
    end
end

function BattleLuaBridge:SetSoundMgrMode(state)
    GameSoundMgr.SetAutoMode(state)
end

function BattleLuaBridge:IsSuitIDCanUse(suitID)
    local suitInfo = LuaCfgMgr.Get("FormationSuit", suitID)
    return suitInfo ~= nil
end

function BattleLuaBridge:IsWeaponSkinIDCanUse(weaponSkinID)
    local cfg = LuaCfgMgr.Get("MyWeaponSkin", weaponSkinID)
    return cfg ~= nil
end

function BattleLuaBridge:StageIsUnLockById(levelID)
    if not BllMgr then
        return true
    end
    local chapterAndStage = BllMgr.GetChapterAndStageBLL()
    if not chapterAndStage then
        return true
    end
    return chapterAndStage:StageIsUnLockById(levelID)
end

function BattleLuaBridge:GenOfflineHeroBornCfg(bornCfg, roleType)
    BattleUtil.GenOfflineHeroBornCfg(bornCfg, roleType)
end

function BattleLuaBridge:StartSettlementProcess(data, onServerAck)
    --- 切换到结算战斗状态
    g_battleLauncher.stateMachine:Switch(g_battleLauncher.settlementState, data, onServerAck)
end

function BattleLuaBridge:ShowBattleEndUI(isWin, closeAction)
    g_BattleClient.ui:ShowBattleEndUI(isWin, closeAction)
end

function BattleLuaBridge:ShowRoguePickEntriesUI(closeAction)
    if not UIMgr.IsOpened(UIConf.BattleRogueTemp) then
        UIMgr.Open(UIConf.BattleRogueTemp, closeAction)
    end
end

function BattleLuaBridge:GetCritHurtAdd(boyCfgId)
    local sCoreBaseInfo = LuaCfgMgr.Get("SCoreBaseInfo", boyCfgId)
    if sCoreBaseInfo then
        return sCoreBaseInfo.CritHurtAdd
    end
    return 0
end

function BattleLuaBridge:GetCardSetPassiveSkillConfigs(propertyID, roleType)
    local property = LuaCfgMgr.Get("CardSet", propertyID)
    if not property then
        Debug.LogError("请联系策划【苍真】，数值模式下【Team-CardSet】表没有该ID=" .. propertyID)
        return nil
    end

    local propertyPassiveSkill = nil
    if roleType == RoleType.Girl then
        propertyPassiveSkill = property.FemaleSkillPassive
    elseif roleType == RoleType.Boy then
        propertyPassiveSkill = property.MaleSkillPassive
    end

    local list = {}
    if propertyPassiveSkill then
        for i, v in ipairs(propertyPassiveSkill) do
            table.insert(list, { ID = v.ID, Num = v.Num })
        end
    end

    return list
end

----------仅编辑器使用!!!!!!!!!!!!!!!------------------

---仅调试使用!!!!!!!!!!!!
function BattleLuaBridge:DestroyFxTest(fullPath, levelID, arg)
    -- XTBUG-27855 连播模式，进入1-3战斗，信标资源丢失 
    -- 此下代码注释

    --local CLS = CS.X3Game.PreloadBatchMgr
    --CLS.UnloadAsset(PreloadBatchType.Battle, levelID, fullPath)
    --local asset = CSRes.Load(fullPath, CSRes.AutoReleaseMode.EndOfFrame)
    --CS.UnityEngine.GameObject.DestroyImmediate(asset, true)
end

g_battleLuaBridge = BattleLuaBridge
return BattleLuaBridge
