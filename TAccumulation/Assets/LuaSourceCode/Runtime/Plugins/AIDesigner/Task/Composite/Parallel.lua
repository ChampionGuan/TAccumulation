---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by chaoguan.
--- DateTime: 2020/11/26 16:57
---

local AIComposite = require("Runtime.Plugins.AIDesigner.Base.AITask").AIComposite

---与Sequence类似，只要一个子节点返回失败，此节点就会返回失败。 
---不同的是，此节点将同时运行其所有的子节点，而不是一次运行每个节点。 
---如果一个子节点返回失败，此节点将返回失败。所有子节点都返回成功，此节点就会返回成功。[会打断阻断逻辑]
---IconName:ParallelIcon.png
---@class AI.Parallel:AIComposite
local Parallel = AIUtil.class("Parallel", AIComposite)

---阻塞类型
Parallel.blockingUpType = AIBlockingUpType.Parallel

function Parallel:OnUpdate()
    local isBlockingUp = false
    for _, child in ipairs(self.children) do
        if not child.disabled then
            if child.state == AITaskState.Failure then
                return AITaskState.Failure
            elseif child.state == AITaskState.Running or child.state == AITaskState.BlockingUp then
                isBlockingUp = true
            end
        end
    end
    return isBlockingUp and AITaskState.Running or AITaskState.Success
end

return Parallel