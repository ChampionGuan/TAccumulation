---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by chaoguan.
--- DateTime: 2021/3/19 17:44
---

local AIComposite = require("Runtime.Plugins.AIDesigner.Base.AITask").AIComposite

---随机执行子节点，当遇到子节点返回失败时，则中断后续子节点执行；
---全部节点返回成功，该节点就返回成功
---IconName:RandomSequenceIcon.png
---@class AI.RandomSequence:AIComposite
local RandomSequence = AIUtil.class("RandomSequence", AIComposite)

function RandomSequence:OnEnter()
    ---@type AITask[]
    local children = {}
    for i = #self.children, 1, -1 do
        table.insert(children, table.remove(self.children, self.context:Random(1, i)))
    end
    self.children = children
end

function RandomSequence:OnUpdate()
    for _, child in ipairs(self.children) do
        if not child.disabled then
            if child.state == AITaskState.Running or child.state == AITaskState.BlockingUp then
                return AITaskState.BlockingUp
            elseif child.state == AITaskState.Failure then
                return AITaskState.Failure
            end
        end
    end
    return AITaskState.Success
end

function RandomSequence:CanRunChild(index)
    for i = 1, index - 1 do
        local child = self.children[i]
        if not child.disabled and (child.state == AITaskState.Failure or child.state == AITaskState.Running or child.state == AITaskState.BlockingUp) then
            return false
        end
    end
    return true
end

return RandomSequence