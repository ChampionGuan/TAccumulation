---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by jiaozhu.
--- DateTime: 2023/8/8 18:06
--- 状态
---@type FSM.FSMBaseNode
local FSMBaseNode = require(FSMConst.FSMBaseNodePath)
---@class FSM.FSMState:FSM.FSMBaseNode
---@field layer FSM.FSMLayer
local FSMState = class("FSMState", FSMBaseNode)

---@private
function FSMState:ctor()

    ---注册的transition
    ---@private
    ---@type FSM.FSMTransition
    self.transition = nil

    ---action序列
    ---@private
    ---@type FSM.FSMActionGroup
    self.actionGroup = nil

    ---状态结束之后的事件
    ---@private
    ---@type string
    self.finishEventName = nil

    self:SetIsUpdateEnabled(true)
end

--region 公开函数

---@param eventName string
function FSMState:FireEvent(eventName)
    self.layer:FireEvent(eventName)
end

function FSMState:ToString()
    return string.format("src=[%s],actionGroup=[%s]", FSMBaseNode.ToString(self), self.actionGroup:ToString())
end


--endregion

--region 底层调用

---@private
---@param layer FSM.FSMLayer
---@param finishEventName string
function FSMState:Set(layer, finishEventName)
    self:SetLayer(layer)
    self:SetFinishEventName(finishEventName)
end

---@private
---@param layer FSM.FSMLayer
function FSMState:SetLayer(layer)
    self.layer = layer
end

---@private
---@param finishEventName string
function FSMState:SetFinishEventName(finishEventName)
    self.finishEventName = finishEventName
end

---@private
---@param transition FSM.FSMTransition
function FSMState:SetTransition(transition)
    if self.transition ~= nil then
        self.context:LogErrorFormat("[FSMState:AddTransition] failed transition has already exist transition=[%s]", transition.name)
        return
    end
    self.transition = transition
end

---@private
---@param actionGroup FSM.FSMActionGroup
function FSMState:SetActionGroup(actionGroup)
    if self.actionGroup ~= nil then
        self.context:LogErrorFormat("[FSMState:SetActionGroup] failed actionGroup has already exist actionGroup=[%s]", actionGroup.name)
        return
    end
    self.actionGroup = actionGroup
end

---@private
---@param eventName string
---@return FSM.FSMTransition
function FSMState:GetTransitionStateName(eventName)
    return self.transition and self.transition:GetStateName(eventName) or nil
end
--endregion

--region 周期函数

---@private
function FSMState:OnAwake()
    if self.actionGroup:IsEnabled() then
        self.actionGroup:OnAwake()
    end
end

---@private
function FSMState:OnEnter()
    if self.actionGroup:IsEnabled() then
        self.actionGroup:Enter()
    end
end

---@private
function FSMState:OnUpdate()
    if not self:IsRunning() then
        return
    end
    if self.actionGroup:IsRunning() then
        self.actionGroup:OnUpdate()
    end
    if self:IsRunning() then
        if self.actionGroup:IsFinish() then
            self:Finish()
        end
    end
end

---@private
function FSMState:OnLateUpdate()
    if not self:IsRunning() then
        return
    end
    if self.actionGroup:IsRunning() then
        self.actionGroup:OnLateUpdate()
    end
end

---@private
function FSMState:OnFixedUpdate()
    if not self:IsRunning() then
        return
    end
    if self.actionGroup:IsRunning() then
        self.actionGroup:OnFixedUpdate()
    end
end

---@private
function FSMState:OnPause(isPaused)
    if not self:IsRunning() then
        return
    end
    if self.actionGroup:IsEnabled() then
        self.actionGroup:OnPause(isPaused)
    end
end

---@private
function FSMState:OnExit()
    if self.actionGroup:IsEnabled() then
        self.actionGroup:Exit()
    end
end

---@private
function FSMState:OnReset()
    if self.actionGroup:IsEnabled() then
        self.actionGroup:OnReset()
    end
end

---@private
function FSMState:OnDestroy()
    FSMHelper.ReleaseComponent(self.transition)
    self.transition = nil

    FSMHelper.ReleaseComponent(self.actionGroup)
    self.actionGroup = nil
end



--endregion

function FSMState:Finish()
    FSMBaseNode.Finish(self)
    if not string.isnilorempty(self.finishEventName) then
        self:FireEvent(self.finishEventName)
    else
        self.context:LogErrorFormat("[FSMState] Finish failed not find finishEventName")
    end
end

---@private
---@param id int 唯一id
---@return FSM.FSMAction
function FSMState:GetAction(id)
    return self.actionGroup:GetActionById(id)
end

---@private
---通知数据变更
function FSMState:NotifyValueChanged()
    self.actionGroup:NotifyValueChanged()
end

return FSMState