---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by jiaozhu.
--- DateTime: 2023/8/9 11:20
---所有action的基类

---@type FSM.FSMBaseNode
local FSMBaseNode = require(FSMConst.FSMBaseNodePath)
---@class FSM.FSMAction:FSM.FSMBaseNode
---@field private ownerId int
---@field private actionBeginTime number
---@field private actionEndTime number
local FSMAction = class("FSMAction", FSMBaseNode)

--region 派生类继承
---@private
function FSMAction:OnAwake()
end

---@private
function FSMAction:OnEnter()
end

---@private
function FSMAction:OnUpdate()
end

---@private
function FSMAction:OnLateUpdate()
end

---@private
function FSMAction:OnFixedUpdate()
end

---@private
---@param isPaused boolean
function FSMAction:OnPause(isPaused)
end

---@private
function FSMAction:OnExit()
end

---@private
function FSMAction:OnReset()
end

---@private
function FSMAction:OnDestroy()
end
--endregion


--region 底层调用
---@private
function FSMAction:Enter()
    local ok = FSMBaseNode.Enter(self)
    if ok and self.context and self.context:IsDebug() then
        self.actionBeginTime = self.fsm:GetCurrentTime()
        self.actionEndTime = 0
        if self.fsmState and self.fsmState.layer then
            self.context:LogFormat("[%s:OnEnter] layer=[%s],state=[%s],id=[%s]", self.name, self.fsmState.layer.name, self.fsmState.name,self.id)
        end
    end
    
end

---@private
function FSMAction:Exit()
    local ok = FSMBaseNode.Exit(self)
    if ok and self.context and self.context:IsDebug() then
        self.actionEndTime = self.fsm:GetCurrentTime()
        if self.fsmState and self.fsmState.layer then
            self.context:LogFormat("[%s:OnExit] layer=[%s],state=[%s],id=[%s]", self.name, self.fsmState.layer.name, self.fsmState.name,self.id)
        end
    end
    
end

---@private 通知数据变更
function FSMAction:NotifyValueChanged()
    for _,v in pairs(self) do
        if type(v) == "table" then
            if v.GetComponentType then
                if v:GetComponentType() == FSMConst.FSMComponent.FSMVar or v:GetComponentType() == FSMConst.FSMComponent.FSMVarArray then
                    v:NotifyValueChanged()
                end
            end
        end
    end
    self:NotifyRunningStateChanged(FSMConst.FSMRunningState.None,self.runningState)
end

--endregion

return FSMAction