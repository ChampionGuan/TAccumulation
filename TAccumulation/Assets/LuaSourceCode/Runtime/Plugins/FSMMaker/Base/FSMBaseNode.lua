---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by jiaozhu.
--- DateTime: 2023/8/16 11:02
---
---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by jiaozhu.
--- DateTime: 2023/8/8 18:02
---@type FSM.FSMBase
local FSMBase = require(FSMConst.FSMBasePath)
---所有FSM体系内的最基础类
---@class FSM.FSMBaseNode:FSM.FSMBase
---@field runningState FSM.FSMRunningState 当前的运行状态
---@field private isUpdateEnabled boolean 是否开启tick
---@field private ownerId int 所属节点的id
local FSMBaseNode = class("FSMBaseNode", FSMBase)

---@private
function FSMBaseNode:ctor()
    FSMBase.ctor(self)
    self.runningState = FSMConst.FSMRunningState.None
end

---@return boolean
function FSMBaseNode:IsRunning()
    return self:IsEnabled() and self.runningState == FSMConst.FSMRunningState.Entered
end

---@return boolean
function FSMBaseNode:IsFinish()
    return self.runningState == FSMConst.FSMRunningState.Finish
end

---@return boolean
function FSMBaseNode:IsEntered()
    return self.runningState~=nil and self.runningState~= FSMConst.FSMRunningState.None
end

---@return boolean
function FSMBaseNode:IsExited()
    return self.runningState~=nil and self.runningState== FSMConst.FSMRunningState.Exited
end

---完成
function FSMBaseNode:Finish()
    if self:IsEnabled() and self:IsRunning() then
        self:SetRunningState(FSMConst.FSMRunningState.Finish)
    end
end

--region 操作函数
---@private
---@param st FSM.FSMRunningState
function FSMBaseNode:SetRunningState(st)
    if st ~= self.runningState then
        local pre = self.runningState
        self.runningState = st
        if self:GetComponentType() == FSMConst.FSMComponent.FSMActionGroup or self:GetComponentType() == FSMConst.FSMComponent.FSMAction then
            self:NotifyRunningStateChanged(pre,st)
        end
        return true
    end
    return false
end

---是否可以update
---@private
---@return boolean
function FSMBaseNode:IsUpdateEnabled()
    return self.isUpdateEnabled
end

---@private
---@param isEnable boolean
function FSMBaseNode:SetIsUpdateEnabled(isEnable)
    self.isUpdateEnabled = isEnable
end

--endregion

--region 周期函数，子类重载

---@private
function FSMBaseNode:OnAwake()

end

---@private
function FSMBaseNode:OnEnter()

end

---@private
function FSMBaseNode:OnUpdate()

end

---@private
function FSMBaseNode:OnLateUpdate()

end

---@private
function FSMBaseNode:OnFixedUpdate()

end

---@private
---@param isPaused boolean
function FSMBaseNode:OnPause(isPaused)

end

---@private
function FSMBaseNode:OnExit()
end

---@private
function FSMBaseNode:OnReset()
end

---@private
function FSMBaseNode:OnDestroy()
end

--endregion

--region 操作函数，底层调用

---@private
---@param compType FSM.FSMComponent
function FSMBaseNode:SetComponentType(compType)
    self.componentType = compType
end

---@private
---@return FSM.FSMComponent
function FSMBaseNode:GetComponentType()
    return self.componentType
end

---@private
function FSMBaseNode:Enter()
    if self:SetRunningState(FSMConst.FSMRunningState.Entered) then
        self:OnEnter()
        return self:IsRunning()
    end
    return false
end

---@private
function FSMBaseNode:Exit()
    if self:SetRunningState(FSMConst.FSMRunningState.Exited) then
        self:OnExit()
        return true
    end
    return false
end

---@private
---数据变更通知，debug
function FSMBaseNode:NotifyRunningStateChanged(from,to)
    if not self.fsm or not self.fsmState or not self.fsmState.layer then return end
    local delegate = self.context:GetDelegate()
    if delegate then
        delegate:OnActionStateChanged(self.fsm.id,self.fsmState.layer.name,self.fsmState.name,self.id,from,to)
    end
end

---@private
---@param ownerId int
function FSMBaseNode:SetOwnerId(ownerId)
    self.ownerId = ownerId
end

--endregion

return FSMBaseNode